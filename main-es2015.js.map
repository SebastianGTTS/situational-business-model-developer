{"version":3,"file":"main-es2015.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/canvas-meta-model/canvas-definition-cell.ts","./src/app/canvas-meta-model/canvas-definition.service.ts","./src/app/canvas-meta-model/canvas-definition.ts","./src/app/canvas-meta-model/canvas-meta-model-api.service.ts","./src/app/canvas-meta-model/canvas-meta-model.module.ts","./src/app/canvas-meta-model/canvas-meta-model.service.ts","./src/app/canvas-meta-model/canvas-model-consistency.service.ts","./src/app/canvas-meta-model/company-model.service.ts","./src/app/canvas-meta-model/company-model.ts","./src/app/canvas-meta-model/conformance-report.ts","./src/app/canvas-meta-model/expert-model.service.ts","./src/app/canvas-meta-model/expert-model.ts","./src/app/canvas-meta-model/feature-model.service.ts","./src/app/canvas-meta-model/feature-model.ts","./src/app/canvas-meta-model/feature.ts","./src/app/canvas-meta-model/instance-artifact-data.ts","./src/app/canvas-meta-model/instance.ts","./src/app/canvas-meta-model/relationships.ts","./src/app/canvas-meta-model/trace.ts","./src/app/canvas/api/compare/compare.component.ts","./src/app/canvas/api/compare/compare.component.html","./src/app/canvas/api/create-canvas-configuration/create-canvas-configuration.component.ts","./src/app/canvas/api/create-canvas-configuration/create-canvas-configuration.component.html","./src/app/canvas/api/create-canvas/create-canvas.component.ts","./src/app/canvas/api/create-canvas/create-canvas.component.html","./src/app/canvas/api/create-competitor-canvas/create-competitor-canvas.component.ts","./src/app/canvas/api/create-competitor-canvas/create-competitor-canvas.component.html","./src/app/canvas/api/edit-canvas/edit-canvas.component.ts","./src/app/canvas/api/edit-canvas/edit-canvas.component.html","./src/app/canvas/api/edit-competitor-canvas/edit-competitor-canvas.component.ts","./src/app/canvas/api/edit-competitor-canvas/edit-competitor-canvas.component.html","./src/app/canvas/api/edit-competitors/edit-competitors.component.ts","./src/app/canvas/api/edit-competitors/edit-competitors.component.html","./src/app/canvas/api/edit-model/edit-model.component.ts","./src/app/canvas/api/edit-model/edit-model.component.html","./src/app/canvas/api/instance-loader.service.ts","./src/app/canvas/api/refine-canvas/refine-canvas.component.ts","./src/app/canvas/api/refine-canvas/refine-canvas.component.html","./src/app/canvas/api/select-canvas-definition-configuration/select-canvas-definition-configuration.component.ts","./src/app/canvas/api/select-canvas-definition-configuration/select-canvas-definition-configuration.component.html","./src/app/canvas/api/view-canvas/view-canvas.component.ts","./src/app/canvas/api/view-canvas/view-canvas.component.html","./src/app/canvas/canvas-api.service.ts","./src/app/canvas/canvas-definition/canvas-definition-form/canvas-definition-form.component.ts","./src/app/canvas/canvas-definition/canvas-definition-form/canvas-definition-form.component.html","./src/app/canvas/canvas-definition/canvas-definition-loader.service.ts","./src/app/canvas/canvas-definition/canvas-definition-overview/canvas-definition-overview.component.ts","./src/app/canvas/canvas-definition/canvas-definition-overview/canvas-definition-overview.component.html","./src/app/canvas/canvas-definition/canvas-definition-relationships-form/canvas-definition-relationships-form.component.ts","./src/app/canvas/canvas-definition/canvas-definition-relationships-form/canvas-definition-relationships-form.component.html","./src/app/canvas/canvas-definition/canvas-definition-row-form/canvas-definition-row-form.component.ts","./src/app/canvas/canvas-definition/canvas-definition-row-form/canvas-definition-row-form.component.html","./src/app/canvas/canvas-definition/canvas-definition/canvas-definition.component.ts","./src/app/canvas/canvas-definition/canvas-definition/canvas-definition.component.html","./src/app/canvas/canvas-definition/canvas-definitions/canvas-definitions.component.ts","./src/app/canvas/canvas-definition/canvas-definitions/canvas-definitions.component.html","./src/app/canvas/canvas-resolve.service.ts","./src/app/canvas/canvas-routing.module.ts","./src/app/canvas/canvas.module.ts","./src/app/canvas/canvas.service.ts","./src/app/canvas/company-model/company-model-edit/company-model-edit.component.ts","./src/app/canvas/company-model/company-model-edit/company-model-edit.component.html","./src/app/canvas/company-model/company-model-loader.service.ts","./src/app/canvas/company-model/company-model-select-expert-knowledge/company-model-select-expert-knowledge.component.ts","./src/app/canvas/company-model/company-model-select-expert-knowledge/company-model-select-expert-knowledge.component.html","./src/app/canvas/company-model/company-model/company-model.component.ts","./src/app/canvas/company-model/company-model/company-model.component.html","./src/app/canvas/company-model/company-models/company-models.component.ts","./src/app/canvas/company-model/company-models/company-models.component.html","./src/app/canvas/elements/canvas-elements/canvas-elements.component.ts","./src/app/canvas/elements/canvas-elements/canvas-elements.component.html","./src/app/canvas/expert-model/expert-model-edit/expert-model-edit.component.ts","./src/app/canvas/expert-model/expert-model-edit/expert-model-edit.component.html","./src/app/canvas/expert-model/expert-model-loader.service.ts","./src/app/canvas/expert-model/expert-model/expert-model.component.ts","./src/app/canvas/expert-model/expert-model/expert-model.component.html","./src/app/canvas/expert-model/expert-models/expert-models.component.ts","./src/app/canvas/expert-model/expert-models/expert-models.component.html","./src/app/canvas/feature-model/delete-feature-confirm/delete-feature-confirm.component.ts","./src/app/canvas/feature-model/delete-feature-confirm/delete-feature-confirm.component.html","./src/app/canvas/feature-model/feature-building-block/feature-building-block.component.ts","./src/app/canvas/feature-model/feature-building-block/feature-building-block.component.html","./src/app/canvas/feature-model/feature-form/feature-form.component.ts","./src/app/canvas/feature-model/feature-form/feature-form.component.html","./src/app/canvas/feature-model/feature-model-edit/feature-model-edit.component.ts","./src/app/canvas/feature-model/feature-model-edit/feature-model-edit.component.html","./src/app/canvas/feature-model/feature-model-form/feature-model-form.component.ts","./src/app/canvas/feature-model/feature-model-form/feature-model-form.component.html","./src/app/canvas/feature-model/feature-model-subform/feature-model-subform.component.ts","./src/app/canvas/feature-model/feature-model-subform/feature-model-subform.component.html","./src/app/canvas/feature-model/feature-model/feature-model.component.ts","./src/app/canvas/feature-model/feature-model/feature-model.component.html","./src/app/canvas/feature-model/feature-tree/feature-tree.component.ts","./src/app/canvas/feature-model/feature-tree/feature-tree.component.html","./src/app/canvas/feature-model/import-export.service.ts","./src/app/canvas/feature-model/model-import-view/model-import-view.component.ts","./src/app/canvas/feature-model/model-import-view/model-import-view.component.html","./src/app/canvas/feature-model/model-info-box/model-info-box.component.ts","./src/app/canvas/feature-model/model-info-box/model-info-box.component.html","./src/app/canvas/feature-model/model-list/model-list.component.ts","./src/app/canvas/feature-model/model-list/model-list.component.html","./src/app/canvas/form-services/canvas-definition-row-form.service.ts","./src/app/canvas/form-services/feature-model-form.service.ts","./src/app/canvas/form-services/feature-model-instance-form.service.ts","./src/app/canvas/instances/add-decision-modal/add-decision-modal.component.ts","./src/app/canvas/instances/add-decision-modal/add-decision-modal.component.html","./src/app/canvas/instances/canvas-building-block/canvas-building-block.component.ts","./src/app/canvas/instances/canvas-building-block/canvas-building-block.component.html","./src/app/canvas/instances/canvas/canvas.component.ts","./src/app/canvas/instances/canvas/canvas.component.html","./src/app/canvas/instances/delete-decision-modal/delete-decision-modal.component.ts","./src/app/canvas/instances/delete-decision-modal/delete-decision-modal.component.html","./src/app/canvas/instances/example/example.component.ts","./src/app/canvas/instances/example/example.component.html","./src/app/canvas/instances/feature-model-instance-subform/feature-model-instance-subform.component.ts","./src/app/canvas/instances/feature-model-instance-subform/feature-model-instance-subform.component.html","./src/app/canvas/instances/instance-compare-form/instance-compare-form.component.ts","./src/app/canvas/instances/instance-compare-form/instance-compare-form.component.html","./src/app/canvas/instances/instance-form/instance-form.component.ts","./src/app/canvas/instances/instance-form/instance-form.component.html","./src/app/canvas/instances/instance-info-box/instance-info-box.component.ts","./src/app/canvas/instances/instance-info-box/instance-info-box.component.html","./src/app/canvas/instances/instance-list/instance-list.component.ts","./src/app/canvas/instances/instance-list/instance-list.component.html","./src/app/canvas/instances/instance-select-pattern-form/instance-select-pattern-form.component.ts","./src/app/canvas/instances/instance-select-pattern-form/instance-select-pattern-form.component.html","./src/app/canvas/instances/instance.service.ts","./src/app/canvas/instances/instance/instance.component.ts","./src/app/canvas/instances/instance/instance.component.html","./src/app/canvas/instances/pattern-description-modal/pattern-description-modal.component.ts","./src/app/canvas/instances/pattern-description-modal/pattern-description-modal.component.html","./src/app/canvas/instances/pattern-hint/pattern-hint.component.ts","./src/app/canvas/instances/pattern-hint/pattern-hint.component.html","./src/app/canvas/instances/pattern-view/pattern-view.component.ts","./src/app/canvas/instances/pattern-view/pattern-view.component.html","./src/app/canvas/instances/pattern/pattern.component.ts","./src/app/canvas/instances/pattern/pattern.component.html","./src/app/canvas/merge/merge-expert-models/merge-expert-models.component.ts","./src/app/canvas/merge/merge-expert-models/merge-expert-models.component.html","./src/app/canvas/merge/merge-into-tree/merge-into-tree.component.ts","./src/app/canvas/merge/merge-into-tree/merge-into-tree.component.html","./src/app/canvas/merge/merge-model-view/merge-model-view.component.ts","./src/app/canvas/merge/merge-model-view/merge-model-view.component.html","./src/app/canvas/merge/merge-tree/merge-tree.component.ts","./src/app/canvas/merge/merge-tree/merge-tree.component.html","./src/app/canvas/merge/merge.service.ts","./src/app/canvas/merge/trace-modal/trace-modal.component.ts","./src/app/canvas/merge/trace-modal/trace-modal.component.html","./src/app/canvas/relationships/cross-tree-relationship-form/cross-tree-relationship-form.component.ts","./src/app/canvas/relationships/cross-tree-relationship-form/cross-tree-relationship-form.component.html","./src/app/canvas/relationships/cross-tree-relationship-modal/cross-tree-relationship-modal.component.ts","./src/app/canvas/relationships/cross-tree-relationship-modal/cross-tree-relationship-modal.component.html","./src/app/change-password-form/change-password-form.component.ts","./src/app/change-password-form/change-password-form.component.html","./src/app/database/auth.guard.ts","./src/app/database/auth.service.ts","./src/app/database/couchdb-auth.service.ts","./src/app/database/database-model.ts","./src/app/database/database.module.ts","./src/app/database/default-element.service.ts","./src/app/database/element-loader.service.ts","./src/app/database/import-export.service.ts","./src/app/database/local-auth.service.ts","./src/app/database/login.guard.ts","./src/app/database/pouchdb.service.ts","./src/app/development-process-registry/bm-process/bm-process.service.ts","./src/app/development-process-registry/bm-process/bm-process.ts","./src/app/development-process-registry/bm-process/decision.ts","./src/app/development-process-registry/development-method/artifact-mapping.ts","./src/app/development-process-registry/development-method/development-method.service.ts","./src/app/development-process-registry/development-method/development-method.ts","./src/app/development-process-registry/development-method/execution-step.ts","./src/app/development-process-registry/development-method/multiple-mapping-selection.ts","./src/app/development-process-registry/development-method/multiple-selection.ts","./src/app/development-process-registry/development-method/selection.ts","./src/app/development-process-registry/development-process-registry.module.ts","./src/app/development-process-registry/knowledge/domain.service.ts","./src/app/development-process-registry/knowledge/domain.ts","./src/app/development-process-registry/meta-model.service.ts","./src/app/development-process-registry/method-elements/artifact/artifact.service.ts","./src/app/development-process-registry/method-elements/artifact/artifact.ts","./src/app/development-process-registry/method-elements/method-element.service.ts","./src/app/development-process-registry/method-elements/method-element.ts","./src/app/development-process-registry/method-elements/situational-factor/situational-factor-definition.ts","./src/app/development-process-registry/method-elements/situational-factor/situational-factor.service.ts","./src/app/development-process-registry/method-elements/situational-factor/situational-factor.ts","./src/app/development-process-registry/method-elements/stakeholder/stakeholder.service.ts","./src/app/development-process-registry/method-elements/stakeholder/stakeholder.ts","./src/app/development-process-registry/method-elements/tool/tool.service.ts","./src/app/development-process-registry/method-elements/tool/tool.ts","./src/app/development-process-registry/method-elements/type/type.service.ts","./src/app/development-process-registry/method-elements/type/type.ts","./src/app/development-process-registry/module-api/module.service.ts","./src/app/development-process-registry/module-api/module.ts","./src/app/development-process-registry/module-api/process-api.service.ts","./src/app/development-process-registry/process-pattern/process-pattern.service.ts","./src/app/development-process-registry/process-pattern/process-pattern.ts","./src/app/development-process-registry/running-process/artifact-data.service.ts","./src/app/development-process-registry/running-process/artifact-data.ts","./src/app/development-process-registry/running-process/artifact-version.ts","./src/app/development-process-registry/running-process/comment.ts","./src/app/development-process-registry/running-process/concrete-artifact.service.ts","./src/app/development-process-registry/running-process/method-execution.service.ts","./src/app/development-process-registry/running-process/output-artifact-mapping.ts","./src/app/development-process-registry/running-process/process-execution-modeler.service.ts","./src/app/development-process-registry/running-process/process-execution.service.ts","./src/app/development-process-registry/running-process/running-artifact.ts","./src/app/development-process-registry/running-process/running-method.ts","./src/app/development-process-registry/running-process/running-process.service.ts","./src/app/development-process-registry/running-process/running-process.ts","./src/app/development-process-registry/running-process/step-artifact.ts","./src/app/development-process-registry/running-process/step-input-artifact.ts","./src/app/development-process-registry/running-process/step.ts","./src/app/development-process-view/bpmn-extensions/running-process-view/RunningProcessViewRenderer.ts","./src/app/development-process-view/bpmn-extensions/running-process-view/index.ts","./src/app/development-process-view/development-process-view.module.ts","./src/app/development-process-view/kanban-board/kanban-board.component.ts","./src/app/development-process-view/kanban-board/kanban-board.component.html","./src/app/development-process-view/running-process-kanban-board/running-process-kanban-board.component.ts","./src/app/development-process-view/running-process-kanban-board/running-process-kanban-board.component.html","./src/app/development-process-view/running-process-method-comment-form/running-process-method-comment-form.component.ts","./src/app/development-process-view/running-process-method-comment-form/running-process-method-comment-form.component.html","./src/app/development-process-view/running-process-method-comments/running-process-method-comments.component.ts","./src/app/development-process-view/running-process-method-comments/running-process-method-comments.component.html","./src/app/development-process-view/running-process-viewer/running-process-viewer.component.ts","./src/app/development-process-view/running-process-viewer/running-process-viewer.component.html","./src/app/development-process-view/shared/bpmn-viewer.service.ts","./src/app/development-process-view/shared/running-process-viewer.service.ts","./src/app/development-processes/artifact-definition-form/artifact-definition-form.component.ts","./src/app/development-processes/artifact-definition-form/artifact-definition-form.component.html","./src/app/development-processes/artifact/artifact.component.ts","./src/app/development-processes/artifact/artifact.component.html","./src/app/development-processes/artifacts-group-info/artifacts-group-info.component.ts","./src/app/development-processes/artifacts-group-info/artifacts-group-info.component.html","./src/app/development-processes/artifacts-selection-form/artifacts-selection-form.component.ts","./src/app/development-processes/artifacts-selection-form/artifacts-selection-form.component.html","./src/app/development-processes/artifacts/artifacts.component.ts","./src/app/development-processes/artifacts/artifacts.component.html","./src/app/development-processes/bm-process-diagram/bm-process-diagram.component.ts","./src/app/development-processes/bm-process-diagram/bm-process-diagram.component.html","./src/app/development-processes/bm-process/bm-process.component.ts","./src/app/development-processes/bm-process/bm-process.component.html","./src/app/development-processes/bm-processes/bm-processes.component.ts","./src/app/development-processes/bm-processes/bm-processes.component.html","./src/app/development-processes/bpmn-extensions/bm-process-patterns/BmProcessPatternsContextPad.ts","./src/app/development-processes/bpmn-extensions/bm-process-patterns/BmProcessPatternsOverrideContextPadProvider.ts","./src/app/development-processes/bpmn-extensions/bm-process-patterns/BmProcessPatternsPaletteProvider.ts","./src/app/development-processes/bpmn-extensions/bm-process-patterns/BmProcessPatternsReplaceMenuProvider.ts","./src/app/development-processes/bpmn-extensions/bm-process-patterns/index.ts","./src/app/development-processes/bpmn-extensions/bm-process/BmProcessContextPadProvider.ts","./src/app/development-processes/bpmn-extensions/bm-process/BmProcessLabelEditing.ts","./src/app/development-processes/bpmn-extensions/bm-process/BmProcessPaletteProvider.ts","./src/app/development-processes/bpmn-extensions/bm-process/BmProcessRuleProvider.ts","./src/app/development-processes/bpmn-extensions/bm-process/BmProcessTaskRenderer.ts","./src/app/development-processes/bpmn-extensions/bm-process/index.ts","./src/app/development-processes/concrete-artifact-form/concrete-artifact-form.component.ts","./src/app/development-processes/concrete-artifact-form/concrete-artifact-form.component.html","./src/app/development-processes/concrete-artifact/concrete-artifact.component.ts","./src/app/development-processes/concrete-artifact/concrete-artifact.component.html","./src/app/development-processes/concrete-artifacts/concrete-artifacts.component.ts","./src/app/development-processes/concrete-artifacts/concrete-artifacts.component.html","./src/app/development-processes/configuration-form-placeholder.directive.ts","./src/app/development-processes/confirm-leave-modal/confirm-leave-modal.component.ts","./src/app/development-processes/confirm-leave-modal/confirm-leave-modal.component.html","./src/app/development-processes/development-method-artifact-mapping/development-method-artifact-mapping.component.ts","./src/app/development-processes/development-method-artifact-mapping/development-method-artifact-mapping.component.html","./src/app/development-processes/development-method-artifact-mappings/development-method-artifact-mappings.component.ts","./src/app/development-processes/development-method-artifact-mappings/development-method-artifact-mappings.component.html","./src/app/development-processes/development-method-form/development-method-form.component.ts","./src/app/development-processes/development-method-form/development-method-form.component.html","./src/app/development-processes/development-method-incomplete-modal/development-method-incomplete-modal.component.ts","./src/app/development-processes/development-method-incomplete-modal/development-method-incomplete-modal.component.html","./src/app/development-processes/development-method-select-execution-step/development-method-select-execution-step.component.ts","./src/app/development-processes/development-method-select-execution-step/development-method-select-execution-step.component.html","./src/app/development-processes/development-method-select-execution-steps/development-method-select-execution-steps.component.ts","./src/app/development-processes/development-method-select-execution-steps/development-method-select-execution-steps.component.html","./src/app/development-processes/development-method-selection-form/development-method-selection-form.component.ts","./src/app/development-processes/development-method-selection-form/development-method-selection-form.component.html","./src/app/development-processes/development-method-summary/development-method-summary.component.ts","./src/app/development-processes/development-method-summary/development-method-summary.component.html","./src/app/development-processes/development-method/development-method.component.ts","./src/app/development-processes/development-method/development-method.component.html","./src/app/development-processes/development-methods-selection-form/development-methods-selection-form.component.ts","./src/app/development-processes/development-methods-selection-form/development-methods-selection-form.component.html","./src/app/development-processes/development-methods/development-methods.component.ts","./src/app/development-processes/development-methods/development-methods.component.html","./src/app/development-processes/development-processes-routing.module.ts","./src/app/development-processes/development-processes.module.ts","./src/app/development-processes/domain/domain.component.ts","./src/app/development-processes/domain/domain.component.html","./src/app/development-processes/domains/domains.component.ts","./src/app/development-processes/domains/domains.component.html","./src/app/development-processes/examples-form/examples-form.component.ts","./src/app/development-processes/examples-form/examples-form.component.html","./src/app/development-processes/method-element-form/method-element-form.component.ts","./src/app/development-processes/method-element-form/method-element-form.component.html","./src/app/development-processes/method-element-group-info/method-element-group-info.component.ts","./src/app/development-processes/method-element-group-info/method-element-group-info.component.html","./src/app/development-processes/method-element-info/method-element-info.component.ts","./src/app/development-processes/method-element-info/method-element-info.component.html","./src/app/development-processes/method-element-list/method-element-list.component.ts","./src/app/development-processes/method-element-list/method-element-list.component.html","./src/app/development-processes/method-element-selection-form/method-element-selection-form.component.ts","./src/app/development-processes/method-element-selection-form/method-element-selection-form.component.html","./src/app/development-processes/method-elements-selection-form/method-elements-selection-form.component.ts","./src/app/development-processes/method-elements-selection-form/method-elements-selection-form.component.html","./src/app/development-processes/method-elements/method-elements.component.ts","./src/app/development-processes/method-elements/method-elements.component.html","./src/app/development-processes/method-info-step/method-info-step.component.ts","./src/app/development-processes/method-info-step/method-info-step.component.html","./src/app/development-processes/method-info-steps/method-info-steps.component.ts","./src/app/development-processes/method-info-steps/method-info-steps.component.html","./src/app/development-processes/method-info/method-info.component.ts","./src/app/development-processes/method-info/method-info.component.html","./src/app/development-processes/pattern-info/pattern-info.component.ts","./src/app/development-processes/pattern-info/pattern-info.component.html","./src/app/development-processes/pipes/list.pipe.ts","./src/app/development-processes/pipes/multiple.pipe.ts","./src/app/development-processes/process-pattern-diagram/process-pattern-diagram.component.ts","./src/app/development-processes/process-pattern-diagram/process-pattern-diagram.component.html","./src/app/development-processes/process-pattern-form/process-pattern-form.component.ts","./src/app/development-processes/process-pattern-form/process-pattern-form.component.html","./src/app/development-processes/process-pattern-selection-form/process-pattern-selection-form.component.ts","./src/app/development-processes/process-pattern-selection-form/process-pattern-selection-form.component.html","./src/app/development-processes/process-pattern-types-form/process-pattern-types-form.component.ts","./src/app/development-processes/process-pattern-types-form/process-pattern-types-form.component.html","./src/app/development-processes/process-pattern/process-pattern.component.ts","./src/app/development-processes/process-pattern/process-pattern.component.html","./src/app/development-processes/process-patterns-selection-form/process-patterns-selection-form.component.ts","./src/app/development-processes/process-patterns-selection-form/process-patterns-selection-form.component.html","./src/app/development-processes/process-patterns/process-patterns.component.ts","./src/app/development-processes/process-patterns/process-patterns.component.html","./src/app/development-processes/running-process-artifact-export-form/running-process-artifact-export-form.component.ts","./src/app/development-processes/running-process-artifact-export-form/running-process-artifact-export-form.component.html","./src/app/development-processes/running-process-artifact-import-form/running-process-artifact-import-form.component.ts","./src/app/development-processes/running-process-artifact-import-form/running-process-artifact-import-form.component.html","./src/app/development-processes/running-process-artifact-rename-form/running-process-artifact-rename-form.component.ts","./src/app/development-processes/running-process-artifact-rename-form/running-process-artifact-rename-form.component.html","./src/app/development-processes/running-process-method/running-process-method.component.ts","./src/app/development-processes/running-process-method/running-process-method.component.html","./src/app/development-processes/running-process-select-input-artifacts/running-process-select-input-artifacts.component.ts","./src/app/development-processes/running-process-select-input-artifacts/running-process-select-input-artifacts.component.html","./src/app/development-processes/running-process-select-output-artifact/running-process-select-output-artifact.component.ts","./src/app/development-processes/running-process-select-output-artifact/running-process-select-output-artifact.component.html","./src/app/development-processes/running-process-select-output-artifacts/running-process-select-output-artifacts.component.ts","./src/app/development-processes/running-process-select-output-artifacts/running-process-select-output-artifacts.component.html","./src/app/development-processes/running-process/running-process.component.ts","./src/app/development-processes/running-process/running-process.component.html","./src/app/development-processes/running-processes/running-processes.component.ts","./src/app/development-processes/running-processes/running-processes.component.html","./src/app/development-processes/shared/artifact-mapping-form.service.ts","./src/app/development-processes/shared/bm-process-loader.service.ts","./src/app/development-processes/shared/bpmn.service.ts","./src/app/development-processes/shared/concrete-artifact-loader.service.ts","./src/app/development-processes/shared/development-method-loader.service.ts","./src/app/development-processes/shared/diagram-change.guard.ts","./src/app/development-processes/shared/domain-loader.service.ts","./src/app/development-processes/shared/execution-steps-form.service.ts","./src/app/development-processes/shared/method-element-loader.service.ts","./src/app/development-processes/shared/method-info-steps-form.service.ts","./src/app/development-processes/shared/output-artifact-mapping-form.service.ts","./src/app/development-processes/shared/process-pattern-loader.service.ts","./src/app/development-processes/shared/running-method-loader.service.ts","./src/app/development-processes/shared/running-process-loader.service.ts","./src/app/development-processes/situational-factor-form/situational-factor-form.component.ts","./src/app/development-processes/situational-factor-form/situational-factor-form.component.html","./src/app/development-processes/situational-factor-selection-form/situational-factor-selection-form.component.ts","./src/app/development-processes/situational-factor-selection-form/situational-factor-selection-form.component.html","./src/app/development-processes/situational-factor/situational-factor.component.ts","./src/app/development-processes/situational-factor/situational-factor.component.html","./src/app/development-processes/situational-factors-overview/situational-factors-overview.component.ts","./src/app/development-processes/situational-factors-overview/situational-factors-overview.component.html","./src/app/development-processes/situational-factors-selection-form/situational-factors-selection-form.component.ts","./src/app/development-processes/situational-factors-selection-form/situational-factors-selection-form.component.html","./src/app/development-processes/situational-factors/situational-factors.component.ts","./src/app/development-processes/situational-factors/situational-factors.component.html","./src/app/development-processes/stakeholder/stakeholder.component.ts","./src/app/development-processes/stakeholder/stakeholder.component.html","./src/app/development-processes/stakeholders-group-info/stakeholders-group-info.component.ts","./src/app/development-processes/stakeholders-group-info/stakeholders-group-info.component.html","./src/app/development-processes/stakeholders-selection-form/stakeholders-selection-form.component.ts","./src/app/development-processes/stakeholders-selection-form/stakeholders-selection-form.component.html","./src/app/development-processes/stakeholders/stakeholders.component.ts","./src/app/development-processes/stakeholders/stakeholders.component.html","./src/app/development-processes/tool/tool.component.ts","./src/app/development-processes/tool/tool.component.html","./src/app/development-processes/tools-group-info/tools-group-info.component.ts","./src/app/development-processes/tools-group-info/tools-group-info.component.html","./src/app/development-processes/tools-selection-form/tools-selection-form.component.ts","./src/app/development-processes/tools-selection-form/tools-selection-form.component.html","./src/app/development-processes/tools/tools.component.ts","./src/app/development-processes/tools/tools.component.html","./src/app/development-processes/type/type.component.ts","./src/app/development-processes/type/type.component.html","./src/app/development-processes/types-selection-form/types-selection-form.component.ts","./src/app/development-processes/types-selection-form/types-selection-form.component.html","./src/app/development-processes/types/types.component.ts","./src/app/development-processes/types/types.component.html","./src/app/enaction-explanation/enaction-explanation.component.ts","./src/app/enaction-explanation/enaction-explanation.component.html","./src/app/feature-modeler-explanation/feature-modeler-explanation.component.ts","./src/app/feature-modeler-explanation/feature-modeler-explanation.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/method-modeler-explanation/method-modeler-explanation.component.ts","./src/app/method-modeler-explanation/method-modeler-explanation.component.html","./src/app/model/author.ts","./src/app/model/utils.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/options/options.component.ts","./src/app/options/options.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/shared/api-navigation/api-navigation.component.ts","./src/app/shared/api-navigation/api-navigation.component.html","./src/app/shared/author-form/author-form.component.ts","./src/app/shared/author-form/author-form.component.html","./src/app/shared/author-info/author-info.component.ts","./src/app/shared/author-info/author-info.component.html","./src/app/shared/delete-modal/delete-modal.component.ts","./src/app/shared/delete-modal/delete-modal.component.html","./src/app/shared/description-form/description-form.component.ts","./src/app/shared/description-form/description-form.component.html","./src/app/shared/domain-selection-form/domain-selection-form.component.ts","./src/app/shared/domain-selection-form/domain-selection-form.component.html","./src/app/shared/domains-selection-form/domains-selection-form.component.ts","./src/app/shared/domains-selection-form/domains-selection-form.component.html","./src/app/shared/form-array-list/form-array-list.component.ts","./src/app/shared/form-array-list/form-array-list.component.html","./src/app/shared/list-wrapper/list-wrapper.component.ts","./src/app/shared/list-wrapper/list-wrapper.component.html","./src/app/shared/list.service.ts","./src/app/shared/results-list-item/results-list-item.component.ts","./src/app/shared/results-list-item/results-list-item.component.html","./src/app/shared/search.service.ts","./src/app/shared/search/search.component.ts","./src/app/shared/search/search.component.html","./src/app/shared/shared.module.ts","./src/app/shared/step-errors/step-errors.component.ts","./src/app/shared/step-errors/step-errors.component.html","./src/app/shared/utils.ts","./src/app/start-business-developer/start-business-developer.component.ts","./src/app/start-business-developer/start-business-developer.component.html","./src/app/start-method-engineer/start-method-engineer.component.ts","./src/app/start-method-engineer/start-method-engineer.component.html","./src/app/start/start.component.ts","./src/app/start/start.component.html","./src/app/tool-explanation/tool-explanation.component.ts","./src/app/tool-explanation/tool-explanation.component.html","./src/app/user.service.ts","./src/app/whiteboard-meta-model/canvas-note.ts","./src/app/whiteboard-meta-model/whiteboard-canvas.service.ts","./src/app/whiteboard-meta-model/whiteboard-instance.service.ts","./src/app/whiteboard-meta-model/whiteboard-instance.ts","./src/app/whiteboard-meta-model/whiteboard-meta-model-api.service.ts","./src/app/whiteboard-meta-model/whiteboard-meta-model.module.ts","./src/app/whiteboard-meta-model/whiteboard-meta-model.service.ts","./src/app/whiteboard-meta-model/whiteboard-template.service.ts","./src/app/whiteboard-meta-model/whiteboard-template.ts","./src/app/whiteboard-meta-model/whiteboard.ts","./src/app/whiteboard/api/create-whiteboard-instance/create-whiteboard-instance.component.ts","./src/app/whiteboard/api/create-whiteboard-instance/create-whiteboard-instance.component.html","./src/app/whiteboard/api/edit-whiteboard-instance/edit-whiteboard-instance.component.ts","./src/app/whiteboard/api/edit-whiteboard-instance/edit-whiteboard-instance.component.html","./src/app/whiteboard/api/select-whiteboard-template-configuration/select-whiteboard-template-configuration.component.ts","./src/app/whiteboard/api/select-whiteboard-template-configuration/select-whiteboard-template-configuration.component.html","./src/app/whiteboard/api/view-whiteboard-instance/view-whiteboard-instance.component.ts","./src/app/whiteboard/api/view-whiteboard-instance/view-whiteboard-instance.component.html","./src/app/whiteboard/confirm-leave-whiteboard-modal/confirm-leave-whiteboard-modal.component.ts","./src/app/whiteboard/confirm-leave-whiteboard-modal/confirm-leave-whiteboard-modal.component.html","./src/app/whiteboard/shared/whiteboard-change.guard.ts","./src/app/whiteboard/shared/whiteboard-instance-loader.service.ts","./src/app/whiteboard/shared/whiteboard-template-loader.service.ts","./src/app/whiteboard/whiteboard-api.service.ts","./src/app/whiteboard/whiteboard-canvas-view/whiteboard-canvas-view.component.ts","./src/app/whiteboard/whiteboard-canvas-view/whiteboard-canvas-view.component.html","./src/app/whiteboard/whiteboard-canvas/color-definition.ts","./src/app/whiteboard/whiteboard-canvas/color-form.service.ts","./src/app/whiteboard/whiteboard-canvas/control-form.service.ts","./src/app/whiteboard/whiteboard-canvas/properties-form.service.ts","./src/app/whiteboard/whiteboard-canvas/text-form.service.ts","./src/app/whiteboard/whiteboard-canvas/whiteboard-canvas.component.ts","./src/app/whiteboard/whiteboard-canvas/whiteboard-canvas.component.html","./src/app/whiteboard/whiteboard-resolve.service.ts","./src/app/whiteboard/whiteboard-routing.module.ts","./src/app/whiteboard/whiteboard-template/whiteboard-template.component.ts","./src/app/whiteboard/whiteboard-template/whiteboard-template.component.html","./src/app/whiteboard/whiteboard-templates/whiteboard-templates.component.ts","./src/app/whiteboard/whiteboard-templates/whiteboard-templates.component.html","./src/app/whiteboard/whiteboard.module.ts","./src/app/whiteboard/whiteboard.service.ts","./src/environments/app.version.ts","./src/environments/environment.ts","./src/examples/index.ts","./src/main.ts","ignored|C:\\Users\\sebastian\\Documents\\canvas-modeler\\node_modules\\fabric\\dist|jsdom","ignored|C:\\Users\\sebastian\\Documents\\canvas-modeler\\node_modules\\fabric\\dist|jsdom/lib/jsdom/living/generated/utils","ignored|C:\\Users\\sebastian\\Documents\\canvas-modeler\\node_modules\\fabric\\dist|jsdom/lib/jsdom/utils","ignored|C:\\Users\\sebastian\\Documents\\canvas-modeler\\node_modules\\immediate\\lib|./nextTick"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OptionsComponent } from './options/options.component';\r\nimport { ToolExplanationComponent } from './tool-explanation/tool-explanation.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './database/auth.guard';\r\nimport { LoginGuard } from './database/login.guard';\r\nimport { StartComponent } from './start/start.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\n\r\n// Routing for the Feature Modeler\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/start', pathMatch: 'full' },\r\n  {\r\n    path: 'start',\r\n    canActivate: [AuthGuard],\r\n    component: StartComponent,\r\n  },\r\n  { path: 'login', component: LoginComponent, canActivate: [LoginGuard] },\r\n  { path: 'options', component: OptionsComponent, canActivate: [AuthGuard] },\r\n  {\r\n    path: 'explanation',\r\n    component: ToolExplanationComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: '**', component: PageNotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { BmProcessService } from './development-process-registry/bm-process/bm-process.service';\r\nimport { BmProcess } from './development-process-registry/bm-process/bm-process';\r\nimport { DevelopmentMethodService } from './development-process-registry/development-method/development-method.service';\r\nimport { DevelopmentMethod } from './development-process-registry/development-method/development-method';\r\nimport { CompanyModelService } from './canvas-meta-model/company-model.service';\r\nimport { CompanyModel } from './canvas-meta-model/company-model';\r\nimport { ExpertModelService } from './canvas-meta-model/expert-model.service';\r\nimport { ExpertModel } from './canvas-meta-model/expert-model';\r\nimport { RunningProcessService } from './development-process-registry/running-process/running-process.service';\r\nimport { RunningProcess } from './development-process-registry/running-process/running-process';\r\nimport { DomainService } from './development-process-registry/knowledge/domain.service';\r\nimport { Domain } from './development-process-registry/knowledge/domain';\r\nimport { NgbConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PouchdbService } from './database/pouchdb.service';\r\nimport { AuthService } from './database/auth.service';\r\nimport { version } from '../environments/app.version';\r\nimport { environment } from '../environments/environment';\r\nimport { CanvasDefinitionService } from './canvas-meta-model/canvas-definition.service';\r\nimport { CanvasDefinition } from './canvas-meta-model/canvas-definition';\r\nimport { DatabaseMeta } from './database/database-entry';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  VERSION = version;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private bmProcessService: BmProcessService,\r\n    private canvasDefinitionService: CanvasDefinitionService,\r\n    private companyModelService: CompanyModelService,\r\n    private developmentMethodService: DevelopmentMethodService,\r\n    private domainService: DomainService,\r\n    private expertModelService: ExpertModelService,\r\n    ngbConfig: NgbConfig,\r\n    private pouchdbService: PouchdbService,\r\n    private runningProcessService: RunningProcessService\r\n  ) {\r\n    ngbConfig.animation = false;\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout().subscribe();\r\n  }\r\n\r\n  async addDefaultData(): Promise<void> {\r\n    await this.pouchdbService.addDefaultData();\r\n  }\r\n\r\n  async printDevelopmentMethods(): Promise<void> {\r\n    const methods = (await this.developmentMethodService.getList()).map(\r\n      (method) => new DevelopmentMethod(method, undefined)\r\n    );\r\n    const out = methods.map((method) => method.toDb());\r\n    out.forEach((method) => delete (method as DatabaseMeta)._rev);\r\n    console.log(out);\r\n  }\r\n\r\n  async printBmProcesses(): Promise<void> {\r\n    const processes = (await this.bmProcessService.getList()).map(\r\n      (process) => new BmProcess(process, undefined)\r\n    );\r\n    const out = processes.map((process) => process.toDb());\r\n    out.forEach((process) => delete (process as DatabaseMeta)._rev);\r\n    console.log(out);\r\n  }\r\n\r\n  async printRunningProcesses(): Promise<void> {\r\n    const processes = (await this.runningProcessService.getList()).map(\r\n      (process) => new RunningProcess(process, undefined)\r\n    );\r\n    const out = processes.map((process) => process.toDb());\r\n    out.forEach((process) => delete (process as DatabaseMeta)._rev);\r\n    console.log(out);\r\n  }\r\n\r\n  async printExpertModels(): Promise<void> {\r\n    const models = (await this.expertModelService.getList()).map(\r\n      (model) => new ExpertModel(model, undefined)\r\n    );\r\n    const out = models.map((model) => model.toDb());\r\n    out.forEach((model) => delete (model as DatabaseMeta)._rev);\r\n    console.log(out);\r\n  }\r\n\r\n  async printCompanyModels(): Promise<void> {\r\n    const models = (await this.companyModelService.getAll()).map(\r\n      (model) => new CompanyModel(model, undefined)\r\n    );\r\n    const out = models.map((model) => model.toDb());\r\n    out.forEach((model) => delete (model as DatabaseMeta)._rev);\r\n    console.log(out);\r\n  }\r\n\r\n  async printDomains(): Promise<void> {\r\n    const models = (await this.domainService.getList()).map(\r\n      (domain) => new Domain(domain, undefined)\r\n    );\r\n    const out = models.map((domain) => domain.toDb());\r\n    out.forEach((domain) => delete (domain as DatabaseMeta)._rev);\r\n    console.log(out);\r\n  }\r\n\r\n  async printCanvasDefinitions(): Promise<void> {\r\n    const models = (await this.canvasDefinitionService.getList()).map(\r\n      (canvasDefinition) => new CanvasDefinition(canvasDefinition, undefined)\r\n    );\r\n    const out = models.map((canvasDefinition) => canvasDefinition.toDb());\r\n    out.forEach(\r\n      (canvasDefinition) => delete (canvasDefinition as DatabaseMeta)._rev\r\n    );\r\n    console.log(out);\r\n  }\r\n\r\n  get showNavbar(): boolean {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isLocalDatabase(): boolean {\r\n    return environment.localDatabase === true;\r\n  }\r\n}\r\n","<app-navbar *ngIf=\"showNavbar\"></app-navbar>\r\n\r\n<div id=\"wrapper\" class=\"min-vh-100 d-flex flex-column align-content-center\">\r\n  <div class=\"flex-1\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n\r\n  <footer\r\n    *ngIf=\"showNavbar\"\r\n    class=\"\r\n      text-muted\r\n      container\r\n      text-center\r\n      mb-3\r\n      d-flex\r\n      align-items-baseline\r\n      justify-content-center\r\n    \"\r\n  >\r\n    <button\r\n      *ngIf=\"!isLocalDatabase()\"\r\n      type=\"button\"\r\n      class=\"btn btn-link\"\r\n      (click)=\"logout()\"\r\n    >\r\n      Logout\r\n    </button>\r\n    <div *ngIf=\"!isLocalDatabase()\">&ndash;</div>\r\n    <a\r\n      class=\"btn btn-link\"\r\n      routerLinkActive=\"active\"\r\n      [routerLink]=\"['/', 'options']\"\r\n      >Options</a\r\n    >\r\n    <div>&ndash;</div>\r\n    <div class=\"btn btn-link\" routerLinkActive=\"active\" [routerLink]=\"['/']\">\r\n      SBMD v{{ VERSION }}\r\n    </div>\r\n  </footer>\r\n</div>\r\n","import { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { DatabaseModule } from './database/database.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { ToolExplanationComponent } from './tool-explanation/tool-explanation.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DevelopmentProcessesModule } from './development-processes/development-processes.module';\r\nimport { DevelopmentProcessRegistryModule } from './development-process-registry/development-process-registry.module';\r\nimport { OptionsComponent } from './options/options.component';\r\nimport { CanvasMetaModelModule } from './canvas-meta-model/canvas-meta-model.module';\r\nimport { CanvasModule } from './canvas/canvas.module';\r\nimport { MethodModelerExplanationComponent } from './method-modeler-explanation/method-modeler-explanation.component';\r\nimport { FeatureModelerExplanationComponent } from './feature-modeler-explanation/feature-modeler-explanation.component';\r\nimport { EnactionExplanationComponent } from './enaction-explanation/enaction-explanation.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { StartComponent } from './start/start.component';\r\nimport { StartBusinessDeveloperComponent } from './start-business-developer/start-business-developer.component';\r\nimport { StartMethodEngineerComponent } from './start-method-engineer/start-method-engineer.component';\r\nimport { ChangePasswordFormComponent } from './change-password-form/change-password-form.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { WhiteboardMetaModelModule } from './whiteboard-meta-model/whiteboard-meta-model.module';\r\nimport { WhiteboardModule } from './whiteboard/whiteboard.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    OptionsComponent,\r\n    ToolExplanationComponent,\r\n    MethodModelerExplanationComponent,\r\n    FeatureModelerExplanationComponent,\r\n    EnactionExplanationComponent,\r\n    LoginComponent,\r\n    StartComponent,\r\n    StartBusinessDeveloperComponent,\r\n    StartMethodEngineerComponent,\r\n    ChangePasswordFormComponent,\r\n    ProfileComponent,\r\n    PageNotFoundComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    DatabaseModule,\r\n    DevelopmentProcessRegistryModule,\r\n    CanvasMetaModelModule,\r\n    WhiteboardMetaModelModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n\r\n    QuillModule.forRoot({\r\n      format: 'json',\r\n    }),\r\n\r\n    CanvasModule,\r\n    WhiteboardModule,\r\n\r\n    DevelopmentProcessesModule,\r\n\r\n    AppRoutingModule, // has to be the last one\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { DatabaseModelPart } from '../database/database-model-part';\r\nimport { Equality } from '../shared/equality';\r\nimport { DatabaseEntry, DatabaseInit } from '../database/database-entry';\r\n\r\nexport interface CanvasDefinitionCellInit extends DatabaseInit {\r\n  isSpacer: boolean;\r\n  id?: string;\r\n  name?: string;\r\n  rowspan: number;\r\n  colspan: number;\r\n}\r\n\r\nexport interface CanvasDefinitionCellEntry extends DatabaseEntry {\r\n  isSpacer: boolean;\r\n  id?: string;\r\n  name?: string;\r\n  rowspan: number;\r\n  colspan: number;\r\n}\r\n\r\nexport class CanvasDefinitionCell\r\n  implements\r\n    CanvasDefinitionCellInit,\r\n    DatabaseModelPart,\r\n    Equality<CanvasDefinitionCell>\r\n{\r\n  isSpacer: boolean;\r\n  id?: string;\r\n  name?: string;\r\n  rowspan: number;\r\n  colspan: number;\r\n\r\n  constructor(\r\n    entry: CanvasDefinitionCellEntry | undefined,\r\n    init: CanvasDefinitionCellInit | undefined\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.isSpacer = element.isSpacer;\r\n    this.id = element.id;\r\n    this.name = element.name;\r\n    this.rowspan = element.rowspan;\r\n    this.colspan = element.colspan;\r\n  }\r\n\r\n  toDb(): CanvasDefinitionCellEntry {\r\n    return {\r\n      isSpacer: this.isSpacer,\r\n      id: this.id,\r\n      name: this.name,\r\n      rowspan: this.rowspan,\r\n      colspan: this.colspan,\r\n    };\r\n  }\r\n\r\n  equals(other: CanvasDefinitionCell): boolean {\r\n    if (other == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      this.isSpacer === other.isSpacer &&\r\n      this.name === other.name &&\r\n      this.rowspan === other.rowspan &&\r\n      this.colspan === other.colspan\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanvasDefinition, CanvasDefinitionInit } from './canvas-definition';\r\nimport { CanvasDefinitionCell } from './canvas-definition-cell';\r\nimport { DefaultElementService } from '../database/default-element.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CanvasDefinitionService extends DefaultElementService<\r\n  CanvasDefinition,\r\n  CanvasDefinitionInit\r\n> {\r\n  protected readonly typeName = CanvasDefinition.typeName;\r\n\r\n  protected readonly elementConstructor = CanvasDefinition;\r\n\r\n  async updateRows(\r\n    id: string,\r\n    newRows: CanvasDefinitionCell[][]\r\n  ): Promise<void> {\r\n    const canvasDefinition = await this.get(id);\r\n    canvasDefinition.updateRows(newRows);\r\n    await this.save(canvasDefinition);\r\n  }\r\n\r\n  async update(id: string, element: Partial<CanvasDefinition>): Promise<void> {\r\n    const dbElement = await this.get(id);\r\n    dbElement.update(element);\r\n    await this.save(dbElement);\r\n  }\r\n}\r\n","import { Feature } from './feature';\r\nimport { DatabaseModel } from '../database/database-model';\r\nimport {\r\n  CanvasDefinitionCell,\r\n  CanvasDefinitionCellEntry,\r\n  CanvasDefinitionCellInit,\r\n} from './canvas-definition-cell';\r\nimport { getId } from '../model/utils';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n} from '../database/database-entry';\r\n\r\nexport interface CanvasDefinitionInit extends DatabaseRootInit {\r\n  name: string;\r\n  description?: string;\r\n  rows?: CanvasDefinitionCellInit[][];\r\n  relationshipTypes?: string[];\r\n}\r\n\r\nexport interface CanvasDefinitionEntry extends DatabaseRootEntry {\r\n  name: string;\r\n  description?: string;\r\n  rows: CanvasDefinitionCellEntry[][];\r\n  relationshipTypes: string[];\r\n}\r\n\r\ninterface CanvasDefinitionJsonSchema {\r\n  name: string;\r\n  description?: string;\r\n  rows: CanvasDefinitionCellEntry[][];\r\n  relationshipTypes: string[];\r\n}\r\n\r\nexport class CanvasDefinition\r\n  extends DatabaseModel\r\n  implements CanvasDefinitionInit\r\n{\r\n  static readonly typeName = 'CanvasDefinition';\r\n\r\n  name: string;\r\n  description?: string;\r\n\r\n  rows: CanvasDefinitionCell[][] = [];\r\n\r\n  relationshipTypes: string[] = [];\r\n\r\n  constructor(\r\n    entry: CanvasDefinitionEntry | undefined,\r\n    init: CanvasDefinitionInit | undefined\r\n  ) {\r\n    super(entry, init, CanvasDefinition.typeName);\r\n    const element = entry ?? init;\r\n    this.name = element.name;\r\n    this.description = element.description;\r\n    this.relationshipTypes =\r\n      element.relationshipTypes ?? this.relationshipTypes;\r\n    if (entry != null) {\r\n      this.rows =\r\n        entry.rows?.map((row) =>\r\n          row.map((cell) => new CanvasDefinitionCell(cell, undefined))\r\n        ) ?? this.rows;\r\n    } else if (init != null) {\r\n      this.rows =\r\n        init.rows?.map((row) =>\r\n          row.map((cell) => new CanvasDefinitionCell(undefined, cell))\r\n        ) ?? this.rows;\r\n    }\r\n  }\r\n\r\n  update(canvasDefinition: Partial<CanvasDefinition>): void {\r\n    Object.assign(this, canvasDefinition);\r\n  }\r\n\r\n  /**\r\n   * Update the rows of this canvas definition and give them correct ids\r\n   *\r\n   * @param newRows the new rows\r\n   */\r\n  updateRows(newRows: CanvasDefinitionCell[][]): void {\r\n    const ids = new Set<string>();\r\n    newRows.forEach((row) =>\r\n      row\r\n        .filter((cell) => !cell.isSpacer)\r\n        .forEach((cell) => {\r\n          if (!cell.id) {\r\n            cell.id = getId(cell.name, Array.from(ids));\r\n          } else if (ids.has(cell.id)) {\r\n            cell.id = getId(cell.name, Array.from(ids));\r\n          }\r\n          ids.add(cell.id);\r\n        })\r\n    );\r\n    this.rows = newRows;\r\n  }\r\n\r\n  get rootFeatures(): Feature[] {\r\n    const rootFeatures: Feature[] = [];\r\n    this.rows.forEach((row) =>\r\n      row\r\n        .filter((cell) => !cell.isSpacer)\r\n        .forEach((cell) => {\r\n          rootFeatures.push(\r\n            new Feature(undefined, { name: cell.name }, cell.id, null)\r\n          );\r\n        })\r\n    );\r\n    return rootFeatures;\r\n  }\r\n\r\n  toDb(): CanvasDefinitionEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      name: this.name,\r\n      description: this.description,\r\n      rows: this.rows.map((row) => row.map((cell) => cell.toDb())),\r\n      relationshipTypes: this.relationshipTypes,\r\n    };\r\n  }\r\n\r\n  toJSON(): CanvasDefinitionJsonSchema {\r\n    return {\r\n      name: this.name,\r\n      description: this.description,\r\n      rows: this.rows.map((row) => row.map((cell) => cell.toDb())),\r\n      relationshipTypes: this.relationshipTypes,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ArtifactDataReference } from '../development-process-registry/running-process/artifact-data';\r\nimport { CompanyModel } from './company-model';\r\nimport { CompanyModelService } from './company-model.service';\r\nimport {\r\n  MetaModelApi,\r\n  Reference,\r\n} from '../development-process-registry/meta-model-definition';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class CanvasMetaModelApiService implements MetaModelApi {\r\n  viewMethod: (\r\n    model: ArtifactDataReference,\r\n    router: Router,\r\n    reference: Reference\r\n  ) => void;\r\n\r\n  constructor(private companyModelService: CompanyModelService) {}\r\n\r\n  view(\r\n    model: ArtifactDataReference,\r\n    router: Router,\r\n    reference: Reference\r\n  ): void {\r\n    if (this.viewMethod == null) {\r\n      console.warn('No module for viewing of canvas models added');\r\n    } else {\r\n      this.viewMethod(model, router, reference);\r\n    }\r\n  }\r\n\r\n  async getName(model: ArtifactDataReference): Promise<string | undefined> {\r\n    const companyModel = await this.companyModelService.get(model.id);\r\n    if (companyModel.instances.length > 0) {\r\n      return companyModel.instances[0].name;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async copy(model: ArtifactDataReference): Promise<ArtifactDataReference> {\r\n    const companyModel = await this.companyModelService.get(model.id);\r\n    companyModel.resetDatabaseState();\r\n    companyModel.createdByMethod = true;\r\n    await this.companyModelService.save(companyModel);\r\n    return {\r\n      ...model,\r\n      id: companyModel._id,\r\n      type: CompanyModel.typeName,\r\n    };\r\n  }\r\n\r\n  async remove(model: ArtifactDataReference): Promise<void> {\r\n    await this.companyModelService.delete(model.id);\r\n  }\r\n}\r\n","import { APP_INITIALIZER, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CanvasMetaModelService } from './canvas-meta-model.service';\r\nimport { CanvasMetaModelApiService } from './canvas-meta-model-api.service';\r\n\r\n@NgModule({\r\n  providers: [\r\n    CanvasMetaModelService,\r\n    CanvasMetaModelApiService,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (canvasMetaModelService: CanvasMetaModelService) => () =>\r\n        canvasMetaModelService.init(),\r\n      deps: [CanvasMetaModelService],\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class CanvasMetaModelModule {\r\n  // see https://angular.io/guide/singleton-services#prevent-reimport-of-the-greetingmodule\r\n  constructor(@Optional() @SkipSelf() databaseModule?: CanvasMetaModelModule) {\r\n    if (databaseModule) {\r\n      throw new Error(\r\n        'CanvasMetaModelModule is already loaded. Import it in the AppModule only.'\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MetaModelService } from '../development-process-registry/meta-model.service';\r\nimport { CompanyModel } from './company-model';\r\nimport {\r\n  MetaModelDefinition,\r\n  Reference,\r\n} from '../development-process-registry/meta-model-definition';\r\nimport { CanvasMetaModelApiService } from './canvas-meta-model-api.service';\r\nimport { ArtifactDataReference } from '../development-process-registry/running-process/artifact-data';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class CanvasMetaModelService {\r\n  constructor(\r\n    private canvasMetaModelApiService: CanvasMetaModelApiService,\r\n    private metaModelService: MetaModelService\r\n  ) {}\r\n\r\n  init() {\r\n    const definition: MetaModelDefinition = {\r\n      name: 'Canvas',\r\n      type: CompanyModel.typeName,\r\n      api: this.canvasMetaModelApiService,\r\n    };\r\n    this.metaModelService.registerMetaModel(definition);\r\n    console.log('Registered Canvas Meta Model');\r\n  }\r\n\r\n  registerViewMethod(\r\n    view: (\r\n      model: ArtifactDataReference,\r\n      router: Router,\r\n      reference: Reference\r\n    ) => void\r\n  ) {\r\n    this.canvasMetaModelApiService.viewMethod = view;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FeatureModel } from './feature-model';\r\nimport { Feature, FeatureType, SubfeatureConnectionsType } from './feature';\r\nimport { Instance, InstanceType } from './instance';\r\nimport { ConformanceReport, PatternHint } from './conformance-report';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CanvasModelConsistencyService {\r\n  /**\r\n   * Called to check whether a feature model is consistent. Raises an error if not.\r\n   *\r\n   * @param featureModel the feature model to check\r\n   */\r\n  checkFormalConsistency(featureModel: FeatureModel): void {\r\n    // has a definition\r\n    if (!featureModel.definition) {\r\n      throw new Error('Missing definition');\r\n    }\r\n\r\n    // has the root canvas blocks of the definition\r\n    const blocks = featureModel.definition.rootFeatures.map(\r\n      (feature) => feature.id\r\n    );\r\n    if (!blocks.every((id) => id in featureModel.features)) {\r\n      throw new Error('Missing canvas blocks');\r\n    }\r\n\r\n    // has unique feature ids and only references valid features in relationships\r\n    const featureIds = new Set<string>();\r\n    featureModel.iterateFeatures((feature: Feature) => {\r\n      if (featureIds.has(feature.id)) {\r\n        throw new Error('Feature id ' + feature.id + ' is not unique');\r\n      } else {\r\n        featureIds.add(feature.id);\r\n      }\r\n      return false;\r\n    });\r\n    featureModel.iterateFeatures((feature: Feature) => {\r\n      if (\r\n        !feature.relationships\r\n          .getAllReferencedFeatureIds()\r\n          .every((id) => featureIds.has(id))\r\n      ) {\r\n        throw new Error(\r\n          'Relationships of feature ' +\r\n            feature.id +\r\n            ' reference a non existing feature id'\r\n        );\r\n      }\r\n      if (\r\n        feature.relationships\r\n          .getRelationshipTypes()\r\n          .some(\r\n            (type) => !featureModel.definition.relationshipTypes.includes(type)\r\n          )\r\n      ) {\r\n        throw new Error(\r\n          'Feature ' +\r\n            feature.id +\r\n            ' has a relationship types that does not exist in the definition'\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n\r\n    // instances use at least the nine root canvas blocks\r\n    if (\r\n      !featureModel.instances.every((instance) =>\r\n        blocks.every((id) => instance.usedFeatures.includes(id))\r\n      )\r\n    ) {\r\n      throw new Error('Instance does not reference all root canvas blocks');\r\n    }\r\n\r\n    // instances only reference valid features\r\n    if (\r\n      !featureModel.instances.every((instance) =>\r\n        instance.usedFeatures.every((id) => featureIds.has(id))\r\n      )\r\n    ) {\r\n      throw new Error('Instance references non existing feature id');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check whether an instantiation is possible or not possible\r\n   *\r\n   * @param featureModel the feature model to check\r\n   */\r\n  instanceIsPossible(featureModel: FeatureModel): {\r\n    problems: string[];\r\n    problemFeatureIds: string[];\r\n    possibleInstance: Instance;\r\n  } {\r\n    const featureMap = featureModel.getFeatureMap();\r\n    const testInstance = new Instance(undefined, {\r\n      name: 'Possible Instance',\r\n      type: InstanceType.EXAMPLE,\r\n    });\r\n    testInstance.usedFeatures = [];\r\n\r\n    const instances = this.addFeaturesToPossibleInstances(\r\n      [testInstance],\r\n      Object.values(featureModel.features),\r\n      featureMap\r\n    );\r\n\r\n    const results = instances.map((instance) => {\r\n      return {\r\n        ...this.checkPossibleInstanceErrors(featureModel, instance),\r\n        possibleInstance: instance,\r\n      };\r\n    });\r\n\r\n    const result = results.find((res) => res.problems.length === 0);\r\n\r\n    if (result) {\r\n      return result;\r\n    } else {\r\n      const min = Math.min(...results.map((res) => res.problems.length));\r\n      return results.find((res) => res.problems.length === min);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a feature to a possible instance and add all features that are required after this feature is added\r\n   * (required, parent, mandatory, subfeatures)\r\n   *\r\n   * @param instance the possible instance\r\n   * @param feature the feature to add\r\n   * @param featureMap the feature map of the feature model\r\n   */\r\n  private addFeatureToPossibleInstance(\r\n    instance: Instance,\r\n    feature: Feature,\r\n    featureMap: { [id: string]: Feature }\r\n  ): Instance[] {\r\n    instance.addFeature(feature.id);\r\n\r\n    let instances = [instance];\r\n\r\n    // Add parent of feature\r\n    if (feature.parent !== null) {\r\n      instances = this.addFeatureToPossibleInstances(\r\n        instances,\r\n        feature.parent,\r\n        featureMap\r\n      );\r\n    }\r\n\r\n    // Add all required features\r\n    instances = this.addFeaturesToPossibleInstances(\r\n      instances,\r\n      feature.relationships\r\n        .getRelationships('required')\r\n        .map((id) => featureMap[id]),\r\n      featureMap\r\n    );\r\n\r\n    // Check for new mandatory features\r\n    instances = this.addFeaturesToPossibleInstances(\r\n      instances,\r\n      Object.values(feature.subfeatures).filter(\r\n        (subfeature) => subfeature.type === FeatureType.MANDATORY\r\n      ),\r\n      featureMap\r\n    );\r\n\r\n    // Check OR and XOR\r\n    if (\r\n      feature.subfeatureConnections === SubfeatureConnectionsType.XOR ||\r\n      feature.subfeatureConnections === SubfeatureConnectionsType.OR\r\n    ) {\r\n      const newInstances = [\r\n        ...instances.filter(\r\n          (inst) =>\r\n            Object.keys(feature.subfeatures).filter((id) =>\r\n              inst.usedFeatures.includes(id)\r\n            ).length > 0\r\n        ),\r\n      ];\r\n      instances\r\n        .filter(\r\n          (inst) =>\r\n            Object.keys(feature.subfeatures).filter((id) =>\r\n              inst.usedFeatures.includes(id)\r\n            ).length === 0\r\n        )\r\n        .forEach((inst) => {\r\n          if (Object.keys(feature.subfeatures).length === 0) {\r\n            newInstances.push(inst);\r\n          } else {\r\n            Object.values(feature.subfeatures).forEach((subfeature) => {\r\n              const tmpInstance = new Instance(undefined, inst);\r\n              tmpInstance.usedFeatures = [...tmpInstance.usedFeatures];\r\n              newInstances.push(\r\n                ...this.addFeatureToPossibleInstance(\r\n                  tmpInstance,\r\n                  subfeature,\r\n                  featureMap\r\n                )\r\n              );\r\n            });\r\n          }\r\n        });\r\n      instances = newInstances;\r\n    }\r\n\r\n    return instances;\r\n  }\r\n\r\n  /**\r\n   * Add a feature to possible instances. Return the resulting possible instances.\r\n   *\r\n   * @param instances the possible instances\r\n   * @param feature the feature to add\r\n   * @param featureMap the feature map of the feature model\r\n   */\r\n  private addFeatureToPossibleInstances(\r\n    instances: Instance[],\r\n    feature: Feature,\r\n    featureMap: { [id: string]: Feature }\r\n  ): Instance[] {\r\n    const newInstances = [];\r\n    instances.forEach((instance) => {\r\n      instance.usedFeatures.includes(feature.id)\r\n        ? newInstances.push(instance)\r\n        : newInstances.push(\r\n            ...this.addFeatureToPossibleInstance(instance, feature, featureMap)\r\n          );\r\n    });\r\n    return newInstances;\r\n  }\r\n\r\n  /**\r\n   * Add features to possible instances. Return the resulting possible instances.\r\n   *\r\n   * @param instances the possible instances\r\n   * @param features the features to add\r\n   * @param featureMap the feature map of the feature model\r\n   */\r\n  private addFeaturesToPossibleInstances(\r\n    instances: Instance[],\r\n    features: Feature[],\r\n    featureMap: { [id: string]: Feature }\r\n  ): Instance[] {\r\n    features.forEach(\r\n      (feature) =>\r\n        (instances = this.addFeatureToPossibleInstances(\r\n          instances,\r\n          feature,\r\n          featureMap\r\n        ))\r\n    );\r\n    return instances;\r\n  }\r\n\r\n  /**\r\n   * Checks for problems with an instance that is valid except for XOR and excludes fields\r\n   *\r\n   * @param featureModel the feature model\r\n   * @param instance the instance to check\r\n   */\r\n  private checkPossibleInstanceErrors(\r\n    featureModel: FeatureModel,\r\n    instance: Instance\r\n  ): { problems: string[]; problemFeatureIds: string[] } {\r\n    const featureMap = featureModel.getFeatureMap();\r\n    const problems: string[] = [];\r\n    const problemFeatureIds: Set<string> = new Set<string>();\r\n\r\n    featureModel.iterateFeatures(\r\n      (feature) => {\r\n        // Check for XOR problem\r\n        if (\r\n          feature.subfeatureConnections === SubfeatureConnectionsType.XOR &&\r\n          Object.keys(feature.subfeatures).filter((id) =>\r\n            instance.usedFeatures.includes(id)\r\n          ).length !== 1\r\n        ) {\r\n          problems.push(\r\n            feature.name + ' is XOR, but can not have exactly one subfeature'\r\n          );\r\n          problemFeatureIds.add(feature.id);\r\n        }\r\n\r\n        // Check for OR problem\r\n        if (\r\n          feature.subfeatureConnections === SubfeatureConnectionsType.OR &&\r\n          Object.keys(feature.subfeatures).filter((id) =>\r\n            instance.usedFeatures.includes(id)\r\n          ).length === 0\r\n        ) {\r\n          problems.push(\r\n            feature.name + ' is OR, but can not have at least one subfeature'\r\n          );\r\n          problemFeatureIds.add(feature.id);\r\n        }\r\n\r\n        // Check excludes problem\r\n        feature.relationships\r\n          .getRelationships('excludes')\r\n          .filter((id) => instance.usedFeatures.includes(id))\r\n          .forEach((id) => {\r\n            const excludedFeature = featureMap[id];\r\n            problems.push(\r\n              feature.name +\r\n                ' excludes the feature ' +\r\n                excludedFeature.name +\r\n                ', but both features have to be included'\r\n            );\r\n            problemFeatureIds.add(feature.id);\r\n          });\r\n        return false;\r\n      },\r\n      (feature) => instance.usedFeatures.includes(feature.id)\r\n    );\r\n    return {\r\n      problems,\r\n      problemFeatureIds: Array.from(problemFeatureIds),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Check that hurts and supports do not exclude each other.\r\n   *\r\n   * @param featureModel the feature model to check\r\n   * @return problems and problem feature ids of the features that have an incorrect relationship\r\n   */\r\n  checkHurtsSupports(featureModel: FeatureModel): {\r\n    problems: string[];\r\n    problemFeatureIds: string[];\r\n  } {\r\n    const featureMap = featureModel.getFeatureMap();\r\n    const problems: string[] = [];\r\n    const problemFeatureIds: Set<string> = new Set<string>();\r\n\r\n    featureModel.iterateFeatures((feature) => {\r\n      const features = feature.relationships\r\n        .getRelationships('supports')\r\n        .map((id) => featureMap[id])\r\n        .filter((relatedFeature) =>\r\n          relatedFeature.relationships\r\n            .getRelationships('hurts')\r\n            .includes(feature.id)\r\n        );\r\n      features.forEach((relatedFeature) => {\r\n        problems.push(\r\n          'Feature ' +\r\n            feature.name +\r\n            ' supports ' +\r\n            relatedFeature.name +\r\n            ', but ' +\r\n            relatedFeature.name +\r\n            ' hurts ' +\r\n            feature.name +\r\n            '.'\r\n        );\r\n        problemFeatureIds.add(relatedFeature.id);\r\n      });\r\n      if (features.length > 0) {\r\n        problemFeatureIds.add(feature.id);\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {\r\n      problems,\r\n      problemFeatureIds: Array.from(problemFeatureIds),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Checks the conformance of an instance of a feature model\r\n   *\r\n   * @param featureModel the feature model\r\n   * @param instanceId the id of the instance\r\n   * @param patterns the patterns\r\n   * @return featureIds that have problems and errors as messages\r\n   */\r\n  checkConformanceOfInstance(\r\n    featureModel: FeatureModel,\r\n    instanceId: number,\r\n    patterns: Instance[]\r\n  ): ConformanceReport {\r\n    const instance = featureModel.instances.find((i) => i.id === instanceId);\r\n\r\n    return new ConformanceReport({\r\n      ...this.getConformanceMessages(featureModel, instance),\r\n      ...this.getHints(featureModel, instance),\r\n      ...this.getPatternHints(featureModel, instance, patterns),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get errors, warnings and strengths for the instance\r\n   *\r\n   * @param featureModel the feature model\r\n   * @param instance the instance\r\n   */\r\n  private getConformanceMessages(\r\n    featureModel: FeatureModel,\r\n    instance: Instance\r\n  ): {\r\n    errorFeatureIds: string[];\r\n    errors: string[];\r\n    warningFeatureIds: string[];\r\n    warnings: string[];\r\n    strengthFeatureIds: string[];\r\n    strengths: string[];\r\n  } {\r\n    const errorFeatureIds = new Set<string>();\r\n    const warningFeatureIds = new Set<string>();\r\n    const strengthFeatureIds = new Set<string>();\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n    const strengths: string[] = [];\r\n\r\n    const filter = (feature: Feature): boolean =>\r\n      instance.usedFeatures.includes(feature.id) ||\r\n      feature.type === FeatureType.MANDATORY;\r\n    const checkFeature = (feature: Feature): boolean => {\r\n      const selected = instance.usedFeatures.includes(feature.id);\r\n      const selectedSubfeaturesLength = Object.keys(feature.subfeatures).filter(\r\n        (id: string) => instance.usedFeatures.includes(id)\r\n      ).length;\r\n\r\n      if (feature.type === FeatureType.MANDATORY && !selected) {\r\n        errorFeatureIds.add(feature.id);\r\n        errors.push(feature.name + ' is mandatory');\r\n      }\r\n\r\n      switch (feature.subfeatureConnections) {\r\n        case SubfeatureConnectionsType.OR:\r\n          if (selectedSubfeaturesLength === 0) {\r\n            errorFeatureIds.add(feature.id);\r\n            errors.push(feature.name + ' needs at least one subfeature');\r\n          }\r\n          break;\r\n        case SubfeatureConnectionsType.XOR:\r\n          if (selectedSubfeaturesLength !== 1) {\r\n            errorFeatureIds.add(feature.id);\r\n            errors.push(feature.name + ' needs exactly one subfeature');\r\n          }\r\n          break;\r\n      }\r\n\r\n      const missingRequiredFeatures = feature.relationships\r\n        .getRelationships('requires')\r\n        .filter((id: string) => !instance.usedFeatures.includes(id));\r\n      if (missingRequiredFeatures.length > 0) {\r\n        errorFeatureIds.add(feature.id);\r\n        missingRequiredFeatures.forEach((id: string) =>\r\n          errors.push(\r\n            feature.name +\r\n              ' requires the feature ' +\r\n              featureModel.getFeature(id).name\r\n          )\r\n        );\r\n      }\r\n\r\n      const disallowedFeatures = feature.relationships\r\n        .getRelationships('excludes')\r\n        .filter((id: string) => instance.usedFeatures.includes(id));\r\n      if (disallowedFeatures.length > 0) {\r\n        errorFeatureIds.add(feature.id);\r\n        disallowedFeatures.forEach((id: string) =>\r\n          errors.push(\r\n            feature.name +\r\n              ' excludes the feature ' +\r\n              featureModel.getFeature(id).name\r\n          )\r\n        );\r\n      }\r\n\r\n      const supportedFeatures = feature.relationships\r\n        .getRelationships('supports')\r\n        .filter((id: string) => instance.usedFeatures.includes(id));\r\n      if (supportedFeatures.length > 0) {\r\n        strengthFeatureIds.add(feature.id);\r\n        supportedFeatures.forEach((id: string) =>\r\n          strengths.push(\r\n            feature.name +\r\n              ' supports the feature ' +\r\n              featureModel.getFeature(id).name\r\n          )\r\n        );\r\n      }\r\n\r\n      const hurtedFeatures = feature.relationships\r\n        .getRelationships('hurts')\r\n        .filter((id: string) => instance.usedFeatures.includes(id));\r\n      if (hurtedFeatures.length > 0) {\r\n        warningFeatureIds.add(feature.id);\r\n        hurtedFeatures.forEach((id: string) =>\r\n          warnings.push(\r\n            feature.name +\r\n              ' hurts the feature ' +\r\n              featureModel.getFeature(id).name\r\n          )\r\n        );\r\n      }\r\n\r\n      return false;\r\n    };\r\n    featureModel.iterateFeatures(checkFeature, filter);\r\n\r\n    return {\r\n      errorFeatureIds: Array.from(errorFeatureIds),\r\n      errors,\r\n      warningFeatureIds: Array.from(warningFeatureIds),\r\n      warnings,\r\n      strengthFeatureIds: Array.from(strengthFeatureIds),\r\n      strengths,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Gets hints for the instance\r\n   *\r\n   * @param featureModel the feature model\r\n   * @param instance the instance\r\n   */\r\n  private getHints(\r\n    featureModel: FeatureModel,\r\n    instance: Instance\r\n  ): { hintFeatureIds: string[]; hints: string[] } {\r\n    const hintFeatureIds = new Set<string>();\r\n    const hints: string[] = [];\r\n\r\n    const checkHint = (feature: Feature): boolean => {\r\n      if (\r\n        !instance.usedFeatures.includes(feature.id) &&\r\n        this.isFeatureEasyAddable(featureModel, instance, feature)\r\n      ) {\r\n        feature.relationships.getRelationships('supports').forEach((id) => {\r\n          if (instance.usedFeatures.includes(id)) {\r\n            hints.push(\r\n              'Including ' +\r\n                feature.name +\r\n                ' would support ' +\r\n                featureModel.getFeature(id).name\r\n            );\r\n            hintFeatureIds.add(feature.id);\r\n            for (let f = feature.parent; f !== null; f = f.parent) {\r\n              if (instance.usedFeatures.includes(f.id)) {\r\n                break;\r\n              }\r\n              hintFeatureIds.add(f.id);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      return false;\r\n    };\r\n    featureModel.iterateFeatures(checkHint);\r\n\r\n    return {\r\n      hintFeatureIds: Array.from(hintFeatureIds),\r\n      hints,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get all pattern hints for the instance\r\n   *\r\n   * @param featureModel the feature model\r\n   * @param instance the instance\r\n   * @param patterns the patterns in the format of this feature model\r\n   */\r\n  getPatternHints(\r\n    featureModel: FeatureModel,\r\n    instance: Instance,\r\n    patterns: Instance[]\r\n  ): {\r\n    patternHintFeatureIds: string[];\r\n    patternHints: PatternHint[];\r\n    usedPatterns: Instance[];\r\n  } {\r\n    const patternHintFeatureIds = new Set<string>();\r\n    const patternHints: PatternHint[] = [];\r\n    const usedPatterns: Instance[] = [];\r\n\r\n    patterns.forEach((pattern) => {\r\n      let leafFeatures = 0;\r\n      let usedLeafFeatures = 0;\r\n      featureModel.iterateFeatures(\r\n        (feature) => {\r\n          if (feature.parent === null) {\r\n            // do not count main features\r\n            return false;\r\n          }\r\n          if (\r\n            Object.keys(feature.subfeatures).every(\r\n              (id) => !pattern.usedFeatures.includes(id)\r\n            )\r\n          ) {\r\n            leafFeatures += 1;\r\n            if (instance.usedFeatures.includes(feature.id)) {\r\n              usedLeafFeatures += 1;\r\n            }\r\n          }\r\n          return false;\r\n        },\r\n        (feature) => pattern.usedFeatures.includes(feature.id)\r\n      );\r\n      if (usedLeafFeatures / leafFeatures >= 0.5) {\r\n        let hasMissingFeatures = false;\r\n        let isPossible = true;\r\n        const hint: PatternHint = {\r\n          pattern: pattern,\r\n          missingFeatures: [],\r\n        };\r\n        const features = new Set<Feature>();\r\n        featureModel.iterateFeatures(\r\n          (feature) => {\r\n            if (!instance.usedFeatures.includes(feature.id)) {\r\n              if (!this.isFeatureEasyAddable(featureModel, instance, feature)) {\r\n                isPossible = false;\r\n                return true;\r\n              } else {\r\n                features.add(feature);\r\n                hasMissingFeatures = true;\r\n              }\r\n            }\r\n            return false;\r\n          },\r\n          (feature) => pattern.usedFeatures.includes(feature.id)\r\n        );\r\n        if (isPossible) {\r\n          if (hasMissingFeatures) {\r\n            hint.missingFeatures.push(...Array.from(features));\r\n            patternHints.push(hint);\r\n            features.forEach((feature) =>\r\n              patternHintFeatureIds.add(feature.id)\r\n            );\r\n          } else {\r\n            usedPatterns.push(pattern);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      patternHintFeatureIds: Array.from(patternHintFeatureIds),\r\n      patternHints,\r\n      usedPatterns,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Checks whether the feature can be easily added to the instance. Easily means that all requirements are satisfied and\r\n   * the feature is not excluded by any other feature nor it is excluded by the tree relationship XOR and every parent\r\n   * of this feature is already added to the instance or it would be possible to add it easily too.\r\n   *\r\n   * @param featureModel the feature model\r\n   * @param instance the instance to add the feature to\r\n   * @param feature the feature to add to the instance\r\n   * @return whether it would be easily possible to add the feature\r\n   */\r\n  private isFeatureEasyAddable(\r\n    featureModel: FeatureModel,\r\n    instance: Instance,\r\n    feature: Feature\r\n  ): boolean {\r\n    return (\r\n      instance.usedFeatures.includes(feature.id) ||\r\n      (feature.relationships\r\n        .getRelationships('excludes')\r\n        .every((id) => !instance.usedFeatures.includes(id)) &&\r\n        instance.usedFeatures.every(\r\n          (id) =>\r\n            !featureModel\r\n              .getFeature(id)\r\n              .relationships.getRelationships('excludes')\r\n              .includes(feature.id)\r\n        ) &&\r\n        (feature.parent === null ||\r\n          feature.parent.subfeatureConnections !==\r\n            SubfeatureConnectionsType.XOR ||\r\n          Object.keys(feature.parent.subfeatures).every(\r\n            (id) => !instance.usedFeatures.includes(id)\r\n          )) &&\r\n        feature.relationships\r\n          .getRelationships('requires')\r\n          .every((id) => instance.usedFeatures.includes(id)) &&\r\n        (feature.parent === null ||\r\n          this.isFeatureEasyAddable(featureModel, instance, feature.parent)))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CompanyModel,\r\n  CompanyModelEntry,\r\n  CompanyModelInit,\r\n} from './company-model';\r\nimport { FeatureModelService } from './feature-model.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CompanyModelService extends FeatureModelService<\r\n  CompanyModel,\r\n  CompanyModelInit\r\n> {\r\n  protected readonly typeName = CompanyModel.typeName;\r\n\r\n  protected readonly elementConstructor = CompanyModel;\r\n\r\n  async getAll(): Promise<CompanyModelEntry[]> {\r\n    return super.getList();\r\n  }\r\n\r\n  async getList(definitionId: string = null): Promise<CompanyModelEntry[]> {\r\n    let results = await this.pouchdbService.find<CompanyModelEntry>(\r\n      CompanyModel.typeName,\r\n      {\r\n        selector: {\r\n          createdByMethod: false,\r\n        },\r\n      }\r\n    );\r\n    if (definitionId != null) {\r\n      results = results.filter(\r\n        (companyModel) => companyModel.$definition._id === definitionId\r\n      );\r\n    }\r\n    return results;\r\n  }\r\n\r\n  async save(companyModel: CompanyModel): Promise<void> {\r\n    await this.pouchdbService.put(companyModel);\r\n  }\r\n}\r\n","import {\r\n  FeatureModel,\r\n  FeatureModelEntry,\r\n  FeatureModelInit,\r\n} from './feature-model';\r\nimport { Trace, TraceEntry, TraceInit } from './trace';\r\nimport { RelationshipType } from './relationships';\r\nimport { Feature } from './feature';\r\nimport { ExpertModel } from './expert-model';\r\n\r\nexport interface CompanyModelInit extends FeatureModelInit {\r\n  expertModelTraces?: { [expertModelId: string]: TraceInit };\r\n  createdByMethod?: boolean;\r\n}\r\n\r\nexport interface CompanyModelEntry extends FeatureModelEntry {\r\n  expertModelTraces: { [expertModelId: string]: TraceEntry };\r\n  createdByMethod: boolean;\r\n}\r\n\r\nexport class CompanyModel extends FeatureModel implements CompanyModelInit {\r\n  static readonly typeName = 'CompanyModel';\r\n\r\n  // stored\r\n  expertModelTraces: { [expertModelId: string]: Trace } = {};\r\n  createdByMethod: boolean = false;\r\n\r\n  constructor(\r\n    entry: CompanyModelEntry | undefined,\r\n    init: CompanyModelInit | undefined\r\n  ) {\r\n    super(entry, init, CompanyModel.typeName);\r\n    if (entry != null) {\r\n      if (entry.expertModelTraces != null) {\r\n        Object.entries(entry.expertModelTraces).forEach(\r\n          ([id, trace]) =>\r\n            (this.expertModelTraces[id] = new Trace(trace, undefined))\r\n        );\r\n      }\r\n    } else if (init != null) {\r\n      if (init.expertModelTraces != null) {\r\n        Object.entries(init.expertModelTraces).forEach(\r\n          ([id, trace]) =>\r\n            (this.expertModelTraces[id] = new Trace(undefined, trace))\r\n        );\r\n      }\r\n    }\r\n    this.createdByMethod =\r\n      (entry ?? init).createdByMethod ?? this.createdByMethod;\r\n  }\r\n\r\n  protected cleanReferences(\r\n    featureIdList: string[],\r\n    featureList: Feature[]\r\n  ): void {\r\n    super.cleanReferences(featureIdList, featureList);\r\n\r\n    // ** Traces\r\n    for (const f of featureList) {\r\n      for (const [expertModelId, expertModelFeatureId] of Object.entries(\r\n        f.expertModelTrace\r\n      )) {\r\n        this.expertModelTraces[expertModelId].deleteTrace(expertModelFeatureId);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Expert Models\r\n\r\n  /**\r\n   * Add expert model to this company model\r\n   *\r\n   * @param expertModelId the expert model id\r\n   */\r\n  addExpertModel(expertModelId: string): void {\r\n    this.expertModelTraces[expertModelId] = new Trace(undefined, {});\r\n    for (const feature of Object.values(this.features)) {\r\n      this.expertModelTraces[expertModelId].addTrace(feature.id, feature.id);\r\n      feature.addTrace(expertModelId, feature.id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove expert model from this company model\r\n   *\r\n   * @param expertModelId the expert model id\r\n   */\r\n  removeExpertModel(expertModelId: string): void {\r\n    delete this.expertModelTraces[expertModelId];\r\n    this.iterateFeatures((feature) => {\r\n      feature.removeTrace(expertModelId);\r\n      return false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a trace to an expert model for a company feature. Also adds cross tree relationships if possible.\r\n   *\r\n   * @param expertModel the expert model to trace to\r\n   * @param expertFeatureId the feature id of the feature in the expert model\r\n   * @param companyFeatureId the feature id of the feature in the company model\r\n   */\r\n  addExpertModelTrace(\r\n    expertModel: ExpertModel,\r\n    expertFeatureId: string,\r\n    companyFeatureId: string\r\n  ): void {\r\n    const expertFeature = expertModel.getFeature(expertFeatureId);\r\n    const companyFeature = this.getFeature(companyFeatureId);\r\n    companyFeature.addTrace(expertModel._id, expertFeatureId);\r\n    this.expertModelTraces[expertModel._id].addTrace(\r\n      expertFeatureId,\r\n      companyFeatureId\r\n    );\r\n\r\n    // Add cross tree relationships\r\n    const relationshipTypes = expertModel.definition.relationshipTypes;\r\n    relationshipTypes.forEach((type) =>\r\n      this.addTraceRelationship(\r\n        expertModel._id,\r\n        expertFeature,\r\n        companyFeatureId,\r\n        type\r\n      )\r\n    );\r\n\r\n    const addRelationship = (eF: Feature): boolean => {\r\n      relationshipTypes.forEach((type) => {\r\n        if (eF.relationships.hasRelationship(type, expertFeatureId)) {\r\n          const cFId =\r\n            this.expertModelTraces[expertModel._id].expertFeatureIdMap[eF.id];\r\n          if (cFId != null) {\r\n            this.addRelationship(type, cFId, companyFeatureId);\r\n          }\r\n        }\r\n      });\r\n      return false;\r\n    };\r\n    expertModel.iterateFeatures(addRelationship);\r\n  }\r\n\r\n  /**\r\n   * Adds traces to the feature\r\n   *\r\n   * @param expertModelId the expert model id\r\n   * @param expertFeature the expert feature to lookup the relationships\r\n   * @param companyFeatureId the id of the company feature to add the relationships to\r\n   * @param relationshipType the relationship type to handle\r\n   */\r\n  private addTraceRelationship(\r\n    expertModelId: string,\r\n    expertFeature: Feature,\r\n    companyFeatureId: string,\r\n    relationshipType: RelationshipType\r\n  ): void {\r\n    const relationships: string[] =\r\n      expertFeature.relationships.getRelationships(relationshipType);\r\n    for (const relExpertFeatureId of relationships) {\r\n      const relCompanyFeatureId =\r\n        this.expertModelTraces[expertModelId].expertFeatureIdMap[\r\n          relExpertFeatureId\r\n        ];\r\n      if (relCompanyFeatureId) {\r\n        this.addRelationship(\r\n          relationshipType,\r\n          companyFeatureId,\r\n          relCompanyFeatureId\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a trace to an expert feature\r\n   *\r\n   * @param companyFeatureId the id of the company feature that has a trace to the expert feature\r\n   * @param expertModelId the id of the expert model\r\n   */\r\n  removeTrace(companyFeatureId: string, expertModelId: string): void {\r\n    const feature = this.getFeature(companyFeatureId);\r\n    if (companyFeatureId in this.features) {\r\n      throw new Error('Can not delete trace of main features');\r\n    }\r\n    const features = feature.getAllSubfeatures();\r\n    features.push(feature);\r\n    for (const featureTraceToDelete of features) {\r\n      this.expertModelTraces[expertModelId].deleteTrace(\r\n        featureTraceToDelete.expertModelTrace[expertModelId]\r\n      );\r\n      featureTraceToDelete.removeTrace(expertModelId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all ids of merged expert models\r\n   */\r\n  get expertModelIds(): string[] {\r\n    return Object.keys(this.expertModelTraces);\r\n  }\r\n\r\n  toDb(): CompanyModelEntry {\r\n    const expertModelTraces = {};\r\n    Object.entries(this.expertModelTraces).forEach(\r\n      ([id, trace]) => (expertModelTraces[id] = trace.toDb())\r\n    );\r\n    return {\r\n      ...super.toDb(),\r\n      expertModelTraces,\r\n      createdByMethod: this.createdByMethod,\r\n    };\r\n  }\r\n}\r\n","import { Instance } from './instance';\r\nimport { Feature } from './feature';\r\n\r\nexport interface PatternHint {\r\n  pattern: Instance;\r\n  missingFeatures: Feature[];\r\n}\r\n\r\nexport class ConformanceReport {\r\n  errorFeatureIds: string[] = [];\r\n  errors: string[] = [];\r\n  warningFeatureIds: string[] = [];\r\n  warnings: string[] = [];\r\n  strengthFeatureIds: string[] = [];\r\n  strengths: string[] = [];\r\n  hintFeatureIds: string[] = [];\r\n  hints: string[] = [];\r\n  patternHintFeatureIds: string[] = [];\r\n  patternHints: PatternHint[] = [];\r\n  usedPatterns: Instance[] = [];\r\n\r\n  constructor(conformanceReport: Partial<ConformanceReport> = {}) {\r\n    Object.assign(this, conformanceReport);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ExpertModel, ExpertModelEntry, ExpertModelInit } from './expert-model';\r\nimport { Domain } from '../development-process-registry/knowledge/domain';\r\nimport { InstanceInit } from './instance';\r\nimport { FeatureModelService } from './feature-model.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExpertModelService extends FeatureModelService<\r\n  ExpertModel,\r\n  ExpertModelInit\r\n> {\r\n  protected readonly typeName = ExpertModel.typeName;\r\n\r\n  protected readonly elementConstructor = ExpertModel;\r\n\r\n  async getList(selector = {}): Promise<ExpertModelEntry[]> {\r\n    return this.pouchdbService.find<ExpertModelEntry>(ExpertModel.typeName, {\r\n      selector,\r\n    });\r\n  }\r\n\r\n  async updateDomains(id: string, domains: Domain[]): Promise<void> {\r\n    const expertModel = await this.get(id);\r\n    expertModel.updateDomains(domains);\r\n    await this.save(expertModel);\r\n  }\r\n\r\n  async addInstance(id: string, instance: InstanceInit): Promise<void> {\r\n    const expertModel = await this.get(id);\r\n    expertModel.addInstance(instance);\r\n    await this.save(expertModel);\r\n  }\r\n\r\n  async removeInstance(id: string, instanceId: number): Promise<void> {\r\n    const expertModel = await this.get(id);\r\n    expertModel.removeInstance(instanceId);\r\n    await this.save(expertModel);\r\n  }\r\n\r\n  async save(expertModel: ExpertModel): Promise<void> {\r\n    await this.pouchdbService.put(expertModel);\r\n  }\r\n}\r\n","import {\r\n  FeatureModel,\r\n  FeatureModelEntry,\r\n  FeatureModelInit,\r\n  FeatureModelJsonSchema,\r\n} from './feature-model';\r\nimport { Instance, InstanceType } from './instance';\r\nimport {\r\n  Domain,\r\n  DomainEntry,\r\n  DomainInit,\r\n} from '../development-process-registry/knowledge/domain';\r\n\r\nexport interface ExpertModelInit extends FeatureModelInit {\r\n  domains?: DomainInit[];\r\n  version?: string;\r\n}\r\n\r\nexport interface ExpertModelEntry extends FeatureModelEntry {\r\n  domains: DomainEntry[];\r\n  version: string;\r\n}\r\n\r\ninterface ExpertModelJsonSchema extends FeatureModelJsonSchema {\r\n  version: string;\r\n}\r\n\r\nexport class ExpertModel extends FeatureModel implements ExpertModelInit {\r\n  static readonly typeName = 'ExpertModel';\r\n\r\n  domains: Domain[] = [];\r\n  version: string;\r\n\r\n  constructor(\r\n    entry: ExpertModelEntry | undefined,\r\n    init: ExpertModelInit | undefined\r\n  ) {\r\n    super(entry, init, ExpertModel.typeName);\r\n    if (entry != null) {\r\n      this.domains =\r\n        entry.domains?.map((domain) => new Domain(domain, undefined)) ??\r\n        this.domains;\r\n      this.version = entry.version;\r\n    } else if (init != null) {\r\n      this.domains =\r\n        init.domains?.map((domain) => new Domain(undefined, domain)) ??\r\n        this.domains;\r\n      this.version = init.version;\r\n    }\r\n  }\r\n\r\n  update(expertModel: Partial<ExpertModel>): void {\r\n    super.update(expertModel);\r\n    if (expertModel.version !== undefined) {\r\n      this.version = expertModel.version;\r\n    }\r\n  }\r\n\r\n  updateDomains(domains: DomainInit[]): void {\r\n    this.domains = domains.map((domain) => new Domain(undefined, domain));\r\n  }\r\n\r\n  getExamples(): Instance[] {\r\n    return this.instances.filter(\r\n      (instance) => instance.type === InstanceType.EXAMPLE\r\n    );\r\n  }\r\n\r\n  getPatterns(): Instance[] {\r\n    return this.instances.filter(\r\n      (instance) => instance.type === InstanceType.PATTERN\r\n    );\r\n  }\r\n\r\n  toDb(): ExpertModelEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      domains: this.domains.map((domain) => domain.toDb()),\r\n      version: this.version,\r\n    };\r\n  }\r\n\r\n  toJSON(): ExpertModelJsonSchema {\r\n    return {\r\n      ...super.toJSON(),\r\n      version: this.version,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DefaultElementService } from '../database/default-element.service';\r\nimport { FeatureModel, FeatureModelInit } from './feature-model';\r\nimport { Author } from '../model/author';\r\nimport { CanvasDefinition } from './canvas-definition';\r\n\r\n@Injectable()\r\nexport abstract class FeatureModelService<\r\n  T extends FeatureModel,\r\n  S extends FeatureModelInit\r\n> extends DefaultElementService<T, S> {\r\n  createFeatureModel(model: S, definition: CanvasDefinition): T {\r\n    const expertModel = new this.elementConstructor(undefined, model);\r\n    expertModel.definition = definition;\r\n    return expertModel;\r\n  }\r\n\r\n  /**\r\n   * Update a feature model\r\n   *\r\n   * @param id the id of the feature model to update\r\n   * @param element the new data of the feature model\r\n   */\r\n  async update(id: string, element: Partial<T>): Promise<void> {\r\n    const featureModel = await this.get(id);\r\n    featureModel.update(element);\r\n    await this.save(featureModel);\r\n  }\r\n\r\n  async updateAuthor(id: string, author: Partial<Author>): Promise<void> {\r\n    const featureModel = await this.get(id);\r\n    featureModel.updateAuthor(author);\r\n    await this.save(featureModel);\r\n  }\r\n}\r\n","import { DatabaseModel } from '../database/database-model';\r\nimport { Author, AuthorEntry, AuthorInit } from '../model/author';\r\nimport { Feature, FeatureEntry, FeatureInit } from './feature';\r\nimport { Instance, InstanceEntry, InstanceInit } from './instance';\r\nimport { RelationshipType } from './relationships';\r\nimport { getId } from '../model/utils';\r\nimport {\r\n  CanvasDefinition,\r\n  CanvasDefinitionEntry,\r\n  CanvasDefinitionInit,\r\n} from './canvas-definition';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n} from '../database/database-entry';\r\n\r\nexport interface FeatureModelInit extends DatabaseRootInit {\r\n  name: string;\r\n  $definition: CanvasDefinitionInit;\r\n\r\n  description?: string;\r\n  copyright?: string;\r\n  author?: AuthorInit;\r\n  features?: { [id: string]: FeatureInit };\r\n  instances?: InstanceInit[];\r\n}\r\n\r\nexport interface FeatureModelEntry extends DatabaseRootEntry {\r\n  name: string;\r\n  description: string;\r\n  copyright: string;\r\n  author: AuthorEntry;\r\n  features: { [id: string]: FeatureEntry };\r\n  instances: InstanceEntry[];\r\n\r\n  nextInstanceId: number;\r\n\r\n  $definition: CanvasDefinitionEntry;\r\n}\r\n\r\nexport interface FeatureModelJsonSchema {\r\n  $definition: CanvasDefinition;\r\n  name: string;\r\n  description: string;\r\n  copyright: string;\r\n  author: Author;\r\n  features: { [id: string]: Feature };\r\n  instances: Instance[];\r\n}\r\n\r\nexport class FeatureModel extends DatabaseModel implements FeatureModelInit {\r\n  // JSON Schema (stored)\r\n  name: string;\r\n  description: string;\r\n  copyright: string;\r\n  author: Author;\r\n  features: { [id: string]: Feature } = {};\r\n  instances: Instance[] = [];\r\n\r\n  nextInstanceId: number;\r\n\r\n  $definition: CanvasDefinition;\r\n\r\n  constructor(\r\n    entry: FeatureModelEntry | undefined,\r\n    init: FeatureModelInit | undefined,\r\n    type: string\r\n  ) {\r\n    super(entry, init, type);\r\n    const element = entry ?? init;\r\n    this.nextInstanceId = element.instances ? element.instances.length : 0;\r\n    this.name = element.name;\r\n    this.description = element.description;\r\n    this.copyright = element.copyright;\r\n\r\n    if (entry != null) {\r\n      this.author = new Author(entry.author, undefined);\r\n      if (entry.features != null) {\r\n        Object.entries(entry.features).forEach(\r\n          ([id, feature]) =>\r\n            (this.features[id] = new Feature(feature, undefined, id, null))\r\n        );\r\n      }\r\n      this.instances =\r\n        entry.instances?.map((instance) => new Instance(instance, undefined)) ??\r\n        this.instances;\r\n      this.$definition = new CanvasDefinition(entry.$definition, undefined);\r\n    } else if (init != null) {\r\n      this.author = new Author(undefined, init.author ?? {});\r\n      if (init.features != null) {\r\n        Object.entries(init.features).forEach(\r\n          ([id, feature]) =>\r\n            (this.features[id] = new Feature(undefined, feature, id, null))\r\n        );\r\n      }\r\n      this.instances =\r\n        init.instances?.map((instance) => new Instance(undefined, instance)) ??\r\n        this.instances;\r\n      this.$definition = new CanvasDefinition(undefined, init.$definition);\r\n    }\r\n  }\r\n\r\n  set definition(definition: CanvasDefinition) {\r\n    this.$definition = definition;\r\n    this.features = {};\r\n    this.instances = [];\r\n    this.$definition.rootFeatures.forEach(\r\n      (feature) =>\r\n        (this.features[feature.id] = new Feature(\r\n          undefined,\r\n          feature,\r\n          feature.id,\r\n          null\r\n        ))\r\n    );\r\n  }\r\n\r\n  get definition(): CanvasDefinition {\r\n    return this.$definition;\r\n  }\r\n\r\n  update(featureModel: Partial<FeatureModel>): void {\r\n    if (featureModel.name !== undefined) {\r\n      this.name = featureModel.name;\r\n    }\r\n    if (featureModel.description !== undefined) {\r\n      this.description = featureModel.description;\r\n    }\r\n    if (featureModel.copyright !== undefined) {\r\n      this.copyright = featureModel.copyright;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the author of this feature model with new values\r\n   *\r\n   * @param author the new values of the author (values will be copied to the current object)\r\n   */\r\n  updateAuthor(author: Partial<Author>): void {\r\n    this.author.update(author);\r\n  }\r\n\r\n  /**\r\n   * Add a feature to the feature model\r\n   *\r\n   * @param feature the feature to add to the feature model (values will be copied to a new object)\r\n   * @param featureId the feature id of the parent model\r\n   * @return the added feature\r\n   */\r\n  addFeature(feature: FeatureInit, featureId: string): Feature {\r\n    const parent = this.getFeature(featureId);\r\n    if (!feature.id) {\r\n      feature.id = this.getFeatureId(feature.name);\r\n    }\r\n    return parent.addSubfeature(feature);\r\n  }\r\n\r\n  /**\r\n   * Get the next unique feature id by name\r\n   *\r\n   * @param featureName the name of the feature\r\n   */\r\n  private getFeatureId(featureName: string): string {\r\n    return getId(\r\n      featureName,\r\n      this.getFeatureList().map((f) => f.id)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove a feature from the feature model\r\n   *\r\n   * @param featureId the feature of the feature\r\n   */\r\n  removeFeature(featureId: string): void {\r\n    const feature = this.getFeature(featureId);\r\n    const parent = feature.parent;\r\n    if (parent === null) {\r\n      throw new Error('Can not remove root features');\r\n    }\r\n    parent.removeSubfeature(featureId);\r\n\r\n    // * Clean up references\r\n    const featureList = feature.getAllSubfeatures();\r\n    featureList.push(feature);\r\n    const featureIdList = featureList.map((f) => f.id);\r\n    this.cleanReferences(featureIdList, featureList);\r\n  }\r\n\r\n  protected cleanReferences(\r\n    featureIdList: string[],\r\n    featureList: Feature[]\r\n  ): void {\r\n    // ** Relationships\r\n    const removeRelationships = (f: Feature): boolean => {\r\n      f.removeRelationships(featureIdList);\r\n      return false;\r\n    };\r\n    this.iterateFeatures(removeRelationships);\r\n\r\n    // ** Instances\r\n    this.instances.forEach((instance) =>\r\n      instance.removeFeatures(featureIdList)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update a feature of this feature model\r\n   *\r\n   * @param featureId the feature of the feature\r\n   * @param parentFeatureId the feature id of the parent feature\r\n   * @param feature the new values of the feature (values will be copied to the current object)\r\n   */\r\n  updateFeature(\r\n    featureId: string,\r\n    parentFeatureId: string,\r\n    feature: Partial<Feature>\r\n  ): void {\r\n    const currentFeature = this.getFeature(featureId);\r\n    currentFeature.update(feature);\r\n    const currentParent = currentFeature.parent;\r\n    if (currentParent === null && parentFeatureId !== null) {\r\n      throw new Error('Can not move root features');\r\n    }\r\n    if (currentParent !== null && parentFeatureId === null) {\r\n      throw new Error('Can not move to root features');\r\n    }\r\n    if (currentParent !== null && currentParent.id !== parentFeatureId) {\r\n      const newParent = this.getFeature(parentFeatureId);\r\n      currentParent.removeSubfeature(featureId);\r\n      newParent.addSubfeature(currentFeature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a list of all features with their id and their levelname\r\n   */\r\n  getFeatureList(): { id: string; levelname: string }[] {\r\n    const featureList: { id: string; levelname: string }[] = [];\r\n    const addToFeatureList = (feature: Feature): boolean => {\r\n      featureList.push({ id: feature.id, levelname: feature.getLevelname() });\r\n      return false;\r\n    };\r\n    this.iterateFeatures(addToFeatureList);\r\n    return featureList;\r\n  }\r\n\r\n  /**\r\n   * Get feature map that maps id of feature to the feature\r\n   *\r\n   * @return the feature map\r\n   */\r\n  getFeatureMap(): { [id: string]: Feature } {\r\n    const featureMap: { [id: string]: Feature } = {};\r\n    const addToFeatureMap = (feature: Feature): boolean => {\r\n      featureMap[feature.id] = feature;\r\n      return false;\r\n    };\r\n    this.iterateFeatures(addToFeatureMap);\r\n    return featureMap;\r\n  }\r\n\r\n  /**\r\n   * Get a feature of this feature model by its id\r\n   *\r\n   * @param featureId the feature id of the feature to get\r\n   */\r\n  getFeature(featureId: string): Feature {\r\n    let feature: Feature = null;\r\n    const isFeature = (f: Feature): boolean => {\r\n      if (f.id === featureId) {\r\n        feature = f;\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n    this.iterateFeatures(isFeature);\r\n    if (feature === null) {\r\n      throw new Error(\r\n        'Feature with id ' +\r\n          featureId +\r\n          ' does not exist on feature model ' +\r\n          this.name\r\n      );\r\n    }\r\n    return feature;\r\n  }\r\n\r\n  // Relationships between features\r\n\r\n  addRelationship(\r\n    relationshipType: RelationshipType,\r\n    fromFeatureId: string,\r\n    toFeatureId: string\r\n  ): void {\r\n    if (!this.definition.relationshipTypes.includes(relationshipType)) {\r\n      throw new Error(\r\n        'Relationship type ' +\r\n          relationshipType +\r\n          ' is not defined for this feature model.'\r\n      );\r\n    }\r\n    const fromFeature = this.getFeature(fromFeatureId);\r\n    this.getFeature(toFeatureId); // to check whether the feature really exists\r\n    fromFeature.addRelationship(relationshipType, toFeatureId);\r\n  }\r\n\r\n  removeRelationship(\r\n    relationshipType: RelationshipType,\r\n    fromFeatureId: string,\r\n    toFeatureId: string\r\n  ): void {\r\n    if (!this.definition.relationshipTypes.includes(relationshipType)) {\r\n      throw new Error(\r\n        'Relationship type ' +\r\n          relationshipType +\r\n          ' is not defined for this feature model.'\r\n      );\r\n    }\r\n    const fromFeature = this.getFeature(fromFeatureId);\r\n    fromFeature.removeRelationship(relationshipType, toFeatureId);\r\n  }\r\n\r\n  // Instances\r\n\r\n  /**\r\n   * Add an instance to this feature model\r\n   *\r\n   * @param instance the instance to add to this feature model (values will be copied to a new object)\r\n   * @return the new instance\r\n   */\r\n  addInstance(instance: InstanceInit): Instance {\r\n    const addedInstance = new Instance(undefined, {\r\n      ...instance,\r\n      id: this.nextInstanceId++,\r\n    });\r\n    if (\r\n      !this.definition.rootFeatures.every((rootFeature) =>\r\n        addedInstance.usedFeatures.includes(rootFeature.id)\r\n      )\r\n    ) {\r\n      this.definition.rootFeatures.forEach((feature) =>\r\n        addedInstance.addFeature(feature.id)\r\n      );\r\n    }\r\n    this.instances.push(addedInstance);\r\n    return addedInstance;\r\n  }\r\n\r\n  /**\r\n   * Get an instance of this feature model\r\n   *\r\n   * @param instanceId the id of the instance\r\n   */\r\n  getInstance(instanceId: number): Instance {\r\n    return this.instances.find((instance) => instance.id === instanceId);\r\n  }\r\n\r\n  /**\r\n   * Remove an instance from this feature model\r\n   *\r\n   * @param instanceId the id of the instance\r\n   */\r\n  removeInstance(instanceId: number): void {\r\n    this.instances = this.instances.filter(\r\n      (instance) => instance.id !== instanceId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update an instance of this feature model\r\n   *\r\n   * @param instanceId the id of the instance\r\n   * @param instance the new values of the instance (values will be copied to the current object)\r\n   */\r\n  updateInstance(instanceId: number, instance: Partial<Instance>): void {\r\n    const currentInstance = this.instances.find((i) => i.id === instanceId);\r\n    currentInstance.update(instance);\r\n  }\r\n\r\n  /**\r\n   * Adapts an instance by copy it and add it as a new instance with a new name\r\n   *\r\n   * @param instanceId the id of the instance\r\n   * @param adaptationName the new name of the instance\r\n   */\r\n  adaptInstance(instanceId: number, adaptationName: string): void {\r\n    const instance = this.instances.find((i) => i.id === instanceId);\r\n    const addedInstance = this.addInstance(instance);\r\n    addedInstance.update({ id: this.nextInstanceId - 1, name: adaptationName });\r\n  }\r\n\r\n  /**\r\n   * Add a feature to an instance\r\n   *\r\n   * @param instanceId the id of the instance\r\n   * @param featureId the feature id of the feature to add to the instance\r\n   */\r\n  addFeatureToInstance(instanceId: number, featureId: string): void {\r\n    this.getFeature(featureId); // to check whether the feature really exists\r\n    const instance = this.instances.find((i) => i.id === instanceId);\r\n    instance.addFeature(featureId);\r\n  }\r\n\r\n  /**\r\n   * Remove a feature and its subfeatures from an instance\r\n   *\r\n   * @param instanceId the id of the instance\r\n   * @param featureId the feature id of the feature to remove from the instance\r\n   */\r\n  removeFeatureFromInstance(instanceId: number, featureId: string): void {\r\n    const instance = this.getInstance(instanceId);\r\n    const feature = this.getFeature(featureId);\r\n    const featureIds = feature.getAllSubfeatures().map((f) => f.id);\r\n    instance.removeFeature(feature.id);\r\n    instance.removeFeatures(featureIds);\r\n  }\r\n\r\n  // Export\r\n\r\n  toDb(): FeatureModelEntry {\r\n    const features = {};\r\n    Object.entries(this.features).forEach(\r\n      ([id, feature]) => (features[id] = feature.toDb())\r\n    );\r\n    return {\r\n      ...super.toDb(),\r\n      name: this.name,\r\n      description: this.description,\r\n      copyright: this.copyright,\r\n      author: this.author.toDb(),\r\n      features,\r\n      instances: this.instances.map((instance) => instance.toDb()),\r\n      nextInstanceId: this.nextInstanceId,\r\n      $definition: this.$definition ? this.$definition.toDb() : null,\r\n    };\r\n  }\r\n\r\n  toJSON(): FeatureModelJsonSchema {\r\n    return {\r\n      $definition: this.$definition,\r\n      name: this.name,\r\n      description: this.description ? this.description : undefined,\r\n      copyright: this.copyright,\r\n      author: this.author,\r\n      features: this.features,\r\n      instances: this.instances,\r\n    };\r\n  }\r\n\r\n  // Helper Functions\r\n\r\n  /**\r\n   * Iterates over all features until the function returns true.\r\n   * Iterates from top to bottom with all nested features\r\n   *\r\n   * @param func function to use on the features\r\n   * @param filter function to decide whether to walk through this part of the tree\r\n   */\r\n  iterateFeatures(\r\n    func: (feature: Feature) => boolean,\r\n    filter: (feature: Feature) => boolean = (): boolean => true\r\n  ): void {\r\n    const featureStack: Feature[] = [];\r\n\r\n    featureStack.push(...Object.values(this.features).reverse().filter(filter));\r\n\r\n    while (featureStack.length > 0) {\r\n      const current = featureStack.pop();\r\n\r\n      if (func(current)) {\r\n        return;\r\n      }\r\n\r\n      featureStack.push(\r\n        ...Object.values(current.subfeatures).reverse().filter(filter)\r\n      );\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Relationships,\r\n  RelationshipsEntry,\r\n  RelationshipsInit,\r\n  RelationshipType,\r\n} from './relationships';\r\nimport { DatabaseModelPart } from '../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../database/database-entry';\r\n\r\nexport enum FeatureType {\r\n  OPTIONAL = 'optional',\r\n  MANDATORY = 'mandatory',\r\n}\r\n\r\nexport enum SubfeatureConnectionsType {\r\n  OR = 'or',\r\n  XOR = 'xor',\r\n}\r\n\r\nexport interface FeatureInit extends DatabaseInit {\r\n  id?: string;\r\n  name: string;\r\n  description?: string;\r\n  type?: FeatureType;\r\n  subfeatures?: { [id: string]: FeatureInit };\r\n  subfeatureConnections?: SubfeatureConnectionsType;\r\n  relationships?: RelationshipsInit;\r\n  expertModelTrace?: { [expertModel: string]: string };\r\n}\r\n\r\nexport interface FeatureEntry extends DatabaseEntry {\r\n  name: string;\r\n  description: string;\r\n  type: FeatureType;\r\n  subfeatures: { [id: string]: FeatureEntry };\r\n  subfeatureConnections: SubfeatureConnectionsType;\r\n  relationships: RelationshipsEntry;\r\n  expertModelTrace: { [expertModel: string]: string };\r\n}\r\n\r\ninterface FeatureJsonSchema {\r\n  name: string;\r\n  description: string;\r\n  type: FeatureType;\r\n  subfeatures: { [id: string]: Feature };\r\n  subfeatureConnections: SubfeatureConnectionsType;\r\n  relationships: Relationships;\r\n}\r\n\r\nexport class Feature implements FeatureInit, DatabaseModelPart {\r\n  // JSON Schema (stored)\r\n  name: string;\r\n  description: string;\r\n  type: FeatureType = FeatureType.OPTIONAL;\r\n  subfeatures: { [id: string]: Feature } = {};\r\n  subfeatureConnections: SubfeatureConnectionsType = null;\r\n  relationships: Relationships;\r\n\r\n  // stored\r\n  expertModelTrace: { [expertModel: string]: string } = {};\r\n\r\n  // non stored\r\n  id: string;\r\n  parent: Feature = null;\r\n  level: number;\r\n\r\n  // Fix the id for ng bootstrap\r\n  _fixId: string;\r\n\r\n  get fixId(): string {\r\n    if (this._fixId === undefined) {\r\n      this._fixId = this.getFixId();\r\n    }\r\n    return this._fixId;\r\n  }\r\n\r\n  private getFixId(): string {\r\n    if (this.id == null) {\r\n      return null;\r\n    }\r\n    return '_' + this.id.replace(/[&/]/, '');\r\n  }\r\n\r\n  constructor(\r\n    entry: FeatureEntry | undefined,\r\n    init: FeatureInit | undefined,\r\n    id: string,\r\n    parent: Feature\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.id = id;\r\n    this.parent = parent;\r\n    this.level = this.parent ? this.parent.level + 1 : 1;\r\n    this.name = element.name;\r\n    this.description = element.description;\r\n    this.type = element.type ?? this.type;\r\n    this.expertModelTrace = element.expertModelTrace ?? this.expertModelTrace;\r\n    this.subfeatureConnections =\r\n      element.subfeatureConnections ?? this.subfeatureConnections;\r\n\r\n    if (entry != null) {\r\n      this.relationships = new Relationships(entry.relationships, undefined);\r\n      if (entry.subfeatures != null) {\r\n        Object.entries(entry.subfeatures).forEach(\r\n          ([subId, innerFeature]) =>\r\n            (this.subfeatures[subId] = new Feature(\r\n              innerFeature,\r\n              undefined,\r\n              subId,\r\n              this\r\n            ))\r\n        );\r\n      }\r\n    } else if (init != null) {\r\n      this.relationships = new Relationships(\r\n        undefined,\r\n        init.relationships ?? {}\r\n      );\r\n      if (init.subfeatures != null) {\r\n        Object.entries(init.subfeatures).forEach(\r\n          ([subId, innerFeature]) =>\r\n            (this.subfeatures[subId] = new Feature(\r\n              undefined,\r\n              innerFeature,\r\n              subId,\r\n              this\r\n            ))\r\n        );\r\n      }\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update this feature with new values\r\n   *\r\n   * @param feature the new values of this feature (values will be copied to the current object)\r\n   */\r\n  update(feature: Partial<Feature>): void {\r\n    Object.assign(this, feature);\r\n  }\r\n\r\n  /**\r\n   * Add a new subfeature to this feature\r\n   *\r\n   * @param feature the feature to add to the feature (values will be copied to a new object)\r\n   * @return the added feature\r\n   */\r\n  addSubfeature(feature: FeatureInit): Feature {\r\n    const id = feature.id;\r\n    this.subfeatures[id] = new Feature(undefined, feature, id, this);\r\n    return this.subfeatures[id];\r\n  }\r\n\r\n  /**\r\n   * Remove a subfeature of this feature\r\n   *\r\n   * @param featureId the featureId of the feature to remove\r\n   */\r\n  removeSubfeature(featureId: string): void {\r\n    if (!(featureId in this.subfeatures)) {\r\n      throw new Error(\r\n        'Feature ' + this.name + ' has no subfeature with id ' + featureId\r\n      );\r\n    }\r\n    delete this.subfeatures[featureId];\r\n  }\r\n\r\n  /**\r\n   * Get a list of all subfeatures and nested subfeatures\r\n   *\r\n   * @return the list of features\r\n   */\r\n  getAllSubfeatures(): Feature[] {\r\n    const featureList = [];\r\n    const addFeature = (feature: Feature): boolean => {\r\n      featureList.push(feature);\r\n      return false;\r\n    };\r\n    this.iterateFeatures(addFeature);\r\n    return featureList;\r\n  }\r\n\r\n  /**\r\n   * Get the levelname of this feature for level level\r\n   */\r\n  getLevelname(): string {\r\n    return '-'.repeat(this.level) + ' ' + this.name;\r\n  }\r\n\r\n  // Relationships\r\n\r\n  /**\r\n   * Add a relationship to a another feature\r\n   *\r\n   * @param relationshipType the relationship type\r\n   * @param toFeatureId the id of the other feature\r\n   */\r\n  addRelationship(\r\n    relationshipType: RelationshipType,\r\n    toFeatureId: string\r\n  ): void {\r\n    this.relationships.addRelationship(relationshipType, toFeatureId);\r\n  }\r\n\r\n  /**\r\n   * Remove a relationship to a another feature\r\n   *\r\n   * @param relationshipType the relationship type\r\n   * @param toFeatureId the id of the other feature\r\n   */\r\n  removeRelationship(\r\n    relationshipType: RelationshipType,\r\n    toFeatureId: string\r\n  ): void {\r\n    this.relationships.removeRelationship(relationshipType, toFeatureId);\r\n  }\r\n\r\n  /**\r\n   * Remove relationships to all features in featureIds array\r\n   *\r\n   * @param featureIds the feature ids\r\n   */\r\n  removeRelationships(featureIds: string[]): void {\r\n    this.relationships.removeRelationships(featureIds);\r\n  }\r\n\r\n  // Traces\r\n\r\n  /**\r\n   * Add a trace to a feature of an expert model\r\n   *\r\n   * @param expertModelId the expert model id\r\n   * @param expertFeatureId the id of the feature of the expert model\r\n   */\r\n  addTrace(expertModelId: string, expertFeatureId: string): void {\r\n    if (this.expertModelTrace[expertModelId]) {\r\n      throw new Error('Trace for this feature is already defined');\r\n    }\r\n    this.expertModelTrace[expertModelId] = expertFeatureId;\r\n  }\r\n\r\n  /**\r\n   * Remove a trace to a feature of an expert model\r\n   *\r\n   * @param expertModelId the expert model id\r\n   */\r\n  removeTrace(expertModelId: string): void {\r\n    delete this.expertModelTrace[expertModelId];\r\n  }\r\n\r\n  // Export\r\n\r\n  toDb(): FeatureEntry {\r\n    const subfeatures = {};\r\n    Object.entries(this.subfeatures).forEach(\r\n      ([id, feature]) => (subfeatures[id] = feature.toDb())\r\n    );\r\n    return {\r\n      name: this.name,\r\n      description: this.description,\r\n      type: this.type,\r\n      subfeatures,\r\n      subfeatureConnections: this.subfeatureConnections,\r\n      relationships: this.relationships.toDb(),\r\n      expertModelTrace: this.expertModelTrace,\r\n    };\r\n  }\r\n\r\n  toJSON(): FeatureJsonSchema {\r\n    return {\r\n      name: this.name,\r\n      description: this.description ? this.description : undefined,\r\n      type: this.type,\r\n      subfeatures: this.subfeatures,\r\n      subfeatureConnections: this.subfeatureConnections,\r\n      relationships: this.relationships,\r\n    };\r\n  }\r\n\r\n  // Helper Functions\r\n\r\n  /**\r\n   * Iterates over all features until the function returns true.\r\n   * Iterates from top to bottom with all nested features\r\n   *\r\n   * @param func function to use on the features\r\n   */\r\n  private iterateFeatures(func: (feature: Feature) => boolean): void {\r\n    const featureStack: Feature[] = [];\r\n\r\n    featureStack.push(...Object.values(this.subfeatures).reverse());\r\n\r\n    while (featureStack.length > 0) {\r\n      const current = featureStack.pop();\r\n\r\n      if (func(current)) {\r\n        return;\r\n      }\r\n\r\n      featureStack.push(...Object.values(current.subfeatures).reverse());\r\n    }\r\n  }\r\n}\r\n","import { CompanyModel } from './company-model';\r\nimport { ArtifactDataReference } from '../development-process-registry/running-process/artifact-data';\r\n\r\nexport class InstanceArtifactData implements ArtifactDataReference {\r\n  type = CompanyModel.typeName;\r\n  id: string;\r\n  instanceId: number;\r\n\r\n  constructor(instanceArtifactData: Partial<InstanceArtifactData>) {\r\n    Object.assign(this, instanceArtifactData);\r\n  }\r\n}\r\n","import { DatabaseModelPart } from '../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../database/database-entry';\r\n\r\nexport enum InstanceType {\r\n  PATTERN = 'pattern',\r\n  EXAMPLE = 'example',\r\n}\r\n\r\nexport interface InstanceInit extends DatabaseInit {\r\n  name: string;\r\n  type: InstanceType;\r\n  description?: string;\r\n  usedFeatures?: string[];\r\n  id?: number;\r\n}\r\n\r\nexport interface InstanceEntry extends DatabaseEntry {\r\n  name: string;\r\n  type: InstanceType;\r\n  description: string;\r\n  usedFeatures: string[];\r\n  id: number;\r\n}\r\n\r\ninterface InstanceJsonSchema {\r\n  name: string;\r\n  type: InstanceType;\r\n  description: string;\r\n  usedFeatures: string[];\r\n}\r\n\r\nexport class Instance implements InstanceInit, DatabaseModelPart {\r\n  // JSON Schema (stored)\r\n  name: string;\r\n  type: InstanceType;\r\n  description: string;\r\n  usedFeatures: string[] = [];\r\n\r\n  // stored\r\n  id: number;\r\n\r\n  constructor(\r\n    entry: InstanceEntry | undefined,\r\n    init: InstanceInit | undefined\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.id = element.id;\r\n    this.name = element.name;\r\n    this.type = element.type;\r\n    this.description = element.description;\r\n    this.usedFeatures = element.usedFeatures ?? this.usedFeatures;\r\n  }\r\n\r\n  /**\r\n   * Update this instance with new values\r\n   *\r\n   * @param instance the new values of this instance (values will be copied to the current object)\r\n   */\r\n  update(instance: Partial<Instance>): void {\r\n    Object.assign(this, instance);\r\n  }\r\n\r\n  /**\r\n   * Add a feature to this instance\r\n   *\r\n   * @param featureId the feature id of the feature to add\r\n   */\r\n  addFeature(featureId: string): void {\r\n    if (this.usedFeatures.includes(featureId)) {\r\n      throw new Error(\r\n        'Feature with id ' +\r\n          featureId +\r\n          ' is already used in instance ' +\r\n          this.name\r\n      );\r\n    }\r\n    this.usedFeatures.push(featureId);\r\n  }\r\n\r\n  /**\r\n   * Remove a feature from this instance\r\n   *\r\n   * @param featureId the feature id of the feature to remove\r\n   */\r\n  removeFeature(featureId: string): void {\r\n    if (!this.usedFeatures.includes(featureId)) {\r\n      throw new Error(\r\n        'Feature with id ' + featureId + ' is not used in instance ' + this.name\r\n      );\r\n    }\r\n    this.usedFeatures = this.usedFeatures.filter((id) => id !== featureId);\r\n  }\r\n\r\n  /**\r\n   * Remove features from this instance\r\n   *\r\n   * @param featureIds the feature ids of the features to remove\r\n   */\r\n  removeFeatures(featureIds: string[]): void {\r\n    this.usedFeatures = this.usedFeatures.filter(\r\n      (id) => !featureIds.includes(id)\r\n    );\r\n  }\r\n\r\n  // Export\r\n\r\n  toDb(): InstanceEntry {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      type: this.type,\r\n      description: this.description,\r\n      usedFeatures: this.usedFeatures,\r\n    };\r\n  }\r\n\r\n  toJSON(): InstanceJsonSchema {\r\n    return {\r\n      name: this.name,\r\n      type: this.type,\r\n      description: this.description,\r\n      usedFeatures: this.usedFeatures,\r\n    };\r\n  }\r\n}\r\n","import { DatabaseModelPart } from '../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../database/database-entry';\r\n\r\nexport type RelationshipType = string;\r\n\r\nexport interface RelationshipsInit extends DatabaseInit {\r\n  relationships?: { [type: string]: string[] };\r\n}\r\n\r\nexport interface RelationshipsEntry extends DatabaseEntry {\r\n  relationships: { [type: string]: string[] };\r\n}\r\n\r\nexport class Relationships implements RelationshipsInit, DatabaseModelPart {\r\n  // JSON Schema (stored)\r\n  relationships: { [type: string]: string[] } = {};\r\n\r\n  constructor(\r\n    entry: RelationshipsEntry | undefined,\r\n    init: RelationshipsInit | undefined\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.relationships = element.relationships ?? this.relationships;\r\n  }\r\n\r\n  /**\r\n   * Add a relationship to a feature\r\n   *\r\n   * @param relationshipType the relationship type\r\n   * @param featureId the id of the feature\r\n   */\r\n  addRelationship(relationshipType: RelationshipType, featureId: string): void {\r\n    if (!(relationshipType in this.relationships)) {\r\n      this.relationships[relationshipType] = [];\r\n    }\r\n    const list: string[] = this.relationships[relationshipType];\r\n    if (list.includes(featureId)) {\r\n      return;\r\n    }\r\n    list.push(featureId);\r\n  }\r\n\r\n  /**\r\n   * Remove a relationship to a feature\r\n   *\r\n   * @param relationshipType the relationship type\r\n   * @param featureId the id of the feature\r\n   */\r\n  removeRelationship(\r\n    relationshipType: RelationshipType,\r\n    featureId: string\r\n  ): void {\r\n    const list: string[] = this.relationships[relationshipType];\r\n    if (list == null) {\r\n      return;\r\n    }\r\n    this.relationships[relationshipType] = list.filter(\r\n      (id) => id !== featureId\r\n    );\r\n    if (this.relationships[relationshipType].length === 0) {\r\n      delete this.relationships[relationshipType];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove relationships to all features in featureIds array\r\n   *\r\n   * @param featureIds the feature ids\r\n   */\r\n  removeRelationships(featureIds: string[]): void {\r\n    const relationshipTypes = Object.keys(this.relationships);\r\n    relationshipTypes.forEach((type) => {\r\n      this.relationships[type] = this.relationships[type].filter(\r\n        (id) => !featureIds.includes(id)\r\n      );\r\n      if (this.relationships[type].length === 0) {\r\n        delete this.relationships[type];\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true, if it has no relationships, otherwise false\r\n   *\r\n   * @return true if it has no relationships\r\n   */\r\n  hasNoRelationships(): boolean {\r\n    const relationshipLists = Object.values(this.relationships);\r\n    const relationshipCount = relationshipLists\r\n      .map((list) => list.length)\r\n      .reduce((acc, current) => acc + current, 0);\r\n    return relationshipCount === 0;\r\n  }\r\n\r\n  /**\r\n   * Get an array of all referenced feature ids\r\n   *\r\n   * @return the array with all feature ids\r\n   */\r\n  getAllReferencedFeatureIds(): string[] {\r\n    const relationshipLists = Object.values(this.relationships);\r\n    return relationshipLists.reduce((acc, current) => acc.concat(current), []);\r\n  }\r\n\r\n  /**\r\n   * Get the relationships of a specific type\r\n   *\r\n   * @param relationshipType the type of the relationship\r\n   * @return the array with all feature ids\r\n   */\r\n  getRelationships(relationshipType: RelationshipType): string[] {\r\n    const list: string[] = this.relationships[relationshipType];\r\n    if (list == null) {\r\n      return [];\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the relationship of a specific type to a specific feature\r\n   * is included\r\n   *\r\n   * @param relationshipType the relationship type\r\n   * @param featureId the id of the feature\r\n   * @return true if the relationship exists\r\n   */\r\n  hasRelationship(\r\n    relationshipType: RelationshipType,\r\n    featureId: string\r\n  ): boolean {\r\n    const relationships = this.getRelationships(relationshipType);\r\n    return relationships.includes(featureId);\r\n  }\r\n\r\n  /**\r\n   * Get all used relationship types in this relationship class\r\n   *\r\n   * @return an array of relationship types\r\n   */\r\n  getRelationshipTypes(): RelationshipType[] {\r\n    return Object.keys(this.relationships);\r\n  }\r\n\r\n  // Export\r\n\r\n  toDb(): RelationshipsEntry {\r\n    return {\r\n      relationships: this.relationships,\r\n    };\r\n  }\r\n}\r\n","import { DatabaseModelPart } from '../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../database/database-entry';\r\n\r\nexport interface TraceInit extends DatabaseInit {\r\n  expertFeatureIdMap?: { [expertModelFeatureId: string]: string };\r\n}\r\n\r\nexport interface TraceEntry extends DatabaseEntry {\r\n  expertFeatureIdMap: { [expertModelFeatureId: string]: string };\r\n}\r\n\r\nexport class Trace implements DatabaseModelPart {\r\n  // stored\r\n  expertFeatureIdMap: { [expertModelFeatureId: string]: string } = {};\r\n\r\n  constructor(entry: TraceEntry, init: TraceInit) {\r\n    const element = entry ?? init;\r\n    this.expertFeatureIdMap =\r\n      element.expertFeatureIdMap ?? this.expertFeatureIdMap;\r\n  }\r\n\r\n  addTrace(expertFeatureId: string, companyFeatureId: string): void {\r\n    this.expertFeatureIdMap[expertFeatureId] = companyFeatureId;\r\n  }\r\n\r\n  deleteTrace(expertFeatureId: string): void {\r\n    delete this.expertFeatureIdMap[expertFeatureId];\r\n  }\r\n\r\n  toDb(): TraceEntry {\r\n    return {\r\n      expertFeatureIdMap: this.expertFeatureIdMap,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { CanvasResolveService } from '../../canvas-resolve.service';\r\nimport { InstanceService } from '../../instances/instance.service';\r\nimport { InstanceLoaderService } from '../instance-loader.service';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { RunningProcess } from '../../../development-process-registry/running-process/running-process';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { Comment } from '../../../development-process-registry/running-process/comment';\r\nimport { RunningProcessService } from '../../../development-process-registry/running-process/running-process.service';\r\n\r\n@Component({\r\n  selector: 'app-compare',\r\n  templateUrl: './compare.component.html',\r\n  styleUrls: ['./compare.component.css'],\r\n  providers: [InstanceLoaderService, ProcessApiService],\r\n})\r\nexport class CompareComponent implements OnInit {\r\n  competitors: Instance[];\r\n\r\n  expertModelId: string = null;\r\n  compareInstance: Instance = null;\r\n  percentages: { [id: string]: number } = null;\r\n\r\n  constructor(\r\n    private canvasResolveService: CanvasResolveService,\r\n    private companyModelService: CompanyModelService,\r\n    private instanceLoaderService: InstanceLoaderService,\r\n    private instanceService: InstanceService,\r\n    private processApiService: ProcessApiService,\r\n    private runningProcessService: RunningProcessService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.instanceLoaderService.loaded.subscribe(() => {\r\n      this.competitors = this.companyModel.instances.filter(\r\n        (instance) => instance.id !== this.instance.id\r\n      );\r\n      if (this.compareInstance) {\r\n        this.compare(this.compareInstance, this.expertModelId);\r\n      }\r\n    });\r\n  }\r\n\r\n  finish(): void {\r\n    this.canvasResolveService.resolveEditCanvas(\r\n      this.processApiService.stepInfo,\r\n      this.companyModel._id,\r\n      this.instance.id\r\n    );\r\n  }\r\n\r\n  compare(instance: Instance, modelId: string): void {\r\n    if (modelId !== this.companyModel._id) {\r\n      this.expertModelId = modelId;\r\n    } else {\r\n      this.expertModelId = null;\r\n    }\r\n    this.compareInstance = this.expertModelId\r\n      ? this.instanceService.convertExpertInstance(\r\n          this.companyModel,\r\n          this.expertModelId,\r\n          instance\r\n        )\r\n      : instance;\r\n    this.percentages = this.instanceService.compareInstances(\r\n      this.companyModel,\r\n      this.instance,\r\n      this.compareInstance\r\n    );\r\n  }\r\n\r\n  clearCompare(): void {\r\n    this.expertModelId = null;\r\n    this.compareInstance = null;\r\n    this.percentages = null;\r\n  }\r\n\r\n  async addComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.addComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async updateComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.updateComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async removeComment(commentId: string): Promise<void> {\r\n    await this.runningProcessService.removeComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      commentId\r\n    );\r\n  }\r\n\r\n  async updateCompanyModel(): Promise<void> {\r\n    await this.companyModelService.save(this.companyModel);\r\n  }\r\n\r\n  get companyModel(): CompanyModel {\r\n    return this.instanceLoaderService.companyModel;\r\n  }\r\n\r\n  get instance(): Instance {\r\n    return this.instanceLoaderService.instance;\r\n  }\r\n\r\n  private get runningProcess(): RunningProcess {\r\n    return this.processApiService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.processApiService.isCorrectStep();\r\n  }\r\n}\r\n","<app-api-navigation apiName=\"Compare Canvas\"></app-api-navigation>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"instance && runningMethod != null && isCorrectStep()\"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <app-instance\r\n    [compareInstance]=\"compareInstance\"\r\n    [percentages]=\"percentages\"\r\n    [featureModel]=\"companyModel\"\r\n    [instance]=\"instance\"\r\n    [adaptable]=\"false\"\r\n    [updatable]=\"false\"\r\n    (updateFeatureModel)=\"updateCompanyModel()\"\r\n  ></app-instance>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Compare</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-instance-compare-form\r\n        [companyModel]=\"companyModel\"\r\n        [currentlyComparing]=\"compareInstance != null\"\r\n        [competitors]=\"competitors\"\r\n        (compare)=\"compare($event.instance, $event.featureModelId)\"\r\n        (clearCompare)=\"clearCompare()\"\r\n      ></app-instance-compare-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <app-running-process-method-comments\r\n      [comments]=\"runningMethod.comments\"\r\n      (addComment)=\"addComment($event)\"\r\n      (updateComment)=\"updateComment($event)\"\r\n      (removeComment)=\"removeComment($event)\"\r\n    ></app-running-process-method-comments>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Finish comparison</h6>\r\n    <button class=\"btn btn-sm btn-primary btn-block\" (click)=\"finish()\">\r\n      Finish comparison\r\n    </button>\r\n  </div>\r\n</main>\r\n","import { Component, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { CompanyModelEntry } from '../../../canvas-meta-model/company-model';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { DecisionConfigurationFormComponent } from '../../../development-process-registry/module-api/decision-configuration-form-component';\r\nimport { Domain } from '../../../development-process-registry/knowledge/domain';\r\nimport {\r\n  FeatureModelFormService,\r\n  FeatureModelFormValue,\r\n} from '../../form-services/feature-model-form.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CanvasDefinitionService } from '../../../canvas-meta-model/canvas-definition.service';\r\nimport { BmProcess } from '../../../development-process-registry/bm-process/bm-process';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-canvas-configuration',\r\n  templateUrl: './create-canvas-configuration.component.html',\r\n  styleUrls: ['./create-canvas-configuration.component.css'],\r\n})\r\nexport class CreateCanvasConfigurationComponent\r\n  implements OnInit, DecisionConfigurationFormComponent\r\n{\r\n  formGroup: FormGroup;\r\n  bmProcess: BmProcess;\r\n  predefinedInput: any;\r\n  contextDomains: Domain[];\r\n  stepDecision: any;\r\n  forceUpdate: EventEmitter<any>;\r\n\r\n  createForm: FormGroup;\r\n\r\n  companyModels: CompanyModelEntry[];\r\n\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('createModal', { static: true }) createModal: unknown;\r\n\r\n  constructor(\r\n    private canvasDefinitionService: CanvasDefinitionService,\r\n    private companyModelService: CompanyModelService,\r\n    private fb: FormBuilder,\r\n    private featureModelFormService: FeatureModelFormService,\r\n    private modalService: NgbModal,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadCompanyModels();\r\n    this.createForm = this.fb.group({\r\n      featureModel: this.featureModelFormService.createForm(),\r\n    });\r\n  }\r\n\r\n  openCreateCompanyModelModal(): void {\r\n    this.modalReference = this.modalService.open(this.createModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async createCompanyModel(): Promise<void> {\r\n    const model: FeatureModelFormValue = this.featureModelFormService.get(\r\n      this.createForm.get('featureModel').value\r\n    );\r\n    const canvasDefinition = await this.canvasDefinitionService.get(\r\n      this.predefinedInput.definitionId\r\n    );\r\n    const companyModel = this.companyModelService.createFeatureModel(\r\n      { ...model, $definition: canvasDefinition },\r\n      canvasDefinition\r\n    );\r\n    await this.companyModelService.add(companyModel);\r\n    this.forceUpdate.emit({\r\n      companyModelId: companyModel._id,\r\n      automaticCreation: true,\r\n    });\r\n    this.modalService.dismissAll();\r\n    await this.router.navigate(['companyModels', companyModel._id, 'select'], {\r\n      queryParams: {\r\n        bmProcessId: this.bmProcess._id,\r\n      },\r\n    });\r\n  }\r\n\r\n  async navigateSelectExpertKnowledge(): Promise<void> {\r\n    this.modalService.dismissAll();\r\n    await this.router.navigate(\r\n      ['companyModels', this.stepDecision.companyModelId, 'select'],\r\n      {\r\n        queryParams: {\r\n          bmProcessId: this.bmProcess._id,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  private async loadCompanyModels(): Promise<void> {\r\n    this.companyModels = await this.companyModelService.getList(\r\n      this.predefinedInput.definitionId\r\n    );\r\n  }\r\n\r\n  get companyModelIdControl(): FormControl {\r\n    return this.formGroup.get('companyModelId') as FormControl;\r\n  }\r\n}\r\n","<ng-template #createModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Create Composed Model</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"text-muted pt-3\">\r\n      <form [formGroup]=\"createForm\" (ngSubmit)=\"createCompanyModel()\">\r\n        <app-feature-model-subform\r\n          formGroupName=\"featureModel\"\r\n        ></app-feature-model-subform>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!createForm.valid\"\r\n            >\r\n              Create Composed Model\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-container [formGroup]=\"formGroup\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"companyModelSelector\" class=\"col-sm-6 col-form-label\"\r\n      >Composed Model</label\r\n    >\r\n    <div class=\"col-sm-6 input-group\">\r\n      <select\r\n        id=\"companyModelSelector\"\r\n        formControlName=\"companyModelId\"\r\n        class=\"form-control\"\r\n      >\r\n        <option *ngFor=\"let model of companyModels\" [value]=\"model._id\">\r\n          {{ model.name }}\r\n        </option>\r\n      </select>\r\n      <div\r\n        class=\"input-group-append\"\r\n        *ngIf=\"\r\n          stepDecision &&\r\n          stepDecision.automaticCreation &&\r\n          stepDecision.companyModelId === companyModelIdControl.value\r\n        \"\r\n      >\r\n        <button\r\n          class=\"btn btn-outline-warning\"\r\n          type=\"button\"\r\n          (click)=\"navigateSelectExpertKnowledge()\"\r\n        >\r\n          Edit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"d-flex\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-primary ml-auto\"\r\n      (click)=\"openCreateCompanyModelModal()\"\r\n    >\r\n      Create new Composed Model\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FeatureModelInstanceFormService } from '../../form-services/feature-model-instance-form.service';\r\nimport { InstanceInit } from '../../../canvas-meta-model/instance';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { CanvasResolveService } from '../../canvas-resolve.service';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\n\r\n@Component({\r\n  selector: 'app-create-canvas',\r\n  templateUrl: './create-canvas.component.html',\r\n  styleUrls: ['./create-canvas.component.css'],\r\n  providers: [ProcessApiService],\r\n})\r\nexport class CreateCanvasComponent implements OnInit {\r\n  companyModel: CompanyModel;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private canvasResolveService: CanvasResolveService,\r\n    private companyModelService: CompanyModelService,\r\n    private featureModelInstanceFormService: FeatureModelInstanceFormService,\r\n    private processApiService: ProcessApiService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.featureModelInstanceFormService.createForm();\r\n    this.processApiService.loaded.subscribe(() => this.loadCompanyModel());\r\n  }\r\n\r\n  async submit(): Promise<void> {\r\n    if (this.processApiService.stepInfo) {\r\n      const companyModel = await this.companyModelService.get(\r\n        this.runningMethod.decision.stepDecisions[\r\n          this.runningMethod.currentStepNumber\r\n        ].companyModelId\r\n      );\r\n      const instance: InstanceInit = this.featureModelInstanceFormService.get(\r\n        this.form.value\r\n      );\r\n      const instanceId = companyModel.addInstance(instance).id;\r\n      companyModel.resetDatabaseState();\r\n      companyModel.createdByMethod = true;\r\n      await this.companyModelService.save(companyModel);\r\n      this.canvasResolveService.resolveCreateCanvas(\r\n        this.processApiService.stepInfo,\r\n        companyModel._id,\r\n        instanceId\r\n      );\r\n    }\r\n  }\r\n\r\n  private async loadCompanyModel(): Promise<void> {\r\n    this.companyModel = await this.companyModelService.get(\r\n      this.runningMethod.decision.stepDecisions[\r\n        this.runningMethod.currentStepNumber\r\n      ].companyModelId\r\n    );\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.processApiService.isCorrectStep();\r\n  }\r\n}\r\n","<app-api-navigation apiName=\"Create Canvas\"></app-api-navigation>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"runningMethod != null && isCorrectStep()\"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Create Artifact</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n        <app-feature-model-instance-subform></app-feature-model-instance-subform>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!form.valid\"\r\n            >\r\n              Create Canvas Artifact\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"companyModel\" class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">\r\n      Canvas Artifact Preview: {{ companyModel.definition.name }}\r\n    </h6>\r\n    <section>\r\n      <app-feature-model [featureModel]=\"companyModel\"></app-feature-model>\r\n    </section>\r\n    <section class=\"mt-3\" *ngIf=\"companyModel.definition.description\">\r\n      <h6>Description</h6>\r\n      <p class=\"mb-0\">{{ companyModel.definition.description }}</p>\r\n    </section>\r\n  </div>\r\n</main>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { InstanceInit } from '../../../canvas-meta-model/instance';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { FeatureModelInstanceFormService } from '../../form-services/feature-model-instance-form.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { CanvasResolveService } from '../../canvas-resolve.service';\r\n\r\n@Component({\r\n  selector: 'app-create-competitor-canvas',\r\n  templateUrl: './create-competitor-canvas.component.html',\r\n  styleUrls: ['./create-competitor-canvas.component.css'],\r\n  providers: [ProcessApiService],\r\n})\r\nexport class CreateCompetitorCanvasComponent implements OnInit, OnDestroy {\r\n  companyModel: CompanyModel;\r\n  instanceId: number;\r\n\r\n  form: FormGroup = this.fb.group({\r\n    competitors: this.fb.array([]),\r\n  });\r\n\r\n  private routeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private canvasResolveService: CanvasResolveService,\r\n    private companyModelService: CompanyModelService,\r\n    private fb: FormBuilder,\r\n    private featureModelInstanceFormService: FeatureModelInstanceFormService,\r\n    public processApiService: ProcessApiService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.routeSubscription = this.route.paramMap.subscribe((paramMap) => {\r\n      this.instanceId = +paramMap.get('instanceId');\r\n      void this.loadCompanyModel(paramMap.get('companyModelId'));\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.routeSubscription) {\r\n      this.routeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  addCompetitor(): void {\r\n    this.formArray.push(this.featureModelInstanceFormService.createForm());\r\n  }\r\n\r\n  removeCompetitor(index: number): void {\r\n    this.formArray.removeAt(index);\r\n  }\r\n\r\n  async submit(): Promise<void> {\r\n    if (this.processApiService.stepInfo) {\r\n      const companyModel = this.companyModel;\r\n      for (const control of this.formArray.controls) {\r\n        const instance: InstanceInit = this.featureModelInstanceFormService.get(\r\n          control.value\r\n        );\r\n        companyModel.addInstance(instance);\r\n      }\r\n      await this.companyModelService.save(companyModel);\r\n      this.canvasResolveService.resolveEditCanvas(\r\n        this.processApiService.stepInfo,\r\n        this.companyModel._id,\r\n        this.instanceId\r\n      );\r\n    }\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.form.get('competitors') as FormArray;\r\n  }\r\n\r\n  private async loadCompanyModel(companyModelId: string): Promise<void> {\r\n    this.companyModel = await this.companyModelService.get(companyModelId);\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"processApiService.runningProcess\">\r\n    <a\r\n      class=\"nav-link\"\r\n      [routerLink]=\"[\r\n        '/',\r\n        'runningprocess',\r\n        'runningprocessview',\r\n        processApiService.runningProcess._id\r\n      ]\"\r\n    >\r\n      {{ processApiService.runningProcess.process.name }} &ndash;\r\n      {{ processApiService.runningProcess.name }}\r\n    </a>\r\n    <a\r\n      class=\"nav-link\"\r\n      [routerLink]=\"[\r\n        '/',\r\n        'runningprocess',\r\n        'runningprocessview',\r\n        processApiService.runningProcess._id,\r\n        'method',\r\n        processApiService.runningMethod.executionId\r\n      ]\"\r\n    >\r\n      {{ processApiService.runningMethod.methodName }}\r\n    </a>\r\n    <a\r\n      class=\"nav-link active\"\r\n      [routerLink]=\"[]\"\r\n      [queryParams]=\"processApiService.queryParams\"\r\n    >\r\n      Create Competitor Canvas\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"\r\n    processApiService.runningMethod != null && processApiService.isCorrectStep()\r\n  \"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Create Competitors</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n        <ul class=\"list-group mb-3\" formArrayName=\"competitors\">\r\n          <li\r\n            *ngFor=\"let control of formArray.controls; let index = index\"\r\n            class=\"list-group-item\"\r\n          >\r\n            <app-feature-model-instance-subform\r\n              [formGroupName]=\"index.toString()\"\r\n            ></app-feature-model-instance-subform>\r\n            <div class=\"d-flex\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-dark ml-auto\"\r\n                (click)=\"removeCompetitor(index)\"\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <div class=\"d-flex\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary ml-auto mb-3\"\r\n            (click)=\"addCompetitor()\"\r\n          >\r\n            Add Competitor\r\n          </button>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!form.valid\"\r\n            >\r\n              Create Competitors\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { CanvasResolveService } from '../../canvas-resolve.service';\r\nimport { ConformanceReport } from '../../../canvas-meta-model/conformance-report';\r\nimport { CanvasModelConsistencyService } from '../../../canvas-meta-model/canvas-model-consistency.service';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { InstanceLoaderService } from '../instance-loader.service';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { RunningProcess } from '../../../development-process-registry/running-process/running-process';\r\nimport { Comment } from '../../../development-process-registry/running-process/comment';\r\nimport { RunningProcessService } from '../../../development-process-registry/running-process/running-process.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-canvas',\r\n  templateUrl: './edit-canvas.component.html',\r\n  styleUrls: ['./edit-canvas.component.css'],\r\n  providers: [InstanceLoaderService, ProcessApiService],\r\n})\r\nexport class EditCanvasComponent implements OnInit {\r\n  conformanceIsChecked: boolean;\r\n  conformance: ConformanceReport;\r\n\r\n  constructor(\r\n    private canvasModelConsistencyService: CanvasModelConsistencyService,\r\n    private canvasResolveService: CanvasResolveService,\r\n    private companyModelService: CompanyModelService,\r\n    private instanceLoaderService: InstanceLoaderService,\r\n    private processApiService: ProcessApiService,\r\n    private runningProcessService: RunningProcessService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.instanceLoaderService.loaded.subscribe(() => {\r\n      if (this.conformanceIsChecked) {\r\n        this.checkConformance();\r\n      } else {\r\n        this.uncheckConformance();\r\n      }\r\n    });\r\n  }\r\n\r\n  uncheckConformance(): void {\r\n    this.conformanceIsChecked = false;\r\n    this.conformance = new ConformanceReport();\r\n  }\r\n\r\n  checkConformance(): void {\r\n    this.conformance =\r\n      this.canvasModelConsistencyService.checkConformanceOfInstance(\r\n        this.companyModel,\r\n        this.instance.id,\r\n        []\r\n      );\r\n    this.conformanceIsChecked = true;\r\n  }\r\n\r\n  async addComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.addComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async updateComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.updateComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async removeComment(commentId: string): Promise<void> {\r\n    await this.runningProcessService.removeComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      commentId\r\n    );\r\n  }\r\n\r\n  finish(): void {\r\n    this.canvasResolveService.resolveEditCanvas(\r\n      this.processApiService.stepInfo,\r\n      this.companyModel._id,\r\n      this.instance.id\r\n    );\r\n  }\r\n\r\n  async updateCompanyModel(): Promise<void> {\r\n    await this.companyModelService.save(this.companyModel);\r\n  }\r\n\r\n  get companyModel(): CompanyModel {\r\n    return this.instanceLoaderService.companyModel;\r\n  }\r\n\r\n  get instance(): Instance {\r\n    return this.instanceLoaderService.instance;\r\n  }\r\n\r\n  private get runningProcess(): RunningProcess {\r\n    return this.processApiService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.processApiService.isCorrectStep();\r\n  }\r\n}\r\n","<app-api-navigation apiName=\"Edit Canvas\"></app-api-navigation>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"instance && runningMethod && isCorrectStep()\"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <app-instance\r\n    [conformance]=\"conformance\"\r\n    [conformanceIsChecked]=\"conformanceIsChecked\"\r\n    [featureModel]=\"companyModel\"\r\n    [instance]=\"instance\"\r\n    [adaptable]=\"false\"\r\n    [updatable]=\"false\"\r\n    (updateFeatureModel)=\"updateCompanyModel()\"\r\n  ></app-instance>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Conformance Check</h6>\r\n    <div class=\"container\">\r\n      <div class=\"row\" style=\"margin-top: 20px\">\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"!conformanceIsChecked\"\r\n          (click)=\"checkConformance()\"\r\n          class=\"btn btn-dark btn-sm btn-block\"\r\n        >\r\n          Activate Conformance Checking of Business Model\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"conformanceIsChecked\"\r\n          (click)=\"uncheckConformance()\"\r\n          class=\"btn btn-dark btn-sm btn-block\"\r\n        >\r\n          Deactivate Conformance Checking of Business Model\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"conformanceIsChecked\" style=\"margin-top: 20px\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <h6>Errors</h6>\r\n            <ul>\r\n              <li *ngFor=\"let error of conformance.errors\">{{ error }}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <app-running-process-method-comments\r\n      [comments]=\"runningMethod.comments\"\r\n      (addComment)=\"addComment($event)\"\r\n      (updateComment)=\"updateComment($event)\"\r\n      (removeComment)=\"removeComment($event)\"\r\n    ></app-running-process-method-comments>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Finish editing</h6>\r\n    <button class=\"btn btn-sm btn-primary btn-block\" (click)=\"finish()\">\r\n      Finish editing\r\n    </button>\r\n  </div>\r\n</main>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { Subscription } from 'rxjs';\r\nimport { InstanceLoaderService } from '../instance-loader.service';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { RunningProcess } from '../../../development-process-registry/running-process/running-process';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { Comment } from '../../../development-process-registry/running-process/comment';\r\nimport { RunningProcessService } from '../../../development-process-registry/running-process/running-process.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-competitor-canvas',\r\n  templateUrl: './edit-competitor-canvas.component.html',\r\n  styleUrls: ['./edit-competitor-canvas.component.css'],\r\n  providers: [InstanceLoaderService, ProcessApiService],\r\n})\r\nexport class EditCompetitorCanvasComponent implements OnInit, OnDestroy {\r\n  private competitorId: number;\r\n  competitor: Instance;\r\n\r\n  private routeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private companyModelService: CompanyModelService,\r\n    private instanceLoaderService: InstanceLoaderService,\r\n    private processApiService: ProcessApiService,\r\n    private route: ActivatedRoute,\r\n    private runningProcessService: RunningProcessService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.routeSubscription = this.route.paramMap.subscribe((paramMap) => {\r\n      const newCompetitorId = +paramMap.get('competitorId');\r\n      if (this.competitorId !== newCompetitorId) {\r\n        this.competitorId = newCompetitorId;\r\n        if (this.companyModel != null) {\r\n          this.competitor = this.companyModel.getInstance(this.competitorId);\r\n        }\r\n      }\r\n    });\r\n    this.instanceLoaderService.loaded.subscribe(() => {\r\n      this.competitor = this.companyModel.getInstance(this.competitorId);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.routeSubscription) {\r\n      this.routeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async updateCompetitor(): Promise<void> {\r\n    await this.companyModelService.save(this.companyModel);\r\n  }\r\n\r\n  async addComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.addComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async updateComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.updateComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async removeComment(commentId: string): Promise<void> {\r\n    await this.runningProcessService.removeComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      commentId\r\n    );\r\n  }\r\n\r\n  get companyModel(): CompanyModel {\r\n    return this.instanceLoaderService.companyModel;\r\n  }\r\n\r\n  get instanceId(): number {\r\n    return this.instanceLoaderService.instance.id;\r\n  }\r\n\r\n  private get runningProcess(): RunningProcess {\r\n    return this.processApiService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  get queryParams(): {\r\n    step: number;\r\n    runningProcessId: string;\r\n    executionId: string;\r\n  } {\r\n    return this.processApiService.queryParams;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.processApiService.isCorrectStep();\r\n  }\r\n}\r\n","<app-api-navigation [apiName]=\"'Edit ' + (competitor ? competitor.name : '')\">\r\n  <a\r\n    *ngIf=\"companyModel != null\"\r\n    class=\"nav-link\"\r\n    [routerLink]=\"[\r\n      '/',\r\n      'canvas',\r\n      this.companyModel._id,\r\n      'instance',\r\n      this.instanceId,\r\n      'competitors',\r\n      'edit'\r\n    ]\"\r\n    [queryParams]=\"queryParams\"\r\n  >\r\n    Edit Competitors\r\n  </a>\r\n</app-api-navigation>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"competitor && runningMethod != null && isCorrectStep()\"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <app-instance\r\n    [featureModel]=\"companyModel\"\r\n    [instance]=\"competitor\"\r\n    [adaptable]=\"false\"\r\n    [updatable]=\"true\"\r\n    (updateFeatureModel)=\"updateCompetitor()\"\r\n  ></app-instance>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <app-running-process-method-comments\r\n      [comments]=\"runningMethod.comments\"\r\n      (addComment)=\"addComment($event)\"\r\n      (updateComment)=\"updateComment($event)\"\r\n      (removeComment)=\"removeComment($event)\"\r\n    ></app-running-process-method-comments>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <a\r\n      class=\"btn btn-sm btn-primary btn-block\"\r\n      [routerLink]=\"[\r\n        '/',\r\n        'canvas',\r\n        this.companyModel._id,\r\n        'instance',\r\n        this.instanceId,\r\n        'competitors',\r\n        'edit'\r\n      ]\"\r\n      [queryParams]=\"queryParams\"\r\n      >Go back to overview of competitors</a\r\n    >\r\n  </div>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { CanvasResolveService } from '../../canvas-resolve.service';\r\nimport { InstanceLoaderService } from '../instance-loader.service';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { RunningProcess } from '../../../development-process-registry/running-process/running-process';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { Comment } from '../../../development-process-registry/running-process/comment';\r\nimport { RunningProcessService } from '../../../development-process-registry/running-process/running-process.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-competitors',\r\n  templateUrl: './edit-competitors.component.html',\r\n  styleUrls: ['./edit-competitors.component.css'],\r\n  providers: [InstanceLoaderService, ProcessApiService],\r\n})\r\nexport class EditCompetitorsComponent implements OnInit {\r\n  competitors: Instance[];\r\n\r\n  constructor(\r\n    private canvasResolveService: CanvasResolveService,\r\n    private companyModelService: CompanyModelService,\r\n    private instanceLoaderService: InstanceLoaderService,\r\n    private processApiService: ProcessApiService,\r\n    private router: Router,\r\n    private runningProcessService: RunningProcessService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.instanceLoaderService.loaded.subscribe(() => {\r\n      this.competitors = this.companyModel.instances.filter(\r\n        (instance) => instance.id !== this.instanceId\r\n      );\r\n    });\r\n  }\r\n\r\n  async editCompetitor(id: number): Promise<void> {\r\n    await this.router.navigate(\r\n      [\r\n        'canvas',\r\n        this.companyModel._id,\r\n        'instance',\r\n        this.instanceId,\r\n        'competitors',\r\n        id,\r\n        'edit',\r\n      ],\r\n      { queryParams: this.processApiService.queryParams }\r\n    );\r\n  }\r\n\r\n  async removeCompetitor(id: number): Promise<void> {\r\n    this.companyModel.removeInstance(id);\r\n    await this.updateCompanyModel();\r\n  }\r\n\r\n  async addComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.addComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async updateComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.updateComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async removeComment(commentId: string): Promise<void> {\r\n    await this.runningProcessService.removeComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      commentId\r\n    );\r\n  }\r\n\r\n  finish(): void {\r\n    this.canvasResolveService.resolveEditCanvas(\r\n      this.processApiService.stepInfo,\r\n      this.companyModel._id,\r\n      this.instanceId\r\n    );\r\n  }\r\n\r\n  private async updateCompanyModel(): Promise<void> {\r\n    await this.companyModelService.save(this.companyModel);\r\n  }\r\n\r\n  get companyModel(): CompanyModel {\r\n    return this.instanceLoaderService.companyModel;\r\n  }\r\n\r\n  get instanceId(): number {\r\n    return this.instanceLoaderService.instance.id;\r\n  }\r\n\r\n  private get runningProcess(): RunningProcess {\r\n    return this.processApiService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.processApiService.isCorrectStep();\r\n  }\r\n}\r\n","<app-api-navigation apiName=\"Edit Competitors\"></app-api-navigation>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"companyModel && runningMethod != null && isCorrectStep()\"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Competitors</h6>\r\n    <ul class=\"list-group\">\r\n      <li\r\n        *ngFor=\"let competitor of competitors\"\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-center\r\n        \"\r\n      >\r\n        <span\r\n          >{{ competitor.name }}\r\n          <small class=\"text-muted\" *ngIf=\"competitor.description\">{{\r\n            competitor.description\r\n          }}</small></span\r\n        >\r\n        <div>\r\n          <button\r\n            (click)=\"editCompetitor(competitor.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-dark btn-xs mr-1\"\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            (click)=\"removeCompetitor(competitor.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <app-running-process-method-comments\r\n      [comments]=\"runningMethod.comments\"\r\n      (addComment)=\"addComment($event)\"\r\n      (updateComment)=\"updateComment($event)\"\r\n      (removeComment)=\"removeComment($event)\"\r\n    ></app-running-process-method-comments>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Finish editing competitors</h6>\r\n    <button class=\"btn btn-sm btn-primary btn-block\" (click)=\"finish()\">\r\n      Finish editing competitors\r\n    </button>\r\n  </div>\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { CanvasResolveService } from '../../canvas-resolve.service';\r\nimport { InstanceLoaderService } from '../instance-loader.service';\r\nimport { RunningProcess } from '../../../development-process-registry/running-process/running-process';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { Comment } from '../../../development-process-registry/running-process/comment';\r\nimport { RunningProcessService } from '../../../development-process-registry/running-process/running-process.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-model',\r\n  templateUrl: './edit-model.component.html',\r\n  styleUrls: ['./edit-model.component.css'],\r\n  providers: [InstanceLoaderService, ProcessApiService],\r\n})\r\nexport class EditModelComponent {\r\n  constructor(\r\n    private canvasResolveService: CanvasResolveService,\r\n    private instanceLoaderService: InstanceLoaderService,\r\n    private companyModelService: CompanyModelService,\r\n    private processApiService: ProcessApiService,\r\n    private runningProcessService: RunningProcessService\r\n  ) {}\r\n\r\n  async addComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.addComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async updateComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.updateComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async removeComment(commentId: string): Promise<void> {\r\n    await this.runningProcessService.removeComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      commentId\r\n    );\r\n  }\r\n\r\n  finish(): void {\r\n    this.canvasResolveService.resolveEditCanvas(\r\n      this.processApiService.stepInfo,\r\n      this.companyModel._id,\r\n      this.instanceLoaderService.instance.id\r\n    );\r\n  }\r\n\r\n  async updateCompanyModel(): Promise<void> {\r\n    await this.companyModelService.save(this.companyModel);\r\n  }\r\n\r\n  get companyModel(): CompanyModel {\r\n    return this.instanceLoaderService.companyModel;\r\n  }\r\n\r\n  private get runningProcess(): RunningProcess {\r\n    return this.processApiService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.processApiService.isCorrectStep();\r\n  }\r\n}\r\n","<app-api-navigation apiName=\"Edit Model\"></app-api-navigation>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"companyModel && runningMethod != null && isCorrectStep()\"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <app-feature-model-edit\r\n    [featureModel]=\"companyModel\"\r\n    (updateFeatureModel)=\"updateCompanyModel()\"\r\n  ></app-feature-model-edit>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <app-running-process-method-comments\r\n      [comments]=\"runningMethod.comments\"\r\n      (addComment)=\"addComment($event)\"\r\n      (updateComment)=\"updateComment($event)\"\r\n      (removeComment)=\"removeComment($event)\"\r\n    ></app-running-process-method-comments>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Finish editing</h6>\r\n    <button class=\"btn btn-sm btn-primary btn-block\" (click)=\"finish()\">\r\n      Finish editing\r\n    </button>\r\n  </div>\r\n</main>\r\n","import { Injectable } from '@angular/core';\r\nimport { CompanyModelService } from '../../canvas-meta-model/company-model.service';\r\nimport { CompanyModel } from '../../canvas-meta-model/company-model';\r\nimport { Instance } from '../../canvas-meta-model/instance';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\n\r\n@Injectable()\r\nexport class InstanceLoaderService extends ElementLoaderService {\r\n  companyModel: CompanyModel = null;\r\n  instance: Instance = null;\r\n\r\n  constructor(\r\n    private companyModelService: CompanyModelService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const companyModelId = paramMap.get('companyModelId');\r\n    const instanceId = +paramMap.get('instanceId');\r\n    this.changesFeed = this.companyModelService\r\n      .getChangesFeed(companyModelId)\r\n      .subscribe(() => this.loadInstance(companyModelId, instanceId));\r\n    void this.loadInstance(companyModelId, instanceId);\r\n  }\r\n\r\n  private async loadInstance(\r\n    companyModelId: string,\r\n    instanceId: number\r\n  ): Promise<void> {\r\n    this.companyModel = await this.companyModelService.get(companyModelId);\r\n    this.instance = this.companyModel.getInstance(instanceId);\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { CanvasResolveService } from '../../canvas-resolve.service';\r\nimport { ConformanceReport } from '../../../canvas-meta-model/conformance-report';\r\nimport { CanvasModelConsistencyService } from '../../../canvas-meta-model/canvas-model-consistency.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ExpertModel } from '../../../canvas-meta-model/expert-model';\r\nimport { ExpertModelService } from '../../../canvas-meta-model/expert-model.service';\r\nimport { InstanceLoaderService } from '../instance-loader.service';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { RunningProcess } from '../../../development-process-registry/running-process/running-process';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { Comment } from '../../../development-process-registry/running-process/comment';\r\nimport { RunningProcessService } from '../../../development-process-registry/running-process/running-process.service';\r\n\r\n@Component({\r\n  selector: 'app-refine-canvas',\r\n  templateUrl: './refine-canvas.component.html',\r\n  styleUrls: ['./refine-canvas.component.css'],\r\n  providers: [InstanceLoaderService, ProcessApiService],\r\n})\r\nexport class RefineCanvasComponent implements OnInit {\r\n  expertModels: ExpertModel[];\r\n\r\n  conformanceIsChecked: boolean;\r\n  conformance: ConformanceReport = new ConformanceReport();\r\n  conformanceOptionsForm: FormGroup = this.fb.group({\r\n    showWarnings: true,\r\n    showStrengths: true,\r\n    showHints: true,\r\n    showPatternHints: true,\r\n    showUsedPatterns: false,\r\n  });\r\n\r\n  patternInstance: Instance = null;\r\n\r\n  constructor(\r\n    private canvasModelConsistencyService: CanvasModelConsistencyService,\r\n    private canvasResolveService: CanvasResolveService,\r\n    private companyModelService: CompanyModelService,\r\n    private expertModelService: ExpertModelService,\r\n    private fb: FormBuilder,\r\n    private instanceLoaderService: InstanceLoaderService,\r\n    private processApiService: ProcessApiService,\r\n    private runningProcessService: RunningProcessService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.instanceLoaderService.loaded.subscribe(() => {\r\n      if (this.conformanceIsChecked) {\r\n        this.checkConformance();\r\n      } else {\r\n        this.uncheckConformance();\r\n      }\r\n      void this.loadExpertModels();\r\n    });\r\n  }\r\n\r\n  finish(): void {\r\n    this.canvasResolveService.resolveEditCanvas(\r\n      this.processApiService.stepInfo,\r\n      this.companyModel._id,\r\n      this.instance.id\r\n    );\r\n  }\r\n\r\n  uncheckConformance(): void {\r\n    this.conformanceIsChecked = false;\r\n    this.conformance = new ConformanceReport();\r\n  }\r\n\r\n  checkConformance(): void {\r\n    this.clearPattern();\r\n    this.conformance =\r\n      this.canvasModelConsistencyService.checkConformanceOfInstance(\r\n        this.companyModel,\r\n        this.instance.id,\r\n        this.expertModels\r\n          .map((expertModel) => expertModel.getPatterns())\r\n          .reduce((prev, curr) => {\r\n            prev.push(...curr);\r\n            return prev;\r\n          }, [])\r\n      );\r\n    this.conformanceIsChecked = true;\r\n  }\r\n\r\n  showPattern(patternInstance: Instance): void {\r\n    this.uncheckConformance();\r\n    this.patternInstance = patternInstance;\r\n  }\r\n\r\n  clearPattern(): void {\r\n    this.patternInstance = null;\r\n  }\r\n\r\n  async loadExpertModels(): Promise<void> {\r\n    const expertModels: ExpertModel[] = [];\r\n    for (const expertModelId of this.companyModel.expertModelIds) {\r\n      const expertModel = await this.expertModelService.get(expertModelId);\r\n      const featureIds = expertModel\r\n        .getFeatureList()\r\n        .map((feature) => feature.id);\r\n      if (\r\n        featureIds.every(\r\n          (id) =>\r\n            id in\r\n            this.companyModel.expertModelTraces[expertModel._id]\r\n              .expertFeatureIdMap\r\n        ) &&\r\n        expertModel.getPatterns().length > 0\r\n      ) {\r\n        expertModels.push(expertModel);\r\n      }\r\n    }\r\n    this.expertModels = expertModels;\r\n  }\r\n\r\n  async updateCompanyModel(): Promise<void> {\r\n    await this.companyModelService.save(this.companyModel);\r\n  }\r\n\r\n  async addComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.addComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async updateComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.updateComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async removeComment(commentId: string): Promise<void> {\r\n    await this.runningProcessService.removeComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      commentId\r\n    );\r\n  }\r\n\r\n  get companyModel(): CompanyModel {\r\n    return this.instanceLoaderService.companyModel;\r\n  }\r\n\r\n  get instance(): Instance {\r\n    return this.instanceLoaderService.instance;\r\n  }\r\n\r\n  private get runningProcess(): RunningProcess {\r\n    return this.processApiService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.processApiService.isCorrectStep();\r\n  }\r\n}\r\n","<app-api-navigation apiName=\"Refine Canvas\"></app-api-navigation>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"instance && runningMethod != null && isCorrectStep()\"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <app-instance\r\n    [conformanceIsChecked]=\"conformanceIsChecked\"\r\n    [conformance]=\"conformance\"\r\n    [conformanceOptions]=\"conformanceOptionsForm.value\"\r\n    [featureModel]=\"companyModel\"\r\n    [instance]=\"instance\"\r\n    [patternInstance]=\"patternInstance\"\r\n    [adaptable]=\"false\"\r\n    [updatable]=\"false\"\r\n    (updateFeatureModel)=\"updateCompanyModel()\"\r\n  ></app-instance>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Hints</h6>\r\n    <div class=\"container\">\r\n      <div class=\"row\" style=\"margin-top: 20px\">\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"!conformanceIsChecked\"\r\n          (click)=\"checkConformance()\"\r\n          class=\"btn btn-dark btn-sm btn-block\"\r\n        >\r\n          <span>Show Hints of Business Model</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"conformanceIsChecked\"\r\n          (click)=\"uncheckConformance()\"\r\n          class=\"btn btn-dark btn-sm btn-block\"\r\n        >\r\n          <span>Hide Hints of Business Model</span>\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"conformanceIsChecked\" style=\"margin-top: 20px\">\r\n        <form [formGroup]=\"conformanceOptionsForm\">\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showWarnings\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"optionShowWarnings\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"optionShowWarnings\">\r\n              Show weaknesses\r\n              <small class=\"text-muted d-block\"\r\n                >Used features that have a hurt cross-tree relationship to other\r\n                used features</small\r\n              >\r\n            </label>\r\n          </div>\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showStrengths\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"showStrengths\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"showStrengths\">\r\n              Show strengths\r\n              <small class=\"text-muted d-block\"\r\n                >Used features that have a supports cross-tree relationship to\r\n                other used features</small\r\n              >\r\n            </label>\r\n          </div>\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showHints\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"showHints\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"showHints\">\r\n              Show hints\r\n              <small class=\"text-muted d-block\"\r\n                >Unused features that have a supports cross-tree relationship to\r\n                other used features and can be added without requirements and do\r\n                not lead to other errors</small\r\n              >\r\n            </label>\r\n          </div>\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showPatternHints\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"showPatternHints\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"showPatternHints\">\r\n              Show pattern hints\r\n              <small class=\"text-muted d-block\"\r\n                >A pattern is shown as a hint, if at least half of the pattern\r\n                is included in the current business model</small\r\n              >\r\n            </label>\r\n          </div>\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showUsedPatterns\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"showUsedPatterns\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"showUsedPatterns\">\r\n              Show used patterns\r\n              <small class=\"text-muted d-block\"\r\n                >A pattern is shown as used, if it is completely included in the\r\n                current business model</small\r\n              >\r\n            </label>\r\n          </div>\r\n        </form>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <h6>Errors</h6>\r\n            <ul>\r\n              <li *ngFor=\"let error of conformance.errors\">{{ error }}</li>\r\n            </ul>\r\n          </div>\r\n          <div\r\n            class=\"col border-left\"\r\n            *ngIf=\"\r\n              conformanceOptionsForm.value.showWarnings ||\r\n              conformanceOptionsForm.value.showStrengths\r\n            \"\r\n          >\r\n            <div *ngIf=\"conformanceOptionsForm.value.showWarnings\">\r\n              <h6>Weaknesses</h6>\r\n              <ul>\r\n                <li *ngFor=\"let warning of conformance.warnings\">\r\n                  {{ warning }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div *ngIf=\"conformanceOptionsForm.value.showStrengths\">\r\n              <h6>Strengths</h6>\r\n              <ul>\r\n                <li *ngFor=\"let strength of conformance.strengths\">\r\n                  {{ strength }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"col border-left\"\r\n            *ngIf=\"\r\n              conformanceOptionsForm.value.showHints ||\r\n              conformanceOptionsForm.value.showPatternHints ||\r\n              conformanceOptionsForm.value.showUsedPatterns\r\n            \"\r\n          >\r\n            <div *ngIf=\"conformanceOptionsForm.value.showHints\">\r\n              <h6>Hints</h6>\r\n              <ul>\r\n                <li *ngFor=\"let hint of conformance.hints\">{{ hint }}</li>\r\n              </ul>\r\n            </div>\r\n            <div *ngIf=\"conformanceOptionsForm.value.showPatternHints\">\r\n              <h6>Pattern Hints</h6>\r\n              <ul>\r\n                <li *ngFor=\"let hint of conformance.patternHints\">\r\n                  <app-pattern-hint [patternHint]=\"hint\"></app-pattern-hint>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div *ngIf=\"conformanceOptionsForm.value.showUsedPatterns\">\r\n              <h6>Used Patterns</h6>\r\n              <ul>\r\n                <li *ngFor=\"let pattern of conformance.usedPatterns\">\r\n                  <app-pattern-view [pattern]=\"pattern\"></app-pattern-view>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Show pattern</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-instance-select-pattern-form\r\n        [expertModels]=\"expertModels\"\r\n        [showsPattern]=\"patternInstance != null\"\r\n        (showPattern)=\"showPattern($event.instance)\"\r\n        (clearPattern)=\"clearPattern()\"\r\n      ></app-instance-select-pattern-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <app-running-process-method-comments\r\n      [comments]=\"runningMethod.comments\"\r\n      (addComment)=\"addComment($event)\"\r\n      (updateComment)=\"updateComment($event)\"\r\n      (removeComment)=\"removeComment($event)\"\r\n    ></app-running-process-method-comments>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Finish refinement</h6>\r\n    <button class=\"btn btn-sm btn-primary btn-block\" (click)=\"finish()\">\r\n      Finish refinement\r\n    </button>\r\n  </div>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ConfigurationFormComponent } from '../../../development-process-registry/module-api/configuration-form-component';\r\nimport { CanvasDefinitionEntry } from '../../../canvas-meta-model/canvas-definition';\r\nimport { CanvasDefinitionService } from '../../../canvas-meta-model/canvas-definition.service';\r\n\r\n@Component({\r\n  selector: 'app-select-canvas-definition-configuration',\r\n  templateUrl: './select-canvas-definition-configuration.component.html',\r\n  styleUrls: ['./select-canvas-definition-configuration.component.css'],\r\n})\r\nexport class SelectCanvasDefinitionConfigurationComponent\r\n  implements OnInit, ConfigurationFormComponent\r\n{\r\n  formGroup: FormGroup;\r\n\r\n  canvasDefinitions: CanvasDefinitionEntry[] = null;\r\n\r\n  constructor(private canvasDefinitionService: CanvasDefinitionService) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadCanvasDefinitions();\r\n  }\r\n\r\n  async loadCanvasDefinitions(): Promise<void> {\r\n    this.canvasDefinitions = await this.canvasDefinitionService.getList();\r\n  }\r\n\r\n  get definitionControl(): FormControl {\r\n    return this.formGroup.get('definitionId') as FormControl;\r\n  }\r\n}\r\n","<ng-container [formGroup]=\"formGroup\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"definitionSelector\" class=\"col-sm-6 col-form-label\"\r\n      >Canvas Model</label\r\n    >\r\n    <div class=\"col-sm-6\">\r\n      <select\r\n        id=\"definitionSelector\"\r\n        formControlName=\"definitionId\"\r\n        class=\"form-control\"\r\n        [class.is-invalid]=\"\r\n          definitionControl.invalid && definitionControl.touched\r\n        \"\r\n      >\r\n        <option\r\n          *ngFor=\"let definition of canvasDefinitions\"\r\n          [ngValue]=\"definition._id\"\r\n        >\r\n          {{ definition.name }}\r\n        </option>\r\n        <option *ngIf=\"canvasDefinitions == null\">Loading...</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { CanvasResolveService } from '../../canvas-resolve.service';\r\nimport { InstanceLoaderService } from '../instance-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RunningArtifact } from '../../../development-process-registry/running-process/running-artifact';\r\nimport { ConcreteArtifactService } from '../../../development-process-registry/running-process/concrete-artifact.service';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\n\r\n@Component({\r\n  selector: 'app-view-canvas',\r\n  templateUrl: './view-canvas.component.html',\r\n  styleUrls: ['./view-canvas.component.css'],\r\n  providers: [InstanceLoaderService, ProcessApiService],\r\n})\r\nexport class ViewCanvasComponent implements OnInit, OnDestroy {\r\n  artifact: RunningArtifact = null;\r\n  version: number = null;\r\n\r\n  private querySubscription: Subscription;\r\n\r\n  constructor(\r\n    private canvasResolveService: CanvasResolveService,\r\n    private concreteArtifactService: ConcreteArtifactService,\r\n    private instanceLoaderService: InstanceLoaderService,\r\n    public processApiService: ProcessApiService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.querySubscription = this.route.queryParamMap.subscribe(\r\n      async (params) => {\r\n        if (params.has('artifactId')) {\r\n          this.artifact = await this.concreteArtifactService.get(\r\n            params.get('artifactId')\r\n          );\r\n          this.version = +params.get('versionId');\r\n        } else {\r\n          this.artifact = null;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.querySubscription) {\r\n      this.querySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  finish(): void {\r\n    this.canvasResolveService.resolveEditCanvas(\r\n      this.processApiService.stepInfo,\r\n      this.companyModel._id,\r\n      this.instance.id\r\n    );\r\n  }\r\n\r\n  get companyModel(): CompanyModel {\r\n    return this.instanceLoaderService.companyModel;\r\n  }\r\n\r\n  get instance(): Instance {\r\n    return this.instanceLoaderService.instance;\r\n  }\r\n\r\n  get queryParams() {\r\n    if (this.artifact != null) {\r\n      return {\r\n        artifactId: this.artifact._id,\r\n      };\r\n    } else {\r\n      return this.processApiService.queryParams;\r\n    }\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a\r\n      *ngIf=\"processApiService.runningProcess\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"[\r\n        '/',\r\n        'runningprocess',\r\n        'runningprocessview',\r\n        processApiService.runningProcess._id\r\n      ]\"\r\n    >\r\n      {{ processApiService.runningProcess.process.name }} &ndash;\r\n      {{ processApiService.runningProcess.name }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"processApiService.runningMethod != null\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"[\r\n        '/',\r\n        'runningprocess',\r\n        'runningprocessview',\r\n        processApiService.runningProcess._id,\r\n        'method',\r\n        processApiService.runningMethod.executionId\r\n      ]\"\r\n    >\r\n      {{ processApiService.runningMethod.methodName }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"artifact != null\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'concreteArtifacts']\"\r\n    >\r\n      Concrete Artifacts\r\n    </a>\r\n    <a\r\n      *ngIf=\"artifact != null\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'concreteArtifacts', 'detail', artifact._id]\"\r\n    >\r\n      {{ artifact.identifier }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"artifact != null && version != null\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'concreteArtifacts', 'detail', artifact._id]\"\r\n    >\r\n      Version #{{ version + 1 }}\r\n    </a>\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\" [queryParams]=\"queryParams\">\r\n      View Canvas\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"instance\" role=\"main\" class=\"container\">\r\n  <app-instance\r\n    [featureModel]=\"companyModel\"\r\n    [instance]=\"instance\"\r\n    [adaptable]=\"false\"\r\n    [editable]=\"false\"\r\n    [updatable]=\"false\"\r\n  ></app-instance>\r\n\r\n  <div\r\n    class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n    *ngIf=\"processApiService.stepInfo.step != null\"\r\n  >\r\n    <h6 class=\"border-bottom border-gray pb-2\">Finish viewing</h6>\r\n    <button class=\"btn btn-sm btn-primary btn-block\" (click)=\"finish()\">\r\n      Finish viewing\r\n    </button>\r\n  </div>\r\n</main>\r\n","import { Injectable } from '@angular/core';\r\nimport { ModuleApiService } from '../development-process-registry/module-api/module-api-service';\r\nimport { MethodExecutionInput } from '../development-process-registry/module-api/method-execution-input';\r\nimport { StepInfo } from '../development-process-registry/module-api/step-info';\r\nimport { InstanceArtifactData } from '../canvas-meta-model/instance-artifact-data';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CanvasApiService implements ModuleApiService {\r\n  createCanvas(input: MethodExecutionInput): void {\r\n    const stepInfo = this.getStepInfo(input);\r\n    void input.router.navigate(['canvas', 'instance', 'create'], {\r\n      queryParams: stepInfo,\r\n    });\r\n  }\r\n\r\n  editCanvas(input: MethodExecutionInput): void {\r\n    const stepInfo = this.getStepInfo(input);\r\n    const reference: InstanceArtifactData =\r\n      input.inputStepArtifacts[0].data.data;\r\n    void input.router.navigate(\r\n      ['canvas', reference.id, 'instance', reference.instanceId, 'edit'],\r\n      { queryParams: stepInfo }\r\n    );\r\n  }\r\n\r\n  refineCanvas(input: MethodExecutionInput): void {\r\n    const stepInfo = this.getStepInfo(input);\r\n    const reference: InstanceArtifactData =\r\n      input.inputStepArtifacts[0].data.data;\r\n    void input.router.navigate(\r\n      ['canvas', reference.id, 'instance', reference.instanceId, 'refine'],\r\n      { queryParams: stepInfo }\r\n    );\r\n  }\r\n\r\n  compareCompetitors(input: MethodExecutionInput): void {\r\n    const stepInfo = this.getStepInfo(input);\r\n    const reference: InstanceArtifactData =\r\n      input.inputStepArtifacts[0].data.data;\r\n    void input.router.navigate(\r\n      ['canvas', reference.id, 'instance', reference.instanceId, 'compare'],\r\n      { queryParams: stepInfo }\r\n    );\r\n  }\r\n\r\n  createCompetitors(input: MethodExecutionInput): void {\r\n    const stepInfo = this.getStepInfo(input);\r\n    const reference: InstanceArtifactData =\r\n      input.inputStepArtifacts[0].data.data;\r\n    void input.router.navigate(\r\n      ['canvas', reference.id, 'instance', reference.instanceId, 'competitors'],\r\n      { queryParams: stepInfo }\r\n    );\r\n  }\r\n\r\n  manageCompetitors(input: MethodExecutionInput): void {\r\n    const stepInfo = this.getStepInfo(input);\r\n    const reference: InstanceArtifactData =\r\n      input.inputStepArtifacts[0].data.data;\r\n    void input.router.navigate(\r\n      [\r\n        'canvas',\r\n        reference.id,\r\n        'instance',\r\n        reference.instanceId,\r\n        'competitors',\r\n        'edit',\r\n      ],\r\n      { queryParams: stepInfo }\r\n    );\r\n  }\r\n\r\n  viewCanvas(input: MethodExecutionInput): void {\r\n    const stepInfo = this.getStepInfo(input);\r\n    const reference: InstanceArtifactData =\r\n      input.inputStepArtifacts[0].data.data;\r\n    void input.router.navigate(\r\n      ['canvas', reference.id, 'instance', reference.instanceId, 'view'],\r\n      { queryParams: stepInfo }\r\n    );\r\n  }\r\n\r\n  editModel(input: MethodExecutionInput): void {\r\n    const stepInfo = this.getStepInfo(input);\r\n    const reference: InstanceArtifactData =\r\n      input.inputStepArtifacts[0].data.data;\r\n    void input.router.navigate(\r\n      [\r\n        'canvas',\r\n        reference.id,\r\n        'instance',\r\n        reference.instanceId,\r\n        'model',\r\n        'edit',\r\n      ],\r\n      { queryParams: stepInfo }\r\n    );\r\n  }\r\n\r\n  executeMethod(methodName: string, input: MethodExecutionInput): void {\r\n    switch (methodName) {\r\n      case 'createCanvas':\r\n        this.createCanvas(input);\r\n        break;\r\n      case 'editCanvas':\r\n        this.editCanvas(input);\r\n        break;\r\n      case 'refineCanvas':\r\n        this.refineCanvas(input);\r\n        break;\r\n      case 'compareCompetitors':\r\n        this.compareCompetitors(input);\r\n        break;\r\n      case 'createCompetitors':\r\n        this.createCompetitors(input);\r\n        break;\r\n      case 'manageCompetitors':\r\n        this.manageCompetitors(input);\r\n        break;\r\n      case 'viewCanvas':\r\n        this.viewCanvas(input);\r\n        break;\r\n      case 'editModel':\r\n        this.editModel(input);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private getStepInfo(input: MethodExecutionInput): StepInfo {\r\n    return {\r\n      step: input.runningMethod.currentStepNumber,\r\n      executionId: input.runningMethod.executionId,\r\n      runningProcessId: input.runningProcess._id,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { CanvasDefinition } from '../../../canvas-meta-model/canvas-definition';\r\n\r\n@Component({\r\n  selector: 'app-canvas-definition-form',\r\n  templateUrl: './canvas-definition-form.component.html',\r\n  styleUrls: ['./canvas-definition-form.component.css'],\r\n})\r\nexport class CanvasDefinitionFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() canvasDefinition: CanvasDefinition;\r\n\r\n  @Output() submitForm = new EventEmitter<FormGroup>();\r\n\r\n  form: FormGroup = this.fb.group({\r\n    name: ['', Validators.required],\r\n    description: [''],\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.changeSubscription = this.form.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !this.equalCanvasDefinitions(\r\n              this.canvasDefinition,\r\n              value\r\n            ))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.canvasDefinition) {\r\n      const newCanvasDefinition = changes.canvasDefinition.currentValue;\r\n      const oldCanvasDefinition = changes.canvasDefinition.previousValue;\r\n      if (\r\n        !this.equalCanvasDefinitions(oldCanvasDefinition, newCanvasDefinition)\r\n      ) {\r\n        this.loadForm(newCanvasDefinition);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  emitSubmitForm(): void {\r\n    this.submitForm.emit(this.form);\r\n  }\r\n\r\n  private loadForm(canvasDefinition: CanvasDefinition): void {\r\n    if (canvasDefinition != null) {\r\n      this.form.patchValue({\r\n        name: canvasDefinition.name,\r\n        description: canvasDefinition.description,\r\n      });\r\n    } else {\r\n      this.form.patchValue({ name: '', description: '' });\r\n    }\r\n  }\r\n\r\n  private equalCanvasDefinitions(\r\n    canvasDefinitionA: CanvasDefinition,\r\n    canvasDefinitionB: CanvasDefinition\r\n  ): boolean {\r\n    if (canvasDefinitionA == null && canvasDefinitionB == null) {\r\n      return true;\r\n    }\r\n    if (canvasDefinitionA == null || canvasDefinitionB == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      canvasDefinitionA.name === canvasDefinitionB.name &&\r\n      canvasDefinitionA.description === canvasDefinitionB.description\r\n    );\r\n  }\r\n\r\n  get nameControl(): FormControl {\r\n    return this.form.get('name') as FormControl;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"emitSubmitForm()\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        [class.is-invalid]=\"nameControl.invalid && nameControl.touched\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"description\" class=\"col-sm-4 col-form-label\">Description</label>\r\n    <div class=\"col-sm-8\">\r\n      <textarea\r\n        formControlName=\"description\"\r\n        class=\"form-control\"\r\n        id=\"description\"\r\n        rows=\"3\"\r\n      ></textarea>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!form.valid\"\r\n      >\r\n        Update Canvas Model<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { CanvasDefinition } from '../../canvas-meta-model/canvas-definition';\r\nimport { CanvasDefinitionService } from '../../canvas-meta-model/canvas-definition.service';\r\n\r\n@Injectable()\r\nexport class CanvasDefinitionLoaderService extends ElementLoaderService {\r\n  canvasDefinition: CanvasDefinition = null;\r\n\r\n  constructor(\r\n    private canvasDefinitionService: CanvasDefinitionService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const canvasDefinitionId = paramMap.get('id');\r\n    this.changesFeed = this.canvasDefinitionService\r\n      .getChangesFeed(canvasDefinitionId)\r\n      .subscribe(() => this.loadCanvasDefinition(canvasDefinitionId));\r\n    void this.loadCanvasDefinition(canvasDefinitionId);\r\n  }\r\n\r\n  private async loadCanvasDefinition(\r\n    canvasDefinitionId: string\r\n  ): Promise<void> {\r\n    this.canvasDefinition = await this.canvasDefinitionService.get(\r\n      canvasDefinitionId\r\n    );\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { CanvasDefinitionCell } from '../../../canvas-meta-model/canvas-definition-cell';\r\n\r\n@Component({\r\n  selector: 'app-canvas-definition-overview',\r\n  templateUrl: './canvas-definition-overview.component.html',\r\n  styleUrls: ['./canvas-definition-overview.component.css'],\r\n})\r\nexport class CanvasDefinitionOverviewComponent {\r\n  @Input() canvasDefinitionCells: CanvasDefinitionCell[][];\r\n}\r\n","<table class=\"table table-bordered\" style=\"table-layout: fixed\">\r\n  <tbody>\r\n    <tr *ngFor=\"let row of canvasDefinitionCells\">\r\n      <ng-container *ngFor=\"let cell of row\">\r\n        <td\r\n          *ngIf=\"!cell.isSpacer\"\r\n          [colSpan]=\"cell.colspan\"\r\n          [rowSpan]=\"cell.rowspan\"\r\n        >\r\n          <b>{{ cell.name }}</b>\r\n        </td>\r\n        <td\r\n          *ngIf=\"cell.isSpacer\"\r\n          [colSpan]=\"cell.colspan\"\r\n          [rowSpan]=\"cell.rowspan\"\r\n        ></td>\r\n      </ng-container>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { equalsListString } from '../../../shared/utils';\r\n\r\n@Component({\r\n  selector: 'app-canvas-definition-relationships-form',\r\n  templateUrl: './canvas-definition-relationships-form.component.html',\r\n  styleUrls: ['./canvas-definition-relationships-form.component.css'],\r\n})\r\nexport class CanvasDefinitionRelationshipsFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() relationshipTypes: string[];\r\n\r\n  @Output() submitRelationshipTypesForm = new EventEmitter<FormArray>();\r\n\r\n  form: FormGroup = this.fb.group({\r\n    relationshipTypes: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.changeSubscription = this.form.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !this.equals(\r\n              this.relationshipTypes,\r\n              value.relationshipTypes\r\n            ))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.relationshipTypes) {\r\n      const oldRelationshipTypes: string[] =\r\n        changes.relationshipTypes.previousValue;\r\n      const newRelationshipTypes: string[] =\r\n        changes.relationshipTypes.currentValue;\r\n      if (!this.equals(newRelationshipTypes, oldRelationshipTypes)) {\r\n        this.loadForm(newRelationshipTypes);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private equals(\r\n    relationshipTypesA: string[],\r\n    relationshipTypesB: string[]\r\n  ): boolean {\r\n    return equalsListString(relationshipTypesA, relationshipTypesB);\r\n  }\r\n\r\n  private loadForm(relationshipTypes: string[]): void {\r\n    this.form.setControl(\r\n      'relationshipTypes',\r\n      this.fb.array(\r\n        relationshipTypes.map((typeName) =>\r\n          this.fb.control(typeName, Validators.required)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitRelationshipTypesForm.emit(this.formArray);\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.form.get('relationshipTypes') as FormArray;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group\" formArrayName=\"relationshipTypes\">\r\n    <app-form-array-list\r\n      elementName=\"Relationship Name\"\r\n      [formArray]=\"formArray\"\r\n      [ordered]=\"false\"\r\n    ></app-form-array-list>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!form.valid\"\r\n      >\r\n        Update Relationships<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormBuilder,\r\n  FormGroup,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { CanvasDefinitionRowFormService } from '../../form-services/canvas-definition-row-form.service';\r\nimport { equalsListOfLists } from '../../../shared/utils';\r\nimport { CanvasDefinitionCell } from '../../../canvas-meta-model/canvas-definition-cell';\r\n\r\n@Component({\r\n  selector: 'app-canvas-definition-row-form',\r\n  templateUrl: './canvas-definition-row-form.component.html',\r\n  styleUrls: ['./canvas-definition-row-form.component.css'],\r\n})\r\nexport class CanvasDefinitionRowFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() canvasDefinitionRows: CanvasDefinitionCell[][];\r\n\r\n  @Output() submitForm = new EventEmitter<FormArray>();\r\n\r\n  form: FormGroup = this.fb.group({\r\n    rows: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private canvasDefinitionRowFormService: CanvasDefinitionRowFormService,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.changeSubscription = this.form.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !this.equalCanvasDefinitionRows(\r\n              this.canvasDefinitionRows,\r\n              this.canvasDefinitionRowFormService.get(value.rows)\r\n            ))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.canvasDefinitionRows) {\r\n      const newCanvasDefinitionRows = changes.canvasDefinitionRows.currentValue;\r\n      const oldCanvasDefinitionRows =\r\n        changes.canvasDefinitionRows.previousValue;\r\n      if (\r\n        !this.equalCanvasDefinitionRows(\r\n          oldCanvasDefinitionRows,\r\n          newCanvasDefinitionRows\r\n        )\r\n      ) {\r\n        this.loadForm(newCanvasDefinitionRows);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  emitSubmitForm() {\r\n    this.submitForm.emit(this.rowsFormArray);\r\n  }\r\n\r\n  addRow(index: number = null) {\r\n    if (index == null) {\r\n      this.rowsFormArray.push(this.fb.array([]));\r\n    } else {\r\n      this.rowsFormArray.insert(index, this.fb.array([]));\r\n    }\r\n  }\r\n\r\n  removeRow(index: number) {\r\n    this.rowsFormArray.removeAt(index);\r\n  }\r\n\r\n  addBlock(row: number) {\r\n    this.getRow(row).push(\r\n      this.canvasDefinitionRowFormService.createCanvasDefinitionCellForm()\r\n    );\r\n  }\r\n\r\n  spacerChange(row: number, index: number) {\r\n    const form = this.getRow(row).at(index) as FormGroup;\r\n    this.canvasDefinitionRowFormService.convertCanvasDefinitionCellForm(\r\n      form,\r\n      form.value.isSpacer\r\n    );\r\n  }\r\n\r\n  removeBlock(row: number, index: number) {\r\n    this.getRow(row).removeAt(index);\r\n  }\r\n\r\n  getRow(index: number): FormArray {\r\n    return this.rowsFormArray.at(index) as FormArray;\r\n  }\r\n\r\n  asFormArray(form: AbstractControl): FormArray {\r\n    return form as FormArray;\r\n  }\r\n\r\n  private loadForm(canvasDefinitionRows: CanvasDefinitionCell[][]) {\r\n    this.form.setControl(\r\n      'rows',\r\n      this.canvasDefinitionRowFormService.createForm(canvasDefinitionRows)\r\n    );\r\n  }\r\n\r\n  private equalCanvasDefinitionRows(\r\n    canvasDefinitionRowsA: CanvasDefinitionCell[][],\r\n    canvasDefinitionRowsB: CanvasDefinitionCell[][]\r\n  ) {\r\n    if (canvasDefinitionRowsA == null && canvasDefinitionRowsB == null) {\r\n      return true;\r\n    }\r\n    if (canvasDefinitionRowsA == null || canvasDefinitionRowsB == null) {\r\n      return false;\r\n    }\r\n    return equalsListOfLists(canvasDefinitionRowsA, canvasDefinitionRowsB);\r\n  }\r\n\r\n  get nameControl() {\r\n    return this.form.get('name');\r\n  }\r\n\r\n  get rowsFormArray(): FormArray {\r\n    return this.form.get('rows') as FormArray;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"emitSubmitForm()\">\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn btn-block btn-sm btn-primary mb-3\"\r\n    (click)=\"addRow()\"\r\n  >\r\n    Add row\r\n  </button>\r\n  <ul formArrayName=\"rows\" class=\"list-group\">\r\n    <li\r\n      class=\"list-group-item\"\r\n      *ngFor=\"let row of rowsFormArray.controls; let rowIndex = index\"\r\n      [formArrayName]=\"rowIndex.toString()\"\r\n    >\r\n      <div class=\"d-flex\">\r\n        <b>{{ rowIndex + 1 }}. Row</b>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-xs btn-primary ml-auto\"\r\n          (click)=\"addBlock(rowIndex)\"\r\n        >\r\n          Add Block\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-xs btn-secondary ml-3\"\r\n          (click)=\"addRow(rowIndex)\"\r\n        >\r\n          Add Row above\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-xs btn-dark ml-3\"\r\n          (click)=\"removeRow(rowIndex)\"\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"asFormArray(row).length > 0\" class=\"form-group mt-2\">\r\n        <div\r\n          class=\"form-row\"\r\n          *ngFor=\"\r\n            let block of asFormArray(row).controls;\r\n            let blockIndex = index\r\n          \"\r\n          [formGroupName]=\"blockIndex.toString()\"\r\n        >\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"selectSpacer{{ blockIndex }}\">Element or Spacer</label>\r\n            <select\r\n              id=\"selectSpacer{{ blockIndex }}\"\r\n              class=\"form-control\"\r\n              formControlName=\"isSpacer\"\r\n              (change)=\"spacerChange(rowIndex, blockIndex)\"\r\n            >\r\n              <option [ngValue]=\"false\">Element</option>\r\n              <option [ngValue]=\"true\">Spacer</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-3\" *ngIf=\"block.value.isSpacer\"></div>\r\n          <div class=\"form-group col-md-3\" *ngIf=\"!block.value.isSpacer\">\r\n            <label for=\"inputName{{ blockIndex }}\">Name</label>\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"inputName{{ blockIndex }}\"\r\n              formControlName=\"name\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"inputRowspan{{ blockIndex }}\">Rowspan</label>\r\n            <input\r\n              type=\"number\"\r\n              [min]=\"1\"\r\n              class=\"form-control\"\r\n              id=\"inputRowspan{{ blockIndex }}\"\r\n              formControlName=\"rowspan\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"inputColspan{{ blockIndex }}\">Colspan</label>\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"number\"\r\n                [min]=\"1\"\r\n                class=\"form-control\"\r\n                id=\"inputColspan{{ blockIndex }}\"\r\n                formControlName=\"colspan\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-dark form-control\"\r\n                  (click)=\"removeBlock(rowIndex, blockIndex)\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n  <button\r\n    type=\"submit\"\r\n    class=\"btn btn-sm btn-block mt-3\"\r\n    [class.btn-dark]=\"!changed\"\r\n    [class.btn-primary]=\"changed\"\r\n    [disabled]=\"!form.valid\"\r\n  >\r\n    Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n  </button>\r\n</form>\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { CanvasDefinition } from '../../../canvas-meta-model/canvas-definition';\r\nimport { Subscription } from 'rxjs';\r\nimport { CanvasDefinitionService } from '../../../canvas-meta-model/canvas-definition.service';\r\nimport {\r\n  CanvasDefinitionCellFormValue,\r\n  CanvasDefinitionRowFormService,\r\n} from '../../form-services/canvas-definition-row-form.service';\r\nimport { CanvasDefinitionCell } from '../../../canvas-meta-model/canvas-definition-cell';\r\nimport { CanvasDefinitionLoaderService } from '../canvas-definition-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-canvas-definition',\r\n  templateUrl: './canvas-definition.component.html',\r\n  styleUrls: ['./canvas-definition.component.css'],\r\n  providers: [CanvasDefinitionLoaderService],\r\n})\r\nexport class CanvasDefinitionComponent implements OnDestroy {\r\n  canvas: CanvasDefinitionCell[][] = [];\r\n\r\n  private formSubscription: Subscription;\r\n\r\n  constructor(\r\n    private canvasDefinitionLoaderService: CanvasDefinitionLoaderService,\r\n    private canvasDefinitionRowFormService: CanvasDefinitionRowFormService,\r\n    private canvasDefinitionService: CanvasDefinitionService\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.formSubscription) {\r\n      this.formSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async submitRowForm(value: CanvasDefinitionCellFormValue[][]): Promise<void> {\r\n    const rows = this.canvasDefinitionRowFormService.get(value);\r\n    await this.canvasDefinitionService.updateRows(\r\n      this.canvasDefinition._id,\r\n      rows\r\n    );\r\n  }\r\n\r\n  toCanvasDefinitionRows(value: {\r\n    rows: CanvasDefinitionCellFormValue[][];\r\n  }): CanvasDefinitionCell[][] {\r\n    if (value == null) {\r\n      return this.canvasDefinition.rows;\r\n    }\r\n    return this.canvasDefinitionRowFormService.get(value.rows);\r\n  }\r\n\r\n  async update(value: Partial<CanvasDefinition>): Promise<void> {\r\n    await this.canvasDefinitionService.update(this.canvasDefinition._id, value);\r\n  }\r\n\r\n  get canvasDefinition(): CanvasDefinition {\r\n    return this.canvasDefinitionLoaderService.canvasDefinition;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'canvas', 'definitions']\"\r\n      >Canvas Models</a\r\n    >\r\n    <a *ngIf=\"canvasDefinition\" class=\"nav-link active\" [routerLink]=\"[]\">{{\r\n      canvasDefinition.name\r\n    }}</a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"canvasDefinition\" role=\"main\" class=\"container\">\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Canvas Model</h6>\r\n    <app-canvas-definition-row-form\r\n      #canvasDefinitionRowFormComponent\r\n      [canvasDefinitionRows]=\"canvasDefinition.rows\"\r\n      (submitForm)=\"submitRowForm($event.value)\"\r\n    ></app-canvas-definition-row-form>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Canvas Model Overview</h6>\r\n    <app-canvas-definition-overview\r\n      [canvasDefinitionCells]=\"\r\n        toCanvasDefinitionRows(\r\n          canvasDefinitionRowFormComponent.form.valueChanges | async\r\n        )\r\n      \"\r\n    ></app-canvas-definition-overview>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Canvas Model Relationships</h6>\r\n    <app-canvas-definition-relationships-form\r\n      [relationshipTypes]=\"canvasDefinition.relationshipTypes\"\r\n      (submitRelationshipTypesForm)=\"\r\n        update({ relationshipTypes: $event.value })\r\n      \"\r\n    ></app-canvas-definition-relationships-form>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Edit Canvas Model</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-canvas-definition-form\r\n        [canvasDefinition]=\"canvasDefinition\"\r\n        (submitForm)=\"update($event.value)\"\r\n      ></app-canvas-definition-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  CanvasDefinition,\r\n  CanvasDefinitionEntry,\r\n  CanvasDefinitionInit,\r\n} from '../../../canvas-meta-model/canvas-definition';\r\nimport { CanvasDefinitionService } from '../../../canvas-meta-model/canvas-definition.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ELEMENT_SERVICE, ListService } from '../../../shared/list.service';\r\n\r\n@Component({\r\n  selector: 'app-canvas-definitions',\r\n  templateUrl: './canvas-definitions.component.html',\r\n  styleUrls: ['./canvas-definitions.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: CanvasDefinitionService },\r\n  ],\r\n})\r\nexport class CanvasDefinitionsComponent {\r\n  addCanvasDefinitionForm: FormGroup = this.fb.group({\r\n    name: ['', Validators.required],\r\n  });\r\n\r\n  modalCanvas: CanvasDefinitionEntry;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteCanvasDefinitionModal', { static: true })\r\n  deleteCanvasDefinitionModal: unknown;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private listService: ListService<CanvasDefinition, CanvasDefinitionInit>,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  async addCanvasDefinition(): Promise<void> {\r\n    await this.listService.add({ name: this.nameControl.value });\r\n    this.addCanvasDefinitionForm.reset();\r\n  }\r\n\r\n  openDeleteCanvasDefinitionModal(\r\n    canvasDefinition: CanvasDefinitionEntry\r\n  ): void {\r\n    this.modalCanvas = canvasDefinition;\r\n    this.modalReference = this.modalService.open(\r\n      this.deleteCanvasDefinitionModal,\r\n      { size: 'lg' }\r\n    );\r\n  }\r\n\r\n  async deleteCanvasDefinition(canvasDefinitionId: string): Promise<void> {\r\n    await this.listService.delete(canvasDefinitionId);\r\n  }\r\n\r\n  get nameControl(): FormControl {\r\n    return this.addCanvasDefinitionForm.get('name') as FormControl;\r\n  }\r\n\r\n  get canvasDefinitions(): CanvasDefinitionEntry[] {\r\n    return this.listService.elements;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.listService.noResults;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.listService.loading;\r\n  }\r\n\r\n  get reloading(): boolean {\r\n    return this.listService.reloading;\r\n  }\r\n}\r\n","<ng-template #deleteCanvasDefinitionModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (delete)=\"deleteCanvasDefinition(modalCanvas._id); c()\"\r\n    (dismiss)=\"d()\"\r\n  >\r\n    <div modalTitle>Delete Canvas Model {{ modalCanvas.name }}</div>\r\n    You are deleting the canvas model {{ modalCanvas.name }}. The deletion can\r\n    not be undone. The canvas building blocks that are using it will still be\r\n    available after the deletion.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Canvas Models</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Canvas models are used to define different types of canvases, e.g., business\r\n    model canvas and value proposition canvas.\r\n  </div>\r\n\r\n  <app-list-wrapper\r\n    listTitle=\"Canvas Models\"\r\n    [reloading]=\"reloading\"\r\n    [loading]=\"loading\"\r\n    [noResults]=\"noResults\"\r\n  >\r\n    <div noResults>No canvas models available.</div>\r\n    <ul results class=\"list-group\">\r\n      <li\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-baseline\r\n        \"\r\n        *ngFor=\"let canvasDefinition of canvasDefinitions\"\r\n      >\r\n        <div>\r\n          <span>{{ canvasDefinition.name }}</span>\r\n        </div>\r\n        <div>\r\n          <a\r\n            [routerLink]=\"[canvasDefinition._id]\"\r\n            type=\"button\"\r\n            class=\"btn btn-dark btn-xs mr-1\"\r\n            >View</a\r\n          >\r\n          <button\r\n            (click)=\"openDeleteCanvasDefinitionModal(canvasDefinition)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </app-list-wrapper>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Add Canvas Model</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"addCanvasDefinitionForm\"\r\n        (ngSubmit)=\"addCanvasDefinition()\"\r\n      >\r\n        <div class=\"form-group form-row\">\r\n          <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n              [class.is-invalid]=\"nameControl.invalid && nameControl.touched\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!addCanvasDefinitionForm.valid\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ArtifactData,\r\n  ArtifactDataType,\r\n} from '../development-process-registry/running-process/artifact-data';\r\nimport { InstanceArtifactData } from '../canvas-meta-model/instance-artifact-data';\r\nimport { RunningProcessService } from '../development-process-registry/running-process/running-process.service';\r\nimport { StepInfo } from '../development-process-registry/module-api/step-info';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CanvasResolveService {\r\n  constructor(private runningProcessService: RunningProcessService) {}\r\n\r\n  resolveCreateCanvas(\r\n    stepInfo: StepInfo,\r\n    companyModelId: string,\r\n    instanceId: number\r\n  ): void {\r\n    const artifactData = this.getArtifactData(companyModelId, instanceId);\r\n    void this.runningProcessService.finishExecuteStep(stepInfo, {\r\n      outputArtifactData: [artifactData],\r\n    });\r\n  }\r\n\r\n  resolveEditCanvas(\r\n    stepInfo: StepInfo,\r\n    companyModelId: string,\r\n    instanceId: number\r\n  ): void {\r\n    const artifactData = this.getArtifactData(companyModelId, instanceId);\r\n    void this.runningProcessService.finishExecuteStep(stepInfo, {\r\n      outputArtifactData: [artifactData],\r\n    });\r\n  }\r\n\r\n  private getArtifactData(\r\n    companyModelId: string,\r\n    instanceId: number\r\n  ): ArtifactData {\r\n    return new ArtifactData(undefined, {\r\n      data: new InstanceArtifactData({\r\n        id: companyModelId,\r\n        instanceId,\r\n      }),\r\n      type: ArtifactDataType.REFERENCE,\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MergeExpertModelsComponent } from './merge/merge-expert-models/merge-expert-models.component';\r\nimport { MergeModelViewComponent } from './merge/merge-model-view/merge-model-view.component';\r\nimport { ExpertModelsComponent } from './expert-model/expert-models/expert-models.component';\r\nimport { ExpertModelComponent } from './expert-model/expert-model/expert-model.component';\r\nimport { ExpertModelEditComponent } from './expert-model/expert-model-edit/expert-model-edit.component';\r\nimport { PatternComponent } from './instances/pattern/pattern.component';\r\nimport { ExampleComponent } from './instances/example/example.component';\r\nimport { CompanyModelEditComponent } from './company-model/company-model-edit/company-model-edit.component';\r\nimport { CompanyModelsComponent } from './company-model/company-models/company-models.component';\r\nimport { CompanyModelComponent } from './company-model/company-model/company-model.component';\r\nimport { CreateCanvasComponent } from './api/create-canvas/create-canvas.component';\r\nimport { EditCanvasComponent } from './api/edit-canvas/edit-canvas.component';\r\nimport { CanvasDefinitionsComponent } from './canvas-definition/canvas-definitions/canvas-definitions.component';\r\nimport { CanvasDefinitionComponent } from './canvas-definition/canvas-definition/canvas-definition.component';\r\nimport { CompanyModelSelectExpertKnowledgeComponent } from './company-model/company-model-select-expert-knowledge/company-model-select-expert-knowledge.component';\r\nimport { CompareComponent } from './api/compare/compare.component';\r\nimport { CreateCompetitorCanvasComponent } from './api/create-competitor-canvas/create-competitor-canvas.component';\r\nimport { EditCompetitorsComponent } from './api/edit-competitors/edit-competitors.component';\r\nimport { EditCompetitorCanvasComponent } from './api/edit-competitor-canvas/edit-competitor-canvas.component';\r\nimport { RefineCanvasComponent } from './api/refine-canvas/refine-canvas.component';\r\nimport { ViewCanvasComponent } from './api/view-canvas/view-canvas.component';\r\nimport { EditModelComponent } from './api/edit-model/edit-model.component';\r\nimport { AuthGuard } from '../database/auth.guard';\r\nimport { CanvasElementsComponent } from './elements/canvas-elements/canvas-elements.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'canvas',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'definitions', component: CanvasDefinitionsComponent },\r\n      { path: 'definitions/:id', component: CanvasDefinitionComponent },\r\n      { path: 'instance/create', component: CreateCanvasComponent },\r\n      {\r\n        path: ':companyModelId/instance/:instanceId',\r\n        children: [\r\n          { path: 'edit', component: EditCanvasComponent },\r\n          { path: 'refine', component: RefineCanvasComponent },\r\n          { path: 'view', component: ViewCanvasComponent },\r\n          { path: 'model/edit', component: EditModelComponent },\r\n          {\r\n            path: 'competitors',\r\n            children: [\r\n              { path: '', component: CreateCompetitorCanvasComponent },\r\n              { path: 'edit', component: EditCompetitorsComponent },\r\n              {\r\n                path: ':competitorId/edit',\r\n                component: EditCompetitorCanvasComponent,\r\n              },\r\n            ],\r\n          },\r\n          { path: 'compare', component: CompareComponent },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'companyModels',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: CompanyModelsComponent },\r\n      { path: ':id', component: CompanyModelComponent },\r\n      { path: ':id/edit', component: CompanyModelEditComponent },\r\n      {\r\n        path: ':id/select',\r\n        component: CompanyModelSelectExpertKnowledgeComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'expertModels',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: ExpertModelsComponent },\r\n      { path: ':id', component: ExpertModelComponent },\r\n      { path: ':id/edit', component: ExpertModelEditComponent },\r\n      { path: ':id/examples/:exampleId', component: ExampleComponent },\r\n      { path: ':id/patterns/:patternId', component: PatternComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: 'merge',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: ':companyModelId', component: MergeExpertModelsComponent },\r\n      {\r\n        path: ':companyModelId/:expertModelId',\r\n        component: MergeModelViewComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'canvasElements',\r\n    component: CanvasElementsComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CanvasRoutingModule {}\r\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\r\n\r\nimport { CanvasRoutingModule } from './canvas-routing.module';\r\nimport { CanvasService } from './canvas.service';\r\nimport { FeatureModelSubformComponent } from './feature-model/feature-model-subform/feature-model-subform.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { FeatureModelInstanceSubformComponent } from './instances/feature-model-instance-subform/feature-model-instance-subform.component';\r\nimport { MergeExpertModelsComponent } from './merge/merge-expert-models/merge-expert-models.component';\r\nimport { MergeIntoTreeComponent } from './merge/merge-into-tree/merge-into-tree.component';\r\nimport { MergeModelViewComponent } from './merge/merge-model-view/merge-model-view.component';\r\nimport { MergeTreeComponent } from './merge/merge-tree/merge-tree.component';\r\nimport { TraceModalComponent } from './merge/trace-modal/trace-modal.component';\r\nimport { CrossTreeRelationshipFormComponent } from './relationships/cross-tree-relationship-form/cross-tree-relationship-form.component';\r\nimport { CrossTreeRelationshipModalComponent } from './relationships/cross-tree-relationship-modal/cross-tree-relationship-modal.component';\r\nimport { DeleteFeatureConfirmComponent } from './feature-model/delete-feature-confirm/delete-feature-confirm.component';\r\nimport { FeatureFormComponent } from './feature-model/feature-form/feature-form.component';\r\nimport { FeatureModelComponent } from './feature-model/feature-model/feature-model.component';\r\nimport { FeatureBuildingBlockComponent } from './feature-model/feature-building-block/feature-building-block.component';\r\nimport { ExpertModelComponent } from './expert-model/expert-model/expert-model.component';\r\nimport { ExpertModelsComponent } from './expert-model/expert-models/expert-models.component';\r\nimport { ModelListComponent } from './feature-model/model-list/model-list.component';\r\nimport { ModelImportViewComponent } from './feature-model/model-import-view/model-import-view.component';\r\nimport { ExpertModelEditComponent } from './expert-model/expert-model-edit/expert-model-edit.component';\r\nimport { FeatureModelEditComponent } from './feature-model/feature-model-edit/feature-model-edit.component';\r\nimport { FeatureTreeComponent } from './feature-model/feature-tree/feature-tree.component';\r\nimport { FeatureModelFormComponent } from './feature-model/feature-model-form/feature-model-form.component';\r\nimport { InstanceListComponent } from './instances/instance-list/instance-list.component';\r\nimport { InstanceComponent } from './instances/instance/instance.component';\r\nimport { PatternComponent } from './instances/pattern/pattern.component';\r\nimport { DeleteDecisionModalComponent } from './instances/delete-decision-modal/delete-decision-modal.component';\r\nimport { AddDecisionModalComponent } from './instances/add-decision-modal/add-decision-modal.component';\r\nimport { InstanceInfoBoxComponent } from './instances/instance-info-box/instance-info-box.component';\r\nimport { InstanceFormComponent } from './instances/instance-form/instance-form.component';\r\nimport { CanvasBuildingBlockComponent } from './instances/canvas-building-block/canvas-building-block.component';\r\nimport { ExampleComponent } from './instances/example/example.component';\r\nimport { ModelInfoBoxComponent } from './feature-model/model-info-box/model-info-box.component';\r\nimport { CompanyModelEditComponent } from './company-model/company-model-edit/company-model-edit.component';\r\nimport { CompanyModelsComponent } from './company-model/company-models/company-models.component';\r\nimport { CompanyModelComponent } from './company-model/company-model/company-model.component';\r\nimport { CreateCanvasConfigurationComponent } from './api/create-canvas-configuration/create-canvas-configuration.component';\r\nimport { CreateCanvasComponent } from './api/create-canvas/create-canvas.component';\r\nimport { EditCanvasComponent } from './api/edit-canvas/edit-canvas.component';\r\nimport { CanvasDefinitionsComponent } from './canvas-definition/canvas-definitions/canvas-definitions.component';\r\nimport { CanvasDefinitionComponent } from './canvas-definition/canvas-definition/canvas-definition.component';\r\nimport { CanvasComponent } from './instances/canvas/canvas.component';\r\nimport { SelectCanvasDefinitionConfigurationComponent } from './api/select-canvas-definition-configuration/select-canvas-definition-configuration.component';\r\nimport { CompanyModelSelectExpertKnowledgeComponent } from './company-model/company-model-select-expert-knowledge/company-model-select-expert-knowledge.component';\r\nimport { CompareComponent } from './api/compare/compare.component';\r\nimport { InstanceCompareFormComponent } from './instances/instance-compare-form/instance-compare-form.component';\r\nimport { CreateCompetitorCanvasComponent } from './api/create-competitor-canvas/create-competitor-canvas.component';\r\nimport { EditCompetitorCanvasComponent } from './api/edit-competitor-canvas/edit-competitor-canvas.component';\r\nimport { EditCompetitorsComponent } from './api/edit-competitors/edit-competitors.component';\r\nimport { RefineCanvasComponent } from './api/refine-canvas/refine-canvas.component';\r\nimport { InstanceSelectPatternFormComponent } from './instances/instance-select-pattern-form/instance-select-pattern-form.component';\r\nimport { ViewCanvasComponent } from './api/view-canvas/view-canvas.component';\r\nimport { EditModelComponent } from './api/edit-model/edit-model.component';\r\nimport { CanvasDefinitionFormComponent } from './canvas-definition/canvas-definition-form/canvas-definition-form.component';\r\nimport { CanvasDefinitionRowFormComponent } from './canvas-definition/canvas-definition-row-form/canvas-definition-row-form.component';\r\nimport { CanvasDefinitionRelationshipsFormComponent } from './canvas-definition/canvas-definition-relationships-form/canvas-definition-relationships-form.component';\r\nimport { CanvasElementsComponent } from './elements/canvas-elements/canvas-elements.component';\r\nimport { CanvasDefinitionOverviewComponent } from './canvas-definition/canvas-definition-overview/canvas-definition-overview.component';\r\nimport { PatternDescriptionModalComponent } from './instances/pattern-description-modal/pattern-description-modal.component';\r\nimport { PatternViewComponent } from './instances/pattern-view/pattern-view.component';\r\nimport { PatternHintComponent } from './instances/pattern-hint/pattern-hint.component';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (canvasService: CanvasService) => (): void =>\r\n        canvasService.init(),\r\n      deps: [CanvasService],\r\n      multi: true,\r\n    },\r\n  ],\r\n  imports: [SharedModule, CanvasRoutingModule],\r\n  declarations: [\r\n    // api\r\n    CompareComponent,\r\n    CreateCanvasComponent,\r\n    CreateCanvasConfigurationComponent,\r\n    CreateCompetitorCanvasComponent,\r\n    EditCanvasComponent,\r\n    EditCompetitorCanvasComponent,\r\n    EditCompetitorsComponent,\r\n    EditModelComponent,\r\n    RefineCanvasComponent,\r\n    SelectCanvasDefinitionConfigurationComponent,\r\n    ViewCanvasComponent,\r\n\r\n    // canvas-definition\r\n    CanvasDefinitionComponent,\r\n    CanvasDefinitionFormComponent,\r\n    CanvasDefinitionOverviewComponent,\r\n    CanvasDefinitionRelationshipsFormComponent,\r\n    CanvasDefinitionRowFormComponent,\r\n    CanvasDefinitionsComponent,\r\n\r\n    // company-model\r\n    CompanyModelComponent,\r\n    CompanyModelEditComponent,\r\n    CompanyModelSelectExpertKnowledgeComponent,\r\n    CompanyModelsComponent,\r\n\r\n    // elements\r\n    CanvasElementsComponent,\r\n\r\n    // expert-model\r\n    ExpertModelComponent,\r\n    ExpertModelEditComponent,\r\n    ExpertModelsComponent,\r\n\r\n    // feature-model\r\n    DeleteFeatureConfirmComponent,\r\n    FeatureBuildingBlockComponent,\r\n    FeatureFormComponent,\r\n    FeatureModelComponent,\r\n    FeatureModelEditComponent,\r\n    FeatureModelFormComponent,\r\n    FeatureModelSubformComponent,\r\n    FeatureTreeComponent,\r\n    ModelImportViewComponent,\r\n    ModelInfoBoxComponent,\r\n    ModelListComponent,\r\n\r\n    // instances\r\n    AddDecisionModalComponent,\r\n    CanvasComponent,\r\n    CanvasBuildingBlockComponent,\r\n    DeleteDecisionModalComponent,\r\n    ExampleComponent,\r\n    FeatureModelInstanceSubformComponent,\r\n    InstanceComponent,\r\n    InstanceCompareFormComponent,\r\n    InstanceFormComponent,\r\n    InstanceInfoBoxComponent,\r\n    InstanceListComponent,\r\n    InstanceSelectPatternFormComponent,\r\n    PatternComponent,\r\n    PatternDescriptionModalComponent,\r\n    PatternHintComponent,\r\n    PatternViewComponent,\r\n\r\n    // merge\r\n    MergeExpertModelsComponent,\r\n    MergeIntoTreeComponent,\r\n    MergeModelViewComponent,\r\n    MergeTreeComponent,\r\n    TraceModalComponent,\r\n\r\n    // relationships\r\n    CrossTreeRelationshipFormComponent,\r\n    CrossTreeRelationshipModalComponent,\r\n  ],\r\n})\r\nexport class CanvasModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ModuleService } from '../development-process-registry/module-api/module.service';\r\nimport { Module } from '../development-process-registry/module-api/module';\r\nimport { CompanyModel } from '../canvas-meta-model/company-model';\r\nimport { CompanyModelService } from '../canvas-meta-model/company-model.service';\r\nimport { CanvasApiService } from './canvas-api.service';\r\nimport { ExpertModelService } from '../canvas-meta-model/expert-model.service';\r\nimport { CreateCanvasConfigurationComponent } from './api/create-canvas-configuration/create-canvas-configuration.component';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SelectCanvasDefinitionConfigurationComponent } from './api/select-canvas-definition-configuration/select-canvas-definition-configuration.component';\r\nimport { CanvasMetaModelService } from '../canvas-meta-model/canvas-meta-model.service';\r\nimport { ArtifactDataReference } from '../development-process-registry/running-process/artifact-data';\r\nimport { Router } from '@angular/router';\r\nimport { InstanceArtifactData } from '../canvas-meta-model/instance-artifact-data';\r\nimport { Reference } from '../development-process-registry/meta-model-definition';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CanvasService {\r\n  constructor(\r\n    private canvasApiService: CanvasApiService,\r\n    private canvasMetaModelService: CanvasMetaModelService,\r\n    private companyModelService: CompanyModelService,\r\n    private expertModelService: ExpertModelService,\r\n    private fb: FormBuilder,\r\n    private moduleService: ModuleService\r\n  ) {}\r\n\r\n  init(): void {\r\n    const module = new Module();\r\n    module.list = 'Canvas Tools';\r\n    module.name = 'Canvas Module';\r\n    this.addMethods(module);\r\n    module.service = this.canvasApiService;\r\n    this.moduleService.registerModule(module);\r\n    console.log('Registered Canvas Module');\r\n    this.canvasMetaModelService.registerViewMethod(this.viewModel);\r\n    console.log('Registered Canvas Module as view method for canvas models');\r\n  }\r\n\r\n  async viewModel(\r\n    model: ArtifactDataReference,\r\n    router: Router,\r\n    reference: Reference\r\n  ): Promise<void> {\r\n    const modelReference: InstanceArtifactData = model as InstanceArtifactData;\r\n    let queryParams: {\r\n      runningProcessId?: string;\r\n      executionId?: string;\r\n      artifactId?: string;\r\n      versionId?: number;\r\n    };\r\n    switch (reference.referenceType) {\r\n      case 'Process':\r\n        queryParams = {\r\n          runningProcessId: reference.runningProcessId,\r\n        };\r\n        break;\r\n      case 'Method':\r\n        queryParams = {\r\n          runningProcessId: reference.runningProcessId,\r\n          executionId: reference.executionId,\r\n        };\r\n        break;\r\n      case 'Artifact':\r\n        queryParams = {\r\n          artifactId: reference.artifactId,\r\n          versionId: reference.versionId,\r\n        };\r\n        break;\r\n    }\r\n    await router.navigate(\r\n      [\r\n        'canvas',\r\n        modelReference.id,\r\n        'instance',\r\n        modelReference.instanceId,\r\n        'view',\r\n      ],\r\n      {\r\n        queryParams,\r\n      }\r\n    );\r\n  }\r\n\r\n  private addMethods(module: Module): void {\r\n    const self = this;\r\n    module.addMethod({\r\n      name: 'createCanvas',\r\n      description: 'Creates a canvas',\r\n      input: [],\r\n      output: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n      configurationFormComponent: SelectCanvasDefinitionConfigurationComponent,\r\n      createConfigurationForm(predefinedInput: any): FormGroup {\r\n        return self.fb.group({\r\n          definitionId: [\r\n            predefinedInput ? predefinedInput.definitionId : null,\r\n            Validators.required,\r\n          ],\r\n        });\r\n      },\r\n      equalPredefinedInput(\r\n        predefinedInputA: any,\r\n        predefinedInputB: any\r\n      ): boolean {\r\n        if (predefinedInputA == null && predefinedInputB == null) {\r\n          return true;\r\n        }\r\n        if (predefinedInputA == null || predefinedInputB == null) {\r\n          return false;\r\n        }\r\n        return predefinedInputA.definitionId === predefinedInputB.definitionId;\r\n      },\r\n      decisionConfigurationFormComponent: CreateCanvasConfigurationComponent,\r\n      createDecisionConfigurationForm(predefinedInput: any): FormGroup {\r\n        if (predefinedInput == null) {\r\n          predefinedInput = {\r\n            companyModelId: null,\r\n          };\r\n        }\r\n        return self.fb.group({\r\n          companyModelId: [predefinedInput.companyModelId, Validators.required],\r\n        });\r\n      },\r\n    });\r\n    module.addMethod({\r\n      name: 'editCanvas',\r\n      description: 'Edit a canvas',\r\n      input: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n      output: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n    });\r\n    module.addMethod({\r\n      name: 'refineCanvas',\r\n      description: 'Refine canvas through hints and patterns',\r\n      input: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n      output: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n    });\r\n    module.addMethod({\r\n      name: 'compareCompetitors',\r\n      description: 'Compare competitors with the business model canvas',\r\n      input: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n      output: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n    });\r\n    module.addMethod({\r\n      name: 'createCompetitors',\r\n      description: 'Add competitors to the model',\r\n      input: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n      output: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n    });\r\n    module.addMethod({\r\n      name: 'manageCompetitors',\r\n      description: 'Edit and remove competitors of the model',\r\n      input: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n      output: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n    });\r\n    module.addMethod({\r\n      name: 'viewCanvas',\r\n      description: 'View the canvas',\r\n      input: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n      output: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n    });\r\n    module.addMethod({\r\n      name: 'editModel',\r\n      description: 'Edit the company model',\r\n      input: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n      output: [{ name: 'Canvas', type: CompanyModel.typeName }],\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { CompanyModelLoaderService } from '../company-model-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-company-model-edit',\r\n  templateUrl: './company-model-edit.component.html',\r\n  styleUrls: ['./company-model-edit.component.css'],\r\n  providers: [CompanyModelLoaderService],\r\n})\r\nexport class CompanyModelEditComponent {\r\n  constructor(\r\n    private companyModelLoaderService: CompanyModelLoaderService,\r\n    private companyModelService: CompanyModelService\r\n  ) {}\r\n\r\n  async updateCompanyModel() {\r\n    await this.companyModelService.save(this.companyModel);\r\n  }\r\n\r\n  get companyModel() {\r\n    return this.companyModelLoaderService.companyModel;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'companyModels']\">\r\n      Composed Models\r\n    </a>\r\n    <a\r\n      *ngIf=\"companyModel\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'companyModels', companyModel._id]\"\r\n    >\r\n      {{ companyModel.name }}\r\n    </a>\r\n    <a *ngIf=\"companyModel\" class=\"nav-link active\" [routerLink]=\"[]\">Edit</a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"companyModel\" role=\"main\" class=\"container\">\r\n  <app-feature-model-edit\r\n    [featureModel]=\"companyModel\"\r\n    (updateFeatureModel)=\"updateCompanyModel()\"\r\n  ></app-feature-model-edit>\r\n</main>\r\n","import { Injectable } from '@angular/core';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { CompanyModel } from '../../canvas-meta-model/company-model';\r\nimport { CompanyModelService } from '../../canvas-meta-model/company-model.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CompanyModelLoaderService extends ElementLoaderService {\r\n  companyModel: CompanyModel = null;\r\n\r\n  constructor(\r\n    private companyModelService: CompanyModelService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const companyModelId = paramMap.get('id');\r\n    this.changesFeed = this.companyModelService\r\n      .getChangesFeed(companyModelId)\r\n      .subscribe(() => this.loadCompanyModel(companyModelId));\r\n    void this.loadCompanyModel(companyModelId);\r\n  }\r\n\r\n  private async loadCompanyModel(companyModelId: string): Promise<void> {\r\n    this.companyModel = await this.companyModelService.get(companyModelId);\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { BmProcess } from '../../../development-process-registry/bm-process/bm-process';\r\nimport { BmProcessService } from '../../../development-process-registry/bm-process/bm-process.service';\r\nimport { MergeService } from '../../merge/merge.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ExpertModelEntry } from '../../../canvas-meta-model/expert-model';\r\n\r\n@Component({\r\n  selector: 'app-company-model-select-expert-knowledge',\r\n  templateUrl: './company-model-select-expert-knowledge.component.html',\r\n  styleUrls: ['./company-model-select-expert-knowledge.component.css'],\r\n})\r\nexport class CompanyModelSelectExpertKnowledgeComponent\r\n  implements OnInit, OnDestroy\r\n{\r\n  companyModel: CompanyModel;\r\n  bmProcess: BmProcess;\r\n\r\n  selectedExpertModelForm = this.fb.group({\r\n    expertModelId: [null, Validators.required],\r\n  });\r\n  selectedExpertModelList: ExpertModelEntry[];\r\n  unselectedExpertModelList: ExpertModelEntry[];\r\n\r\n  private querySubscription: Subscription;\r\n  private routeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private bmProcessService: BmProcessService,\r\n    private companyModelService: CompanyModelService,\r\n    private fb: FormBuilder,\r\n    private mergeService: MergeService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.querySubscription = this.route.queryParamMap.subscribe((paramMap) => {\r\n      void this.loadBmProcess(paramMap.get('bmProcessId'));\r\n    });\r\n    this.routeSubscription = this.route.paramMap.subscribe((paramMap) => {\r\n      void this.loadCompanyModel(paramMap.get('id'));\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.querySubscription) {\r\n      this.querySubscription.unsubscribe();\r\n    }\r\n    if (this.routeSubscription) {\r\n      this.routeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async loadCompanyModel(companyModelId: string): Promise<void> {\r\n    this.companyModel = await this.companyModelService.get(companyModelId);\r\n    await this.loadExpertModels(companyModelId);\r\n  }\r\n\r\n  async loadBmProcess(bmProcessId: string): Promise<void> {\r\n    this.bmProcess = await this.bmProcessService.get(bmProcessId);\r\n  }\r\n\r\n  async mergeExpertModel(expertModelId: string): Promise<void> {\r\n    await this.router.navigate(\r\n      ['/merge', this.companyModel._id, expertModelId],\r\n      {\r\n        queryParams: {\r\n          bmProcessId: this.bmProcess._id,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  async selectExpertModel(): Promise<void> {\r\n    await this.mergeService.selectExpertModel(\r\n      this.companyModel._id,\r\n      this.selectedExpertModelForm.value.expertModelId\r\n    );\r\n    this.selectedExpertModelForm.reset();\r\n    await this.loadExpertModels(this.companyModel._id);\r\n  }\r\n\r\n  async unselectExpertModel(expertModelId: string): Promise<void> {\r\n    await this.mergeService.unselectExpertModel(\r\n      this.companyModel._id,\r\n      expertModelId\r\n    );\r\n    await this.loadExpertModels(this.companyModel._id);\r\n  }\r\n\r\n  private async loadExpertModels(companyModelId: string): Promise<void> {\r\n    await this.loadSelectedExpertModels(companyModelId);\r\n    await this.loadUnselectedExpertModels(companyModelId);\r\n  }\r\n\r\n  private async loadSelectedExpertModels(\r\n    companyModelId: string\r\n  ): Promise<void> {\r\n    this.selectedExpertModelList =\r\n      await this.mergeService.getSelectedExpertModels(companyModelId);\r\n  }\r\n\r\n  private async loadUnselectedExpertModels(\r\n    companyModelId: string\r\n  ): Promise<void> {\r\n    const result = await this.mergeService.getUnselectedExpertModels(\r\n      companyModelId\r\n    );\r\n    if (this.bmProcess.domains.length > 0) {\r\n      this.unselectedExpertModelList = result.filter((model) =>\r\n        model.domains\r\n          ? model.domains.some((domain) =>\r\n              this.bmProcess.domains.some((d) => d._id === domain._id)\r\n            )\r\n          : false\r\n      );\r\n    } else {\r\n      this.unselectedExpertModelList = result;\r\n    }\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"bmProcess && companyModel\">\r\n    <a\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'bmprocess', 'bmprocessview', bmProcess._id]\"\r\n      >{{ bmProcess.name }}</a\r\n    >\r\n    <a\r\n      class=\"nav-link active\"\r\n      [routerLink]=\"[]\"\r\n      [queryParams]=\"{ bmProcessId: this.bmProcess._id }\"\r\n      >{{ companyModel.name }}</a\r\n    >\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"companyModel && bmProcess\" role=\"main\" class=\"container\">\r\n  <app-model-info-box [featureModel]=\"companyModel\"></app-model-info-box>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Domains</h6>\r\n    <ul class=\"list-group\">\r\n      <li class=\"list-group-item\" *ngFor=\"let domain of bmProcess.domains\">\r\n        {{ domain.name }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Select Canvas Building Block\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"selectedExpertModelForm\"\r\n        (ngSubmit)=\"selectExpertModel()\"\r\n      >\r\n        <div class=\"form-group row\">\r\n          <label for=\"expertModelSelector\" class=\"col-sm-4 col-form-label\"\r\n            >Canvas Building Block</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <select\r\n              id=\"expertModelSelector\"\r\n              formControlName=\"expertModelId\"\r\n              class=\"form-control\"\r\n            >\r\n              <option\r\n                *ngFor=\"let em of unselectedExpertModelList\"\r\n                [value]=\"em._id\"\r\n              >\r\n                {{ em.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!selectedExpertModelForm.valid\"\r\n            >\r\n              Add Canvas Building Block\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Selected Canvas Building Blocks\r\n    </h6>\r\n\r\n    <ul\r\n      *ngIf=\"selectedExpertModelList\"\r\n      class=\"list-group inner\"\r\n      style=\"margin: 5px\"\r\n    >\r\n      <li\r\n        *ngFor=\"let em of selectedExpertModelList\"\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-center\r\n        \"\r\n      >\r\n        <span>{{ em.name }}</span>\r\n        <span>\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"mergeExpertModel(em._id)\"\r\n            class=\"btn btn-warning btn-xs mr-1\"\r\n          >\r\n            Merge\r\n          </button>\r\n          <button\r\n            (click)=\"unselectExpertModel(em._id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Unselect\r\n          </button>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { ExpertModelEntry } from '../../../canvas-meta-model/expert-model';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MergeService } from '../../merge/merge.service';\r\nimport { CompanyModelLoaderService } from '../company-model-loader.service';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\n\r\n@Component({\r\n  selector: 'app-company-model',\r\n  templateUrl: './company-model.component.html',\r\n  styleUrls: ['./company-model.component.css'],\r\n  providers: [CompanyModelLoaderService],\r\n})\r\nexport class CompanyModelComponent implements OnInit {\r\n  selectedExpertModelList: ExpertModelEntry[];\r\n  selectedExpertModelForm = this.fb.group({\r\n    expertModelId: [null, Validators.required],\r\n  });\r\n  unselectedExpertModelList: ExpertModelEntry[];\r\n\r\n  constructor(\r\n    private companyModelLoaderService: CompanyModelLoaderService,\r\n    private companyModelService: CompanyModelService,\r\n    private fb: FormBuilder,\r\n    private mergeService: MergeService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.companyModelLoaderService.loaded.subscribe(() =>\r\n      this.loadExpertModels(this.companyModel._id)\r\n    );\r\n  }\r\n\r\n  async update(description: any): Promise<void> {\r\n    await this.companyModelService.update(this.companyModel._id, description);\r\n  }\r\n\r\n  async updateAuthor(authorInfo: any): Promise<void> {\r\n    await this.companyModelService.updateAuthor(\r\n      this.companyModel._id,\r\n      authorInfo\r\n    );\r\n  }\r\n\r\n  async selectExpertModel(): Promise<void> {\r\n    await this.mergeService.selectExpertModel(\r\n      this.companyModel._id,\r\n      this.selectedExpertModelForm.value.expertModelId\r\n    );\r\n    this.selectedExpertModelForm.reset();\r\n  }\r\n\r\n  async unselectExpertModel(expertModelId: string): Promise<void> {\r\n    await this.mergeService.unselectExpertModel(\r\n      this.companyModel._id,\r\n      expertModelId\r\n    );\r\n  }\r\n\r\n  async mergeExpertModel(expertModelId: string): Promise<void> {\r\n    await this.router.navigate([\r\n      '/merge',\r\n      this.companyModel._id,\r\n      expertModelId,\r\n    ]);\r\n  }\r\n\r\n  async viewExpertModel(expertModelId: string): Promise<void> {\r\n    await this.router.navigate(['/expertModels', expertModelId]);\r\n  }\r\n\r\n  /**\r\n   * Load selected and unselected expert models\r\n   *\r\n   * @param companyModelId the id of the company model\r\n   */\r\n  private async loadExpertModels(companyModelId: string): Promise<void> {\r\n    await this.loadSelectedExpertModels(companyModelId);\r\n    await this.loadUnselectedExpertModels(companyModelId);\r\n  }\r\n\r\n  /**\r\n   * Load all selected expert models\r\n   *\r\n   * @param companyModelId the id of the company model\r\n   */\r\n  private async loadSelectedExpertModels(\r\n    companyModelId: string\r\n  ): Promise<void> {\r\n    this.selectedExpertModelList =\r\n      await this.mergeService.getSelectedExpertModels(companyModelId);\r\n  }\r\n\r\n  /**\r\n   * Load all unselected expert models\r\n   *\r\n   * @param companyModelId the id of the company model\r\n   */\r\n  private async loadUnselectedExpertModels(\r\n    companyModelId: string\r\n  ): Promise<void> {\r\n    this.unselectedExpertModelList =\r\n      await this.mergeService.getUnselectedExpertModels(companyModelId);\r\n  }\r\n\r\n  get companyModel(): CompanyModel {\r\n    return this.companyModelLoaderService.companyModel;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'companyModels']\">\r\n      Composed Models\r\n    </a>\r\n    <a *ngIf=\"companyModel\" class=\"nav-link active\" [routerLink]=\"[]\">\r\n      {{ companyModel.name }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"companyModel\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'companyModels', companyModel._id, 'edit']\"\r\n    >\r\n      Edit\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"companyModel\" role=\"main\" class=\"container\">\r\n  <app-model-info-box [featureModel]=\"companyModel\"></app-model-info-box>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Composed Model {{ companyModel.name }}\r\n    </h6>\r\n    <app-feature-model [featureModel]=\"companyModel\"></app-feature-model>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Edit Composed Model</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-feature-model-form\r\n        [featureModel]=\"companyModel\"\r\n        (submitFeatureModelForm)=\"update($event.value)\"\r\n      ></app-feature-model-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Edit Author Information</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-author-form\r\n        [author]=\"companyModel.author\"\r\n        (submitAuthorForm)=\"updateAuthor($event.value)\"\r\n      ></app-author-form>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- List expert models -->\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Selected Canvas Building Blocks\r\n    </h6>\r\n\r\n    <ul\r\n      *ngIf=\"selectedExpertModelList\"\r\n      class=\"list-group inner\"\r\n      style=\"margin: 5px\"\r\n    >\r\n      <li\r\n        *ngFor=\"let em of selectedExpertModelList\"\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-center\r\n        \"\r\n      >\r\n        <span>{{ em.name }}</span>\r\n        <span>\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"mergeExpertModel(em._id)\"\r\n            class=\"btn btn-warning btn-xs\"\r\n          >\r\n            Merge</button\r\n          >&nbsp;\r\n          <button\r\n            (click)=\"viewExpertModel(em._id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-dark btn-xs\"\r\n          >\r\n            View</button\r\n          >&nbsp;\r\n          <button\r\n            (click)=\"unselectExpertModel(em._id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Unselect\r\n          </button>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- Select expert model -->\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Select Canvas Building Block\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"selectedExpertModelForm\"\r\n        (ngSubmit)=\"selectExpertModel()\"\r\n      >\r\n        <div class=\"form-group row\">\r\n          <label for=\"expertModelSelector\" class=\"col-sm-4 col-form-label\"\r\n            >Canvas Building Block</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <select\r\n              id=\"expertModelSelector\"\r\n              formControlName=\"expertModelId\"\r\n              class=\"form-control\"\r\n            >\r\n              <option\r\n                *ngFor=\"let em of unselectedExpertModelList\"\r\n                [value]=\"em._id\"\r\n              >\r\n                {{ em.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!selectedExpertModelForm.valid\"\r\n            >\r\n              Add Canvas Building Block\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  CompanyModel,\r\n  CompanyModelInit,\r\n} from '../../../canvas-meta-model/company-model';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { CanvasDefinition } from '../../../canvas-meta-model/canvas-definition';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ELEMENT_SERVICE, ListService } from '../../../shared/list.service';\r\nimport { ModelListComponent } from '../../feature-model/model-list/model-list.component';\r\nimport { ModelList } from '../../feature-model/model-list/model-list';\r\nimport { DbId } from '../../../database/database-entry';\r\n\r\n@Component({\r\n  selector: 'app-company-models',\r\n  templateUrl: './company-models.component.html',\r\n  styleUrls: ['./company-models.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: CompanyModelService },\r\n  ],\r\n})\r\nexport class CompanyModelsComponent {\r\n  modalCompanyModel: CompanyModel;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild(ModelListComponent) modelList: ModelList;\r\n  @ViewChild('deleteCompanyModelModal', { static: true })\r\n  deleteCompanyModelModal: unknown;\r\n\r\n  constructor(\r\n    private companyModelService: CompanyModelService,\r\n    private listService: ListService<CompanyModel, CompanyModelInit>,\r\n    private modalService: NgbModal,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async addCompanyModel(\r\n    definition: CanvasDefinition,\r\n    name: string,\r\n    description: string\r\n  ): Promise<void> {\r\n    await this.listService.add(\r\n      this.companyModelService.createFeatureModel(\r\n        { name, description, $definition: definition },\r\n        definition\r\n      )\r\n    );\r\n    this.modelList.resetAddForm();\r\n  }\r\n\r\n  async viewCompanyModel(companyModelId: DbId): Promise<void> {\r\n    await this.router.navigate(['/companyModels', companyModelId]);\r\n  }\r\n\r\n  async editCompanyModel(companyModelId: DbId): Promise<void> {\r\n    await this.router.navigate(['/companyModels', companyModelId, 'edit']);\r\n  }\r\n\r\n  async openDeleteCompanyModelModal(featureModelId: DbId): Promise<void> {\r\n    this.modalCompanyModel = await this.companyModelService.get(featureModelId);\r\n    this.modalReference = this.modalService.open(this.deleteCompanyModelModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async deleteCompanyModel(featureModelId: DbId): Promise<void> {\r\n    await this.listService.delete(featureModelId);\r\n  }\r\n}\r\n","<ng-template #deleteCompanyModelModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"deleteCompanyModel(modalCompanyModel._id); c()\"\r\n  >\r\n    <div modalTitle>Delete Composed Model {{ modalCompanyModel.name }}</div>\r\n    You are deleting the composed model {{ modalCompanyModel.name }}. This can\r\n    not be undone.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Composed Models</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\">\r\n    Composed Models are used to represent merged canvas building blocks.\r\n  </div>\r\n\r\n  <app-model-list\r\n    modelListTitle=\"Composed Models\"\r\n    modelFormTitle=\"Add Composed Model\"\r\n    (viewModel)=\"viewCompanyModel($event)\"\r\n    (editModel)=\"editCompanyModel($event)\"\r\n    (deleteModel)=\"openDeleteCompanyModelModal($event)\"\r\n    (addModel)=\"\r\n      addCompanyModel($event.definition, $event.name, $event.description)\r\n    \"\r\n  ></app-model-list>\r\n</main>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-canvas-elements',\r\n  templateUrl: './canvas-elements.component.html',\r\n  styleUrls: ['./canvas-elements.component.css'],\r\n})\r\nexport class CanvasElementsComponent {}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Canvas Elements</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\">\r\n    All canvas elements, except for domains, are directly defined while creating\r\n    canvas building blocks.\r\n  </div>\r\n\r\n  <app-list-wrapper listTitle=\"Canvas Elements\">\r\n    <div results class=\"list-group\">\r\n      <a\r\n        class=\"list-group-item list-group-item-action d-flex\"\r\n        [routerLink]=\"['/', 'domains']\"\r\n      >\r\n        <div>Domains</div>\r\n        <div class=\"ml-auto\">\r\n          <div class=\"btn btn-dark btn-xs\">View</div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  </app-list-wrapper>\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport { ExpertModelService } from '../../../canvas-meta-model/expert-model.service';\r\nimport { ExpertModelLoaderService } from '../expert-model-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-expert-model-edit',\r\n  templateUrl: './expert-model-edit.component.html',\r\n  styleUrls: ['./expert-model-edit.component.css'],\r\n  providers: [ExpertModelLoaderService],\r\n})\r\nexport class ExpertModelEditComponent {\r\n  constructor(\r\n    private expertModelLoaderService: ExpertModelLoaderService,\r\n    private expertModelService: ExpertModelService\r\n  ) {}\r\n\r\n  async updateExpertModel() {\r\n    await this.expertModelService.save(this.expertModel);\r\n  }\r\n\r\n  get expertModel() {\r\n    return this.expertModelLoaderService.expertModel;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'expertModels']\">\r\n      Canvas Building Blocks\r\n    </a>\r\n    <a\r\n      *ngIf=\"expertModel\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'expertModels', expertModel._id]\"\r\n    >\r\n      {{ expertModel.name }}\r\n    </a>\r\n    <a *ngIf=\"expertModel\" class=\"nav-link active\" [routerLink]=\"[]\">Edit</a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"expertModel\" role=\"main\" class=\"container\">\r\n  <app-feature-model-edit\r\n    [featureModel]=\"expertModel\"\r\n    (updateFeatureModel)=\"updateExpertModel()\"\r\n  ></app-feature-model-edit>\r\n</main>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { ExpertModel } from '../../canvas-meta-model/expert-model';\r\nimport { ExpertModelService } from '../../canvas-meta-model/expert-model.service';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\n\r\n@Injectable()\r\nexport class ExpertModelLoaderService extends ElementLoaderService {\r\n  expertModel: ExpertModel = null;\r\n\r\n  constructor(\r\n    private expertModelService: ExpertModelService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const expertModelId = paramMap.get('id');\r\n    this.changesFeed = this.expertModelService\r\n      .getChangesFeed(expertModelId)\r\n      .subscribe(() => this.loadExpertModel(expertModelId));\r\n    void this.loadExpertModel(expertModelId);\r\n  }\r\n\r\n  private async loadExpertModel(bmProcessId: string): Promise<void> {\r\n    this.expertModel = await this.expertModelService.get(bmProcessId);\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ExpertModelService } from '../../../canvas-meta-model/expert-model.service';\r\nimport { ImportExportService } from '../../feature-model/import-export.service';\r\nimport { Instance, InstanceType } from '../../../canvas-meta-model/instance';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Domain } from '../../../development-process-registry/knowledge/domain';\r\nimport { ExpertModelLoaderService } from '../expert-model-loader.service';\r\nimport { ExpertModel } from '../../../canvas-meta-model/expert-model';\r\n\r\n@Component({\r\n  selector: 'app-expert-model',\r\n  templateUrl: './expert-model.component.html',\r\n  styleUrls: ['./expert-model.component.css'],\r\n  providers: [ExpertModelLoaderService],\r\n})\r\nexport class ExpertModelComponent {\r\n  constructor(\r\n    private expertModelLoaderService: ExpertModelLoaderService,\r\n    private expertModelService: ExpertModelService,\r\n    private importExportService: ImportExportService\r\n  ) {}\r\n\r\n  async exportModel(): Promise<void> {\r\n    await this.importExportService.exportExpertModel(this.expertModel._id);\r\n  }\r\n\r\n  async update(description: any): Promise<void> {\r\n    await this.expertModelService.update(this.expertModel._id, description);\r\n  }\r\n\r\n  async updateDomains(domains: Domain[]): Promise<void> {\r\n    await this.expertModelService.updateDomains(this.expertModel._id, domains);\r\n  }\r\n\r\n  async updateFeatureModelAuthor(authorInfo: any): Promise<void> {\r\n    await this.expertModelService.updateAuthor(\r\n      this.expertModel._id,\r\n      authorInfo\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add a new instance.\r\n   */\r\n  async addInstance(\r\n    instanceForm: FormGroup,\r\n    type = InstanceType.EXAMPLE\r\n  ): Promise<void> {\r\n    await this.expertModelService.addInstance(this.expertModel._id, {\r\n      name: instanceForm.value.name,\r\n      type,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Navigate to a single business model.\r\n   *\r\n   * @param instance the pattern instance\r\n   * @return the navigation link\r\n   */\r\n  viewExample = (instance: Instance): string[] => {\r\n    return [\r\n      '/',\r\n      'expertModels',\r\n      this.expertModel._id,\r\n      'examples',\r\n      instance.id.toString(),\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * Navigate to a component to view the pattern\r\n   *\r\n   * @param instance the pattern instance\r\n   * @return the navigation link\r\n   */\r\n  viewPattern = (instance: Instance): string[] => {\r\n    return [\r\n      '/',\r\n      'expertModels',\r\n      this.expertModel._id,\r\n      'patterns',\r\n      instance.id.toString(),\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * Delete an instance by id.\r\n   *\r\n   * @param instanceId id of the instance\r\n   */\r\n  async deleteInstance(instanceId: number): Promise<void> {\r\n    await this.expertModelService.removeInstance(\r\n      this.expertModel._id,\r\n      instanceId\r\n    );\r\n  }\r\n\r\n  getExampleInstances(): Instance[] {\r\n    return this.expertModel.instances.filter(\r\n      (instance) => instance.type === InstanceType.EXAMPLE\r\n    );\r\n  }\r\n\r\n  getPatternInstances(): Instance[] {\r\n    return this.expertModel.instances.filter(\r\n      (instance) => instance.type === InstanceType.PATTERN\r\n    );\r\n  }\r\n\r\n  getPatternInstanceType(): InstanceType {\r\n    return InstanceType.PATTERN;\r\n  }\r\n\r\n  get expertModel(): ExpertModel {\r\n    return this.expertModelLoaderService.expertModel;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'expertModels']\">\r\n      Canvas Building Blocks\r\n    </a>\r\n    <a *ngIf=\"expertModel\" class=\"nav-link active\" [routerLink]=\"[]\">\r\n      {{ expertModel.name }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"expertModel\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'expertModels', expertModel._id, 'edit']\"\r\n    >\r\n      Edit\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"expertModel\" role=\"main\" class=\"container\">\r\n  <app-model-info-box [featureModel]=\"expertModel\"></app-model-info-box>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Canvas Building Block {{ expertModel.name }}\r\n    </h6>\r\n    <app-feature-model [featureModel]=\"expertModel\"></app-feature-model>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Export Canvas Building Block\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              (click)=\"exportModel()\"\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n            >\r\n              Export Canvas Building Block\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Steps</h6>\r\n    <ul ngbNav #nav=\"ngbNav\" class=\"nav-pills nav-justified\">\r\n      <li ngbNavItem=\"stepDescribe\" #stepDescribe=\"ngbNavItem\">\r\n        <a ngbNavLink>1. Describe</a>\r\n        <ng-template ngbNavContent>\r\n          Describe the canvas building block\r\n        </ng-template>\r\n      </li>\r\n      <li ngbNavItem=\"stepEdit\" #stepEdit=\"ngbNavItem\">\r\n        <a ngbNavLink>2. Edit</a>\r\n        <ng-template ngbNavContent>\r\n          Edit the canvas building block\r\n        </ng-template>\r\n      </li>\r\n      <li ngbNavItem=\"stepCreateInstances\">\r\n        <a ngbNavLink>3. Create Patterns and Examples</a>\r\n        <ng-template ngbNavContent>\r\n          <p>\r\n            Create business model patterns and example instances of this canvas\r\n            building block.\r\n          </p>\r\n          <p class=\"mb-0\">\r\n            Business model patterns will be used to give users hints about\r\n            possible patterns and will be shown to the user if used in their\r\n            business model. Users can use examples to compare them with their\r\n            own business model.\r\n          </p>\r\n        </ng-template>\r\n      </li>\r\n    </ul>\r\n    <div class=\"mt-1\" [ngbNavOutlet]=\"nav\"></div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"stepDescribe.active\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Domains</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-domains-selection-form\r\n        [domains]=\"expertModel.domains\"\r\n        (submitDomainsForm)=\"updateDomains($event.value)\"\r\n      ></app-domains-selection-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"stepDescribe.active\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Edit Canvas Building Block\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-feature-model-form\r\n        [featureModel]=\"expertModel\"\r\n        (submitFeatureModelForm)=\"update($event.value)\"\r\n      ></app-feature-model-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"stepDescribe.active\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Edit Author Information</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-author-form\r\n        [author]=\"expertModel.author\"\r\n        (submitAuthorForm)=\"updateFeatureModelAuthor($event.value)\"\r\n      ></app-author-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"stepEdit.active\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Edit canvas building block\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <button\r\n        type=\"button\"\r\n        [routerLink]=\"['/expertModels', expertModel._id, 'edit']\"\r\n        class=\"btn btn-sm btn-dark btn-lg btn-block\"\r\n      >\r\n        Edit Canvas Building Block\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <app-instance-list\r\n    *ngIf=\"nav.activeId === 'stepCreateInstances'\"\r\n    formTitle=\"Add Pattern Instance\"\r\n    listTitle=\"Pattern Instances\"\r\n    [instances]=\"getPatternInstances()\"\r\n    [viewInstanceLink]=\"viewPattern\"\r\n    (addInstance)=\"addInstance($event, getPatternInstanceType())\"\r\n    (deleteInstance)=\"deleteInstance($event)\"\r\n  ></app-instance-list>\r\n\r\n  <app-instance-list\r\n    *ngIf=\"nav.activeId === 'stepCreateInstances'\"\r\n    formTitle=\"Add Example Instance\"\r\n    listTitle=\"Example Instances\"\r\n    [instances]=\"getExampleInstances()\"\r\n    [viewInstanceLink]=\"viewExample\"\r\n    (addInstance)=\"addInstance($event)\"\r\n    (deleteInstance)=\"deleteInstance($event)\"\r\n  ></app-instance-list>\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { ExpertModelService } from '../../../canvas-meta-model/expert-model.service';\r\nimport {\r\n  ExpertModel,\r\n  ExpertModelInit,\r\n} from '../../../canvas-meta-model/expert-model';\r\nimport { Router } from '@angular/router';\r\nimport { CanvasDefinition } from '../../../canvas-meta-model/canvas-definition';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ELEMENT_SERVICE, ListService } from '../../../shared/list.service';\r\nimport { ModelListComponent } from '../../feature-model/model-list/model-list.component';\r\nimport { ModelList } from '../../feature-model/model-list/model-list';\r\n\r\n@Component({\r\n  selector: 'app-expert-models',\r\n  templateUrl: './expert-models.component.html',\r\n  styleUrls: ['./expert-models.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: ExpertModelService },\r\n  ],\r\n})\r\nexport class ExpertModelsComponent {\r\n  modalExpertModel: ExpertModel;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild(ModelListComponent) modelList: ModelList;\r\n  @ViewChild('deleteExpertModelModal', { static: true })\r\n  deleteExpertModelModal: unknown;\r\n\r\n  constructor(\r\n    private expertModelService: ExpertModelService,\r\n    private listService: ListService<ExpertModel, ExpertModelInit>,\r\n    private modalService: NgbModal,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async addExpertModel(\r\n    definition: CanvasDefinition,\r\n    name: string,\r\n    description: string\r\n  ): Promise<void> {\r\n    const expertModel = await this.expertModelService.createFeatureModel(\r\n      { name, description, $definition: definition },\r\n      definition\r\n    );\r\n    await this.listService.add(expertModel);\r\n    this.modelList.resetAddForm();\r\n  }\r\n\r\n  async viewExpertModel(expertModelId: string): Promise<void> {\r\n    await this.router.navigate(['/expertModels', expertModelId]);\r\n  }\r\n\r\n  async editExpertModel(expertModelId: string): Promise<void> {\r\n    await this.router.navigate(['/expertModels', expertModelId, 'edit']);\r\n  }\r\n\r\n  async openDeleteExpertModelModal(featureModelId: string): Promise<void> {\r\n    this.modalExpertModel = await this.expertModelService.get(featureModelId);\r\n    this.modalReference = this.modalService.open(this.deleteExpertModelModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async reload(): Promise<void> {\r\n    await this.listService.load();\r\n  }\r\n\r\n  async deleteExpertModel(featureModelId: string): Promise<void> {\r\n    await this.listService.delete(featureModelId);\r\n  }\r\n}\r\n","<ng-template #deleteExpertModelModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"deleteExpertModel(modalExpertModel._id); c()\"\r\n  >\r\n    <div modalTitle>\r\n      Delete Canvas Building Block {{ modalExpertModel.name }}\r\n    </div>\r\n    You are deleting the canvas building block {{ modalExpertModel.name }}. This\r\n    can not be undone.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Canvas Building Blocks</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\">\r\n    Canvas building blocks are used to represent the knowledge of experts about\r\n    a certain domain.\r\n  </div>\r\n\r\n  <app-model-list\r\n    class=\"expert-model-list\"\r\n    modelListTitle=\"Canvas Building Blocks\"\r\n    modelFormTitle=\"Add Canvas Building Block\"\r\n    (viewModel)=\"viewExpertModel($event)\"\r\n    (editModel)=\"editExpertModel($event)\"\r\n    (deleteModel)=\"openDeleteExpertModelModal($event)\"\r\n    (addModel)=\"\r\n      addExpertModel($event.definition, $event.name, $event.description)\r\n    \"\r\n  ></app-model-list>\r\n\r\n  <app-model-import-view\r\n    formTitle=\"Import Canvas Building Block\"\r\n    [importExpertModel]=\"true\"\r\n    (imported)=\"reload()\"\r\n  ></app-model-import-view>\r\n</main>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\n\r\n@Component({\r\n  selector: 'app-delete-feature-confirm',\r\n  templateUrl: './delete-feature-confirm.component.html',\r\n  styleUrls: ['./delete-feature-confirm.component.css'],\r\n})\r\nexport class DeleteFeatureConfirmComponent {\r\n  @Input() feature: Feature;\r\n\r\n  @Output() closeModal = new EventEmitter();\r\n  @Output() deletionResult = new EventEmitter<string>();\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-basic-title\">{{ feature.name }}</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close\"\r\n    aria-label=\"Close\"\r\n    (click)=\"closeModal.emit()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n      You are trying to remove the feature \"{{ feature.name }}\". Please keep in\r\n      mind that you are removing also all subfeatures together with the\r\n      corresponding dependencies.\r\n    </p>\r\n    <p>Moreover, the feature is also removed from all business canvases.</p>\r\n    <p>\r\n      Additionally all traces to canvas building blocks of this feature will be\r\n      deleted.\r\n    </p>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn btn-block btn-warning\"\r\n    (click)=\"deletionResult.emit(feature.id)\"\r\n  >\r\n    Delete Feature\r\n  </button>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\n\r\n@Component({\r\n  selector: 'app-feature-building-block',\r\n  templateUrl: './feature-building-block.component.html',\r\n  styleUrls: ['./feature-building-block.component.css'],\r\n})\r\n/**\r\n * Internal class to display single features of the feature canvas.\r\n *\r\n * @author: Sebastian Gottschalk\r\n */\r\nexport class FeatureBuildingBlockComponent {\r\n  @Input() buildingBlockName: string;\r\n  @Input() features: Feature[];\r\n}\r\n","<strong>{{ buildingBlockName }}</strong>\r\n<div class=\"list-group\">\r\n  <a\r\n    *ngFor=\"let f of features\"\r\n    class=\"list-group-item list-group-item-action p-2\"\r\n  >\r\n    <ng-container *ngIf=\"f.type === 'mandatory'\">\r\n      <i class=\"fa fa-circle mr-1\" aria-hidden=\"true\" title=\"mandatory\"></i>\r\n      <span class=\"sr-only\">mandatory</span>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"f.type === 'optional'\">\r\n      <i class=\"fa fa-circle-o mr-1\" aria-hidden=\"true\" title=\"optional\"></i>\r\n      <span class=\"sr-only\">optional</span>\r\n    </ng-container>\r\n    {{ f.name }}\r\n  </a>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\n\r\n@Component({\r\n  selector: 'app-feature-form',\r\n  templateUrl: './feature-form.component.html',\r\n  styleUrls: ['./feature-form.component.css'],\r\n})\r\nexport class FeatureFormComponent implements OnInit, OnChanges {\r\n  @Input() feature: Feature = null;\r\n  @Input() featureList: { id: string; levelname: string }[];\r\n  @Input() disabledSubfeatures: string[] = [];\r\n  @Input() enabledSubfeatures: string[] = null;\r\n  @Input() submitButtonText = 'Update Feature';\r\n\r\n  @Output() submitFeatureForm = new EventEmitter<FormGroup>();\r\n\r\n  featureForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.feature === null) {\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.feature) {\r\n      this.loadForm(changes.feature.currentValue);\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitFeatureForm.emit(this.featureForm);\r\n    this.loadForm();\r\n  }\r\n\r\n  private loadForm(feature: Feature = null): void {\r\n    if (feature === null) {\r\n      if (this.featureList.length > 0) {\r\n        feature = new Feature(\r\n          undefined,\r\n          { name: '' },\r\n          undefined,\r\n          new Feature(\r\n            undefined,\r\n            { name: '' },\r\n            this.featureList[0].id,\r\n            undefined\r\n          )\r\n        );\r\n      } else {\r\n        feature = new Feature(undefined, { name: '' }, undefined, undefined);\r\n      }\r\n    }\r\n    this.featureForm = this.fb.group({\r\n      name: [feature.name, Validators.required],\r\n      description: feature.description,\r\n      type: feature.type,\r\n      subfeatureConnections: feature.subfeatureConnections,\r\n      subfeatureOf: feature.parent ? feature.parent.id : null,\r\n    });\r\n    if (Object.keys(feature.expertModelTrace).length > 0) {\r\n      this.featureForm.get('subfeatureOf').disable();\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"featureForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Feature Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        [readonly]=\"feature && feature.parent === null\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label for=\"description\" class=\"col-sm-4 col-form-label\"\r\n      >Feature Description</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        [readonly]=\"feature && feature.parent === null\"\r\n        formControlName=\"description\"\r\n        class=\"form-control\"\r\n        id=\"description\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"!feature || feature.parent !== null\" class=\"form-group row\">\r\n    <label for=\"subfeatureOf\" class=\"col-sm-4 col-form-label\"\r\n      >Subfeature of</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <select\r\n        id=\"subfeatureOf\"\r\n        formControlName=\"subfeatureOf\"\r\n        class=\"form-control\"\r\n      >\r\n        <option\r\n          *ngFor=\"let fl of featureList\"\r\n          [disabled]=\"\r\n            disabledSubfeatures.includes(fl.id) ||\r\n            (enabledSubfeatures && !enabledSubfeatures.includes(fl.id))\r\n          \"\r\n          [ngValue]=\"fl.id\"\r\n        >\r\n          {{ fl.levelname }}\r\n        </option>\r\n      </select>\r\n      <div class=\"mt-1\" *ngIf=\"featureForm.get('subfeatureOf').disabled\">\r\n        Disabled, because this feature has a trace to a canvas building block\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label for=\"type\" class=\"col-sm-4 col-form-label\">Mandatory Feature</label>\r\n    <div class=\"col-sm-8\">\r\n      <select id=\"type\" formControlName=\"type\" class=\"form-control\">\r\n        <option [ngValue]=\"'mandatory'\">Yes</option>\r\n        <option [ngValue]=\"'optional'\">No</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label for=\"subfeatureConnections\" class=\"col-sm-4 col-form-label\"\r\n      >Subfeature Connections</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <select\r\n        id=\"subfeatureConnections\"\r\n        formControlName=\"subfeatureConnections\"\r\n        class=\"form-control\"\r\n      >\r\n        <option [ngValue]=\"null\">None</option>\r\n        <option [ngValue]=\"'xor'\">XOR</option>\r\n        <option [ngValue]=\"'or'\">OR</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-dark btn-block\"\r\n        [disabled]=\"!featureForm.valid\"\r\n      >\r\n        {{ submitButtonText }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { RelationshipType } from '../../../canvas-meta-model/relationships';\r\nimport { CanvasModelConsistencyService } from '../../../canvas-meta-model/canvas-model-consistency.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-model-edit',\r\n  templateUrl: './feature-model-edit.component.html',\r\n  styleUrls: ['./feature-model-edit.component.css'],\r\n})\r\n/**\r\n * The FeatureModelDetailComponent shows the feature model and allow the adding/updating/deleting of features and dependencies.\r\n *\r\n * @author: Sebastian Gottschalk\r\n */\r\nexport class FeatureModelEditComponent implements OnChanges {\r\n  @Input() featureModel: FeatureModel;\r\n  @Output() updateFeatureModel = new EventEmitter<void>();\r\n\r\n  // Variables for the feature model representation\r\n  featureList: { id: string; levelname: string }[] = [];\r\n  // Variables for the modal representation\r\n  modalFeature: Feature;\r\n  modalReference: NgbModalRef;\r\n  modalSubfeatureIds: string[];\r\n  // References for modal children\r\n  @ViewChild('dependencyModal', { static: true }) dependencyModal: any;\r\n  @ViewChild('updateModal', { static: true }) updateModal: any;\r\n  @ViewChild('deleteModal', { static: true }) deleteModal: any;\r\n\r\n  // Instantiation check\r\n  problems: string[] = null;\r\n  problemFeatureIds: string[] = null;\r\n  possibleInstance: Instance = null;\r\n\r\n  // Supports / Hurts check\r\n  supportsHurtsProblems: string[] = null;\r\n  supportsHurtsProblemFeatureIds: string[] = null;\r\n\r\n  /**\r\n   * Creates a new instance of the FeatureModelDetailComponent.\r\n   *\r\n   * @param canvasModelConsistencyService the consistency service for the canvas model\r\n   * @param fb FormBuilder\r\n   * @param modalService NgbModal\r\n   */\r\n  constructor(\r\n    private canvasModelConsistencyService: CanvasModelConsistencyService,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.featureModel) {\r\n      if (changes.featureModel.currentValue != null) {\r\n        if (this.modalFeature) {\r\n          this.modalFeature = this.featureModel.getFeature(\r\n            this.modalFeature.id\r\n          );\r\n        }\r\n        this.featureList = this.featureModel.getFeatureList();\r\n        if (this.problems !== null) {\r\n          this.checkInstantiationPossible();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the dependency modal of the current feature.\r\n   *\r\n   * @param featureId id of the current feature\r\n   */\r\n  openDependenciesModal(featureId) {\r\n    this.modalFeature = this.featureModel.getFeature(featureId);\r\n    this.modalReference = this.modalService.open(this.dependencyModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Opens the update modal of the current feature.\r\n   *\r\n   * @param featureId id of the current feature\r\n   */\r\n  updateFeatureModal(featureId) {\r\n    const feature = this.featureModel.getFeature(featureId);\r\n    this.modalFeature = feature;\r\n    this.modalSubfeatureIds = feature.getAllSubfeatures().map((f) => f.id);\r\n    this.modalSubfeatureIds.push(feature.id);\r\n    this.modalReference = this.modalService.open(this.updateModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Opens the modal of the current feature.\r\n   *\r\n   * @param featureId id of the current feature\r\n   */\r\n  deleteFeatureModal(featureId) {\r\n    this.modalFeature = this.featureModel.getFeature(featureId);\r\n    this.modalReference = this.modalService.open(this.deleteModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Closes the current modal.\r\n   */\r\n  closeModal() {\r\n    this.modalReference.close();\r\n    this.modalFeature = null;\r\n  }\r\n\r\n  /**\r\n   * Delete the relationship between two features.\r\n   *\r\n   * @param relationshipType type of the relationship\r\n   * @param fromFeatureId id of the first feature\r\n   * @param toFeatureId id of the second feature\r\n   */\r\n  removeRelationship(\r\n    relationshipType: RelationshipType,\r\n    fromFeatureId: string,\r\n    toFeatureId: string\r\n  ): void {\r\n    this.featureModel.removeRelationship(\r\n      relationshipType,\r\n      fromFeatureId,\r\n      toFeatureId\r\n    );\r\n    this.updateFeatureModel.emit();\r\n  }\r\n\r\n  /**\r\n   * Update the current feature.\r\n   */\r\n  updateFeature(featureForm: FormGroup) {\r\n    this.featureModel.updateFeature(\r\n      this.modalFeature.id,\r\n      featureForm.get('subfeatureOf').value,\r\n      featureForm.value\r\n    );\r\n    this.updateFeatureModel.emit();\r\n    this.closeModal();\r\n  }\r\n\r\n  /**\r\n   * Delete the current feature.\r\n   *\r\n   * @param featureId id of the current feature\r\n   */\r\n  deleteFeature(featureId) {\r\n    this.featureModel.removeFeature(featureId);\r\n    this.updateFeatureModel.emit();\r\n    this.closeModal();\r\n  }\r\n\r\n  /**\r\n   * Insert a new feature.\r\n   */\r\n  insertFeature(featureForm: FormGroup): void {\r\n    this.featureModel.addFeature(\r\n      featureForm.value,\r\n      featureForm.get('subfeatureOf').value\r\n    );\r\n    this.updateFeatureModel.emit();\r\n  }\r\n\r\n  /**\r\n   * Add a new relationship.\r\n   */\r\n  addRelationship(relationshipForm: FormGroup): void {\r\n    this.featureModel.addRelationship(\r\n      relationshipForm.value.relationshipType,\r\n      relationshipForm.value.fromFeatureId,\r\n      relationshipForm.value.toFeatureId\r\n    );\r\n    this.updateFeatureModel.emit();\r\n  }\r\n\r\n  checkInstantiationPossible() {\r\n    const result = this.canvasModelConsistencyService.instanceIsPossible(\r\n      this.featureModel\r\n    );\r\n    this.problems = result.problems;\r\n    this.problemFeatureIds = result.problemFeatureIds;\r\n    this.possibleInstance = result.possibleInstance;\r\n    const supportsHurtsResult =\r\n      this.canvasModelConsistencyService.checkHurtsSupports(this.featureModel);\r\n    this.supportsHurtsProblems = supportsHurtsResult.problems;\r\n    this.supportsHurtsProblemFeatureIds = supportsHurtsResult.problemFeatureIds;\r\n  }\r\n\r\n  deactivateInstantiationCheck() {\r\n    this.problems = null;\r\n    this.problemFeatureIds = null;\r\n    this.possibleInstance = null;\r\n    this.supportsHurtsProblems = null;\r\n    this.supportsHurtsProblemFeatureIds = null;\r\n  }\r\n}\r\n","<ng-template #deleteModal>\r\n  <app-delete-feature-confirm\r\n    [feature]=\"modalFeature\"\r\n    (deletionResult)=\"deleteFeature($event)\"\r\n    (closeModal)=\"closeModal()\"\r\n  ></app-delete-feature-confirm>\r\n</ng-template>\r\n\r\n<ng-template #dependencyModal>\r\n  <app-cross-tree-relationship-modal\r\n    [featureModel]=\"featureModel\"\r\n    [feature]=\"modalFeature\"\r\n    (closeModal)=\"closeModal()\"\r\n    (removeRelationship)=\"\r\n      removeRelationship($event.type, $event.fromFeatureId, $event.toFeatureId)\r\n    \"\r\n  ></app-cross-tree-relationship-modal>\r\n</ng-template>\r\n\r\n<ng-template #updateModal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">{{ modalFeature.name }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"closeModal()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"text-muted pt-3\">\r\n      <app-feature-form\r\n        [feature]=\"modalFeature\"\r\n        [disabledSubfeatures]=\"modalSubfeatureIds\"\r\n        [featureList]=\"featureList\"\r\n        (submitFeatureForm)=\"updateFeature($event)\"\r\n      ></app-feature-form>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"my-3 alert alert-info container\" role=\"alert\">\r\n  <p>View and edit the feature tree. You can:</p>\r\n  <ul>\r\n    <li>\r\n      at the bottom of the page\r\n      <ul>\r\n        <li>Check for problems (e.g. inconsistencies)</li>\r\n        <li>Add new features</li>\r\n        <li>Add Cross-Tree Relationships</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      in the feature tree\r\n      <ul>\r\n        <li>List and remove Cross-Tree Relationships</li>\r\n        <li>\r\n          Update features (e.g. change name/description, Tree relationship (XOR,\r\n          OR), &hellip;)\r\n        </li>\r\n        <li>Remove features</li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<!-- List of Features -->\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">Feature tree</h6>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <app-feature-tree\r\n        *ngIf=\"featureModel && featureModel.features\"\r\n        (openDependenciesEmitter)=\"openDependenciesModal($event)\"\r\n        (updateFeatureEmitter)=\"updateFeatureModal($event)\"\r\n        (deleteFeatureEmitter)=\"deleteFeatureModal($event)\"\r\n        [features]=\"featureModel.features\"\r\n        [problemFeatureIds]=\"problemFeatureIds\"\r\n        [supportsHurtsProblemFeatureIds]=\"supportsHurtsProblemFeatureIds\"\r\n      >\r\n      </app-feature-tree>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-4\"><strong>Legend:</strong></div>\r\n    <div class=\"col-4\">\r\n      <i class=\"fa fa-circle\" aria-hidden=\"true\"></i\r\n      ><span class=\"sr-only\">mandatory</span>\r\n      Mandatory Feature\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <i class=\"fa fa-circle-o\" aria-hidden=\"true\"></i\r\n      ><span class=\"sr-only\">optional</span>\r\n      Optional Feature\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-4\">&nbsp;</div>\r\n    <div class=\"col-4\">\r\n      <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i\r\n      ><span class=\"sr-only\">xor subfeatures</span>\r\n      Alternative (Xor)\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <i class=\"fa fa-caret-up\" aria-hidden=\"true\"></i\r\n      ><span class=\"sr-only\">or subfeatures</span>\r\n      Or\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" *ngIf=\"problems\">\r\n    <div class=\"col-4\">&nbsp;</div>\r\n    <div class=\"col-4\">\r\n      <span class=\"text-warning\">Supports/Hurts error (see below)</span>\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <span class=\"text-danger\">Instantiation errors (see below)</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">Check for problems</h6>\r\n  <div class=\"pt-3\">\r\n    <div>\r\n      <button\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        *ngIf=\"!problems\"\r\n        (click)=\"checkInstantiationPossible()\"\r\n      >\r\n        Activate check\r\n      </button>\r\n      <button\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        *ngIf=\"problems\"\r\n        (click)=\"deactivateInstantiationCheck()\"\r\n      >\r\n        Deactivate check\r\n      </button>\r\n    </div>\r\n    <div class=\"mt-4\" *ngIf=\"problems\">\r\n      <!-- TODO: maybe rename -->\r\n      <h6>Instantiation problems:</h6>\r\n      <p *ngIf=\"problems.length === 0\">No problems detected.</p>\r\n      <ul *ngIf=\"problems.length > 0\">\r\n        <li *ngFor=\"let problem of problems\">\r\n          {{ problem }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"mt-4\" *ngIf=\"supportsHurtsProblems\">\r\n      <h6>Supports/Hurts problems:</h6>\r\n      <p *ngIf=\"supportsHurtsProblems.length === 0\">No problems detected.</p>\r\n      <ul *ngIf=\"supportsHurtsProblems.length > 0\">\r\n        <li *ngFor=\"let problem of supportsHurtsProblems\">\r\n          {{ problem }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Add a Feature-->\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">Add Feature</h6>\r\n  <div class=\"text-muted pt-3\">\r\n    <app-feature-form\r\n      submitButtonText=\"Add Feature\"\r\n      [featureList]=\"featureList\"\r\n      (submitFeatureForm)=\"insertFeature($event)\"\r\n    ></app-feature-form>\r\n  </div>\r\n</div>\r\n\r\n<!-- Add a Relationship-->\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n    Add Cross-Tree Relationship\r\n  </h6>\r\n  <div class=\"text-muted pt-3\">\r\n    <app-cross-tree-relationship-form\r\n      [featureList]=\"featureList\"\r\n      [relationshipTypes]=\"featureModel.definition.relationshipTypes\"\r\n      (submitRelationshipForm)=\"addRelationship($event)\"\r\n    ></app-cross-tree-relationship-form>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\ninterface FeatureModelFormValues {\r\n  name: string;\r\n  description: string;\r\n  version?: string;\r\n  copyright: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-feature-model-form',\r\n  templateUrl: './feature-model-form.component.html',\r\n  styleUrls: ['./feature-model-form.component.css'],\r\n})\r\nexport class FeatureModelFormComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() featureModel: FeatureModel = null;\r\n\r\n  @Output() submitFeatureModelForm = new EventEmitter<FormGroup>();\r\n\r\n  featureModelForm: FormGroup = this.fb.group({\r\n    name: ['', Validators.required],\r\n    description: '',\r\n    version: '',\r\n    copyright: '',\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.changeSubscription = this.featureModelForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed =\r\n              this.featureModel != null &&\r\n              !this.equals(this.featureModel, value))\r\n        )\r\n      )\r\n      .subscribe();\r\n    if (this.featureModel === null) {\r\n      this.loadForm();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.featureModel) {\r\n      const oldFeatureModel: FeatureModel = changes.featureModel.previousValue;\r\n      const newFeatureModel: FeatureModel = changes.featureModel.currentValue;\r\n      if (!this.equals(oldFeatureModel, newFeatureModel)) {\r\n        this.loadForm(newFeatureModel);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitFeatureModelForm.emit(this.featureModelForm);\r\n    this.loadForm();\r\n  }\r\n\r\n  private equals(\r\n    featureModelA: FeatureModelFormValues,\r\n    featureModelB: FeatureModelFormValues\r\n  ): boolean {\r\n    if (featureModelA == null && featureModelB == null) {\r\n      return true;\r\n    }\r\n    if (featureModelA == null || featureModelB == null) {\r\n      return false;\r\n    }\r\n    if (\r\n      featureModelA.name !== featureModelB.name ||\r\n      featureModelA.description !== featureModelB.description ||\r\n      featureModelA.copyright !== featureModelB.copyright\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      featureModelA.version === undefined ||\r\n      featureModelB.version === undefined\r\n    ) {\r\n      return true;\r\n    }\r\n    return featureModelA.version === featureModelB.version;\r\n  }\r\n\r\n  private loadForm(featureModel: FeatureModel = undefined): void {\r\n    if (featureModel == null) {\r\n      this.featureModelForm.reset();\r\n    } else {\r\n      this.featureModelForm.patchValue(featureModel);\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"featureModelForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"description\" class=\"col-sm-4 col-form-label\">Description</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"description\"\r\n        class=\"form-control\"\r\n        id=\"description\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\" *ngIf=\"featureModel.hasOwnProperty('version')\">\r\n    <label for=\"version\" class=\"col-sm-4 col-form-label\">Version</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"version\"\r\n        class=\"form-control\"\r\n        id=\"version\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"copyright\" class=\"col-sm-4 col-form-label\">Copyright</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"copyright\"\r\n        class=\"form-control\"\r\n        id=\"copyright\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!featureModelForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport { ControlContainer, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-feature-model-subform',\r\n  templateUrl: './feature-model-subform.component.html',\r\n  styleUrls: ['./feature-model-subform.component.css'],\r\n})\r\nexport class FeatureModelSubformComponent {\r\n  constructor(private controlContainer: ControlContainer) {}\r\n\r\n  get formGroup() {\r\n    return this.controlContainer.control as FormGroup;\r\n  }\r\n\r\n  get nameControl() {\r\n    return this.formGroup.get('name');\r\n  }\r\n}\r\n","<ng-container [formGroup]=\"formGroup\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        [class.is-invalid]=\"nameControl.invalid\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"description\" class=\"col-sm-4 col-form-label\">\r\n      Description\r\n    </label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"description\"\r\n        class=\"form-control\"\r\n        id=\"description\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"copyright\" class=\"col-sm-4 col-form-label\">Copyright</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"copyright\"\r\n        class=\"form-control\"\r\n        id=\"copyright\"\r\n      />\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\n\r\n@Component({\r\n  selector: 'app-feature-model',\r\n  templateUrl: './feature-model.component.html',\r\n  styleUrls: ['./feature-model.component.css'],\r\n})\r\nexport class FeatureModelComponent {\r\n  @Input() featureModel: FeatureModel;\r\n\r\n  asList(features: { [id: string]: Feature }): Feature[] {\r\n    return Object.values(features);\r\n  }\r\n}\r\n","<div *ngIf=\"featureModel\">\r\n  <table *ngIf=\"featureModel\" class=\"table table-bordered canvas-table\">\r\n    <tbody>\r\n      <tr *ngFor=\"let row of featureModel.definition.rows\">\r\n        <ng-container *ngFor=\"let cell of row\">\r\n          <td\r\n            class=\"canvas-table-cell\"\r\n            *ngIf=\"!cell.isSpacer\"\r\n            [colSpan]=\"cell.colspan\"\r\n            [rowSpan]=\"cell.rowspan\"\r\n          >\r\n            <div class=\"canvas-table-block\">\r\n              <app-feature-building-block\r\n                [buildingBlockName]=\"cell.name\"\r\n                [features]=\"asList(featureModel.features[cell.id].subfeatures)\"\r\n              ></app-feature-building-block>\r\n            </div>\r\n          </td>\r\n          <td\r\n            *ngIf=\"cell.isSpacer\"\r\n            [colSpan]=\"cell.colspan\"\r\n            [rowSpan]=\"cell.rowspan\"\r\n          ></td>\r\n        </ng-container>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-4\"><strong>Legend:</strong></div>\r\n    <div class=\"col-4\"><i class=\"fa fa-circle\"></i> Mandatory Feature</div>\r\n    <div class=\"col-4\"><i class=\"fa fa-circle-o\"></i> Optional Feature</div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\n\r\n@Component({\r\n  selector: 'app-feature-tree',\r\n  templateUrl: './feature-tree.component.html',\r\n  styleUrls: ['./feature-tree.component.css'],\r\n})\r\n/**\r\n * Internal class to display single features of the feature tree.\r\n *\r\n * @author Sebastian Gottschalk\r\n */\r\nexport class FeatureTreeComponent {\r\n  @Input() features: { [id: string]: Feature };\r\n  @Input() problemFeatureIds: string[]; // problem feature ids of instantiation check\r\n  @Input() supportsHurtsProblemFeatureIds: string[];\r\n  @Output() openDependenciesEmitter = new EventEmitter<string>();\r\n  @Output() updateFeatureEmitter = new EventEmitter<string>();\r\n  @Output() deleteFeatureEmitter = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Emit Event to open dependencies of current feature.\r\n   * @param featureId current feature\r\n   */\r\n  openDependencies(featureId: string) {\r\n    this.openDependenciesEmitter.emit(featureId);\r\n  }\r\n\r\n  /**\r\n   * Forward event emitter to open dependencies of current feature.\r\n   * @param featureId current feature\r\n   */\r\n  openDependenciesForwardEmitter(featureId: string) {\r\n    this.openDependencies(featureId);\r\n  }\r\n\r\n  /**\r\n   * Emit Event to update current feature.\r\n   * @param featureId current feature\r\n   */\r\n  updateFeature(featureId: string) {\r\n    this.updateFeatureEmitter.emit(featureId);\r\n  }\r\n\r\n  /**\r\n   * Forward event emitter to update current feature.\r\n   * @param featureId current feature\r\n   */\r\n  updateFeatureForwardEmitter(featureId: string) {\r\n    this.updateFeature(featureId);\r\n  }\r\n\r\n  /**\r\n   * Emit Event to delete current feature.\r\n   * @param featureId current feature\r\n   */\r\n  deleteFeature(featureId: string) {\r\n    this.deleteFeatureEmitter.emit(featureId);\r\n  }\r\n\r\n  /**\r\n   * Forward event emitter to delete current feature.\r\n   * @param featureId current feature\r\n   */\r\n  deleteFeatureForwardEmitter(featureId: string) {\r\n    this.deleteFeature(featureId);\r\n  }\r\n\r\n  getFeatures() {\r\n    return Object.values(this.features);\r\n  }\r\n\r\n  hasExpertTraces(feature: Feature) {\r\n    return Object.keys(feature.expertModelTrace).length > 0;\r\n  }\r\n}\r\n","<ul *ngIf=\"features\" class=\"list-group inner\" style=\"margin: 5px\">\r\n  <li\r\n    *ngFor=\"let f of getFeatures()\"\r\n    class=\"\r\n      d-flex\r\n      flex-wrap\r\n      list-group-item\r\n      justify-content-between\r\n      align-items-center\r\n    \"\r\n  >\r\n    <div class=\"d-flex\">\r\n      <div class=\"mr-1\">\r\n        <ng-container *ngIf=\"f.type === 'mandatory'\">\r\n          <i class=\"fa fa-circle\" aria-hidden=\"true\" title=\"mandatory\"></i>\r\n          <span class=\"sr-only\">mandatory</span>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"f.type === 'optional'\">\r\n          <i class=\"fa fa-circle-o\" aria-hidden=\"true\" title=\"optional\"></i>\r\n          <span class=\"sr-only\">optional</span>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div class=\"mr-1\">\r\n        <span\r\n          [class.text-danger]=\"\r\n            problemFeatureIds && problemFeatureIds.includes(f.id)\r\n          \"\r\n          [class.text-warning]=\"\r\n            supportsHurtsProblemFeatureIds &&\r\n            supportsHurtsProblemFeatureIds.includes(f.id)\r\n          \"\r\n          >{{ f.name\r\n          }}<span\r\n            *ngIf=\"problemFeatureIds && problemFeatureIds.includes(f.id)\"\r\n            class=\"sr-only\"\r\n          >\r\n            (instantiation error)</span\r\n          ><span\r\n            *ngIf=\"\r\n              supportsHurtsProblemFeatureIds &&\r\n              supportsHurtsProblemFeatureIds.includes(f.id)\r\n            \"\r\n            class=\"sr-only\"\r\n          >\r\n            (supports/hurts error)</span\r\n          ></span\r\n        >\r\n        <small class=\"text-muted\" *ngIf=\"f.description\">\r\n          {{ f.description }}</small\r\n        >\r\n      </div>\r\n\r\n      <div *ngIf=\"f.subfeatureConnections !== null\" class=\"mr-1\">\r\n        <ng-container *ngIf=\"f.subfeatureConnections === 'or'\">\r\n          <i\r\n            class=\"fa fa-caret-up\"\r\n            aria-hidden=\"true\"\r\n            title=\"or subfeatures\"\r\n          ></i>\r\n          <span class=\"sr-only\">or subfeatures</span>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"f.subfeatureConnections === 'xor'\">\r\n          <i\r\n            class=\"fa fa-angle-up\"\r\n            aria-hidden=\"true\"\r\n            title=\"xor subfeatures\"\r\n          ></i>\r\n          <span class=\"sr-only\">xor subfeatures</span>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div *ngIf=\"f.parent !== null && hasExpertTraces(f)\">\r\n        <span class=\"badge badge-dark\">from canvas building block</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        *ngIf=\"!f.relationships.hasNoRelationships()\"\r\n        class=\"btn btn-dark btn-xs mr-1\"\r\n        (click)=\"openDependencies(f.id)\"\r\n      >\r\n        Show Dependencies\r\n      </button>\r\n      <button\r\n        (click)=\"updateFeature(f.id)\"\r\n        type=\"button\"\r\n        class=\"btn btn-warning btn-xs mr-1\"\r\n      >\r\n        Update\r\n      </button>\r\n      <button\r\n        [class.invisible]=\"f.parent === null\"\r\n        (click)=\"deleteFeature(f.id)\"\r\n        type=\"button\"\r\n        class=\"btn btn-danger btn-xs\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n\r\n    <app-feature-tree\r\n      class=\"w-100\"\r\n      [features]=\"f.subfeatures\"\r\n      [problemFeatureIds]=\"problemFeatureIds\"\r\n      [supportsHurtsProblemFeatureIds]=\"supportsHurtsProblemFeatureIds\"\r\n      (openDependenciesEmitter)=\"openDependenciesForwardEmitter($event)\"\r\n      (updateFeatureEmitter)=\"updateFeatureForwardEmitter($event)\"\r\n      (deleteFeatureEmitter)=\"deleteFeatureForwardEmitter($event)\"\r\n    ></app-feature-tree>\r\n  </li>\r\n</ul>\r\n","import { Injectable } from '@angular/core';\r\nimport Ajv from 'ajv';\r\nimport { ExpertModelService } from '../../canvas-meta-model/expert-model.service';\r\nimport { saveAs } from 'file-saver';\r\nimport { ExpertModel } from '../../canvas-meta-model/expert-model';\r\nimport schema from '../../../assets/schema_beta.json';\r\nimport { CanvasModelConsistencyService } from '../../canvas-meta-model/canvas-model-consistency.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ImportExportService {\r\n  private ajv = new Ajv();\r\n\r\n  constructor(\r\n    private expertModelService: ExpertModelService,\r\n    private canvasModelConsistencyService: CanvasModelConsistencyService\r\n  ) {}\r\n\r\n  /**\r\n   * Export a model to json\r\n   *\r\n   * @param expertModelId the id of the expert model\r\n   */\r\n  async exportExpertModel(expertModelId: string): Promise<void> {\r\n    const expertModel = await this.expertModelService.get(expertModelId);\r\n    const json = new Blob([JSON.stringify(expertModel, null, 2)], {\r\n      type: 'application/json',\r\n    });\r\n    saveAs(json, expertModel.name + '.json');\r\n  }\r\n\r\n  /**\r\n   * Imports an expert model into pouchdb after checking the format and consistency\r\n   *\r\n   * @param file the file which includes the model as json\r\n   * @return promise of the new expert model\r\n   */\r\n  async importExpertModel(file): Promise<ExpertModel> {\r\n    const json = await this.importJson(file);\r\n    const expertModel = new ExpertModel(\r\n      undefined,\r\n      new ExpertModel(json, undefined)\r\n    );\r\n    this.canvasModelConsistencyService.checkFormalConsistency(expertModel);\r\n    await this.expertModelService.save(expertModel);\r\n    return this.expertModelService.get(expertModel._id);\r\n  }\r\n\r\n  /**\r\n   * Imports JSON from a file and checks against the schema for models.\r\n   *\r\n   * @param file the file to read the JSON from\r\n   */\r\n  private importJson(file): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      const validate = this.ajv.compile(schema);\r\n      const fileReader = new FileReader();\r\n      fileReader.addEventListener('error', () => {\r\n        reject('Error loading file');\r\n      });\r\n      fileReader.addEventListener('load', (event: any) => {\r\n        let json = null;\r\n        try {\r\n          json = JSON.parse(event.target.result);\r\n        } catch (error) {\r\n          reject(error);\r\n          return;\r\n        }\r\n        const valid = validate(json);\r\n        if (!valid) {\r\n          reject(validate.errors);\r\n        } else {\r\n          resolve(json);\r\n        }\r\n      });\r\n      fileReader.readAsText(file);\r\n    });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport Ajv from 'ajv';\r\nimport { ImportExportService } from '../import-export.service';\r\n\r\n@Component({\r\n  selector: 'app-model-import-view',\r\n  templateUrl: './model-import-view.component.html',\r\n  styleUrls: ['./model-import-view.component.css'],\r\n})\r\nexport class ModelImportViewComponent {\r\n  @Input() importExpertModel: boolean;\r\n  @Input() formTitle: string;\r\n\r\n  @Output() imported = new EventEmitter<null>();\r\n\r\n  file = null;\r\n  form = this.fb.group({ file: null });\r\n  importError: string = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private importExportService: ImportExportService\r\n  ) {}\r\n\r\n  fileChange(event) {\r\n    this.importError = null;\r\n    this.file = event.target.files[0];\r\n  }\r\n\r\n  async submitForm() {\r\n    try {\r\n      await this.importExportService.importExpertModel(this.file);\r\n      this.form.reset();\r\n      this.file = null;\r\n      this.imported.emit();\r\n    } catch (e) {\r\n      console.log(e);\r\n      if (typeof e === 'string') {\r\n        this.importError = e;\r\n      } else if (e instanceof Error) {\r\n        this.importError = e.message;\r\n      } else if (Array.isArray(e)) {\r\n        const ajvError = e as Ajv.ErrorObject[];\r\n        this.importError = ajvError[0].message;\r\n      } else {\r\n        this.importError =\r\n          \"Unknown Error. See browser's console for more info.\";\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">{{ formTitle }}</h6>\r\n  <div class=\"text-muted pt-3\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n      <div class=\"form-group form-row\">\r\n        <label for=\"file\" class=\"col-sm-4 col-form-label\">File</label>\r\n        <div class=\"col-sm-8\">\r\n          <input\r\n            type=\"file\"\r\n            class=\"form-control\"\r\n            [class.is-invalid]=\"importError\"\r\n            id=\"file\"\r\n            aria-describedby=\"fileErrorDescription\"\r\n            formControlName=\"file\"\r\n            (change)=\"fileChange($event)\"\r\n          />\r\n          <div id=\"fileErrorDescription\" class=\"invalid-feedback\">\r\n            {{ importError }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group form-row\">\r\n        <div class=\"col-sm-12\">\r\n          <button\r\n            [disabled]=\"!file\"\r\n            type=\"submit\"\r\n            class=\"btn btn-sm btn-dark btn-block\"\r\n          >\r\n            {{ formTitle }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\n\r\n@Component({\r\n  selector: 'app-model-info-box',\r\n  templateUrl: './model-info-box.component.html',\r\n  styleUrls: ['./model-info-box.component.css'],\r\n})\r\nexport class ModelInfoBoxComponent {\r\n  @Input() featureModel: FeatureModel;\r\n\r\n  constructor() {}\r\n}\r\n","<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">Info</h6>\r\n  <table class=\"table table-sm mb-0\" style=\"table-layout: fixed\">\r\n    <tbody>\r\n      <tr class=\"table-borderless\">\r\n        <th scope=\"row\" style=\"width: 250px\">Name</th>\r\n        <td>{{ featureModel.name }}</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">Description</th>\r\n        <td>{{ featureModel.description }}</td>\r\n      </tr>\r\n      <tr *ngIf=\"featureModel.hasOwnProperty('version')\">\r\n        <th scope=\"row\">Version</th>\r\n        <td>{{ $any(featureModel).version }}</td>\r\n      </tr>\r\n      <tr *ngIf=\"featureModel.copyright\">\r\n        <th scope=\"row\">Copyright</th>\r\n        <td>{{ featureModel.copyright }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<div\r\n  *ngIf=\"featureModel.author && featureModel.author.name\"\r\n  class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n>\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">Author Info</h6>\r\n  <table class=\"table table-sm mb-0\" style=\"table-layout: fixed\">\r\n    <tbody>\r\n      <tr class=\"table-borderless\">\r\n        <th scope=\"row\" style=\"width: 250px\">Name</th>\r\n        <td>{{ featureModel.author.name }}</td>\r\n      </tr>\r\n      <tr *ngIf=\"featureModel.author.company\">\r\n        <th scope=\"row\">Company</th>\r\n        <td>{{ featureModel.author.company }}</td>\r\n      </tr>\r\n      <tr *ngIf=\"featureModel.author.email\">\r\n        <th scope=\"row\">Email</th>\r\n        <td>{{ featureModel.author.email }}</td>\r\n      </tr>\r\n      <tr *ngIf=\"featureModel.author.website\">\r\n        <th scope=\"row\">Website</th>\r\n        <td>{{ featureModel.author.website }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport {\r\n  FeatureModel,\r\n  FeatureModelEntry,\r\n  FeatureModelInit,\r\n} from '../../../canvas-meta-model/feature-model';\r\nimport {\r\n  CanvasDefinition,\r\n  CanvasDefinitionEntry,\r\n} from '../../../canvas-meta-model/canvas-definition';\r\nimport { CanvasDefinitionService } from '../../../canvas-meta-model/canvas-definition.service';\r\nimport { ListService } from '../../../shared/list.service';\r\nimport { ModelList } from './model-list';\r\n\r\n@Component({\r\n  selector: 'app-model-list',\r\n  templateUrl: './model-list.component.html',\r\n  styleUrls: ['./model-list.component.css'],\r\n})\r\nexport class ModelListComponent implements OnInit, ModelList {\r\n  @Input() modelListTitle: string;\r\n  @Input() modelFormTitle: string;\r\n\r\n  @Output() viewModel = new EventEmitter<string>();\r\n  @Output() editModel = new EventEmitter<string>();\r\n  @Output() deleteModel = new EventEmitter<string>();\r\n  @Output() addModel = new EventEmitter<{\r\n    definition: CanvasDefinition;\r\n    name: string;\r\n    description: string;\r\n  }>();\r\n\r\n  canvasDefinitions: CanvasDefinitionEntry[] = [];\r\n\r\n  modelForm = this.fb.group({\r\n    definition: [null, Validators.required],\r\n    name: ['', Validators.required],\r\n    description: [],\r\n  });\r\n\r\n  constructor(\r\n    private canvasDefinitionService: CanvasDefinitionService,\r\n    private fb: FormBuilder,\r\n    private listService: ListService<FeatureModel, FeatureModelInit>\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadCanvasDefinitions();\r\n  }\r\n\r\n  resetAddForm(): void {\r\n    this.modelForm.reset();\r\n  }\r\n\r\n  addModelForwardEmitter(): void {\r\n    this.addModel.emit({\r\n      definition: new CanvasDefinition(\r\n        this.modelForm.value.definition,\r\n        undefined\r\n      ),\r\n      name: this.modelForm.value.name,\r\n      description: this.modelForm.value.description,\r\n    });\r\n  }\r\n\r\n  async loadCanvasDefinitions(): Promise<void> {\r\n    this.canvasDefinitions = await this.canvasDefinitionService.getList();\r\n  }\r\n\r\n  get definitionControl(): FormControl {\r\n    return this.modelForm.get('definition') as FormControl;\r\n  }\r\n\r\n  get modelList(): FeatureModelEntry[] {\r\n    return this.listService.elements;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.listService.noResults;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.listService.loading;\r\n  }\r\n\r\n  get reloading(): boolean {\r\n    return this.listService.reloading;\r\n  }\r\n}\r\n","<!-- model list -->\r\n<app-list-wrapper\r\n  [listTitle]=\"modelListTitle\"\r\n  [reloading]=\"reloading\"\r\n  [loading]=\"loading\"\r\n  [noResults]=\"noResults\"\r\n>\r\n  <div noResults>No entries.</div>\r\n  <ul results class=\"list-unstyled mb-0\">\r\n    <li\r\n      *ngFor=\"let model of modelList\"\r\n      class=\"model-list-item media text-muted pt-2 pb-2 border-bottom\"\r\n    >\r\n      <svg\r\n        class=\"align-self-center mr-2 rounded\"\r\n        width=\"32\"\r\n        height=\"32\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        preserveAspectRatio=\"xMidYMid slice\"\r\n        focusable=\"false\"\r\n        role=\"img\"\r\n        aria-label=\"Placeholder: 32x32\"\r\n      >\r\n        <title>Placeholder</title>\r\n        <rect width=\"100%\" height=\"100%\" fill=\"#6f42c1\" />\r\n      </svg>\r\n\r\n      <div class=\"media-body small\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <div>\r\n            <div>\r\n              <strong\r\n                (click)=\"viewModel.emit(model._id)\"\r\n                class=\"text-gray-dark\"\r\n                >{{ model.name }}</strong\r\n              >\r\n              <span\r\n                class=\"text-muted\"\r\n                *ngIf=\"model.hasOwnProperty('version') && model['version']\"\r\n              >\r\n                ({{ model['version'] }})</span\r\n              >\r\n            </div>\r\n            <div>\r\n              <span>{{ model.description }}</span>\r\n            </div>\r\n            <div *ngIf=\"model.author && model.author.name\">\r\n              Author: {{ model.author.name }}\r\n              <ng-container *ngIf=\"model.author.email\">\r\n                ({{ model.author.email }})\r\n              </ng-container>\r\n              <ng-container *ngIf=\"model.author.company\">\r\n                from {{ model.author.company }}</ng-container\r\n              >\r\n            </div>\r\n            <div *ngIf=\"model.author.website\">\r\n              Website: {{ model.author.website }}\r\n            </div>\r\n            <div *ngIf=\"model.copyright\">Copyright: {{ model.copyright }}</div>\r\n          </div>\r\n          <div>\r\n            <button\r\n              (click)=\"viewModel.emit(model._id)\"\r\n              type=\"button\"\r\n              class=\"btn btn-dark btn-xs model-list-item-view mr-1 my-1\"\r\n            >\r\n              View\r\n            </button>\r\n            <button\r\n              (click)=\"editModel.emit(model._id)\"\r\n              type=\"button\"\r\n              class=\"btn btn-warning btn-xs model-list-item-edit mr-1 my-1\"\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              (click)=\"deleteModel.emit(model._id)\"\r\n              type=\"button\"\r\n              class=\"btn btn-danger btn-xs model-list-item-delete my-1\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</app-list-wrapper>\r\n\r\n<!-- Add model -->\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">{{ modelFormTitle }}</h6>\r\n  <div class=\"text-muted pt-3\">\r\n    <form [formGroup]=\"modelForm\" (ngSubmit)=\"addModelForwardEmitter()\">\r\n      <div class=\"form-group form-row\">\r\n        <label for=\"definitionSelector\" class=\"col-sm-4 col-form-label\"\r\n          >Canvas Model</label\r\n        >\r\n        <div class=\"col-sm-8\">\r\n          <select\r\n            id=\"definitionSelector\"\r\n            formControlName=\"definition\"\r\n            class=\"form-control\"\r\n            [class.is-invalid]=\"\r\n              definitionControl.invalid && definitionControl.touched\r\n            \"\r\n          >\r\n            <option\r\n              *ngFor=\"let definition of canvasDefinitions\"\r\n              [ngValue]=\"definition\"\r\n            >\r\n              {{ definition.name }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group form-row\">\r\n        <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n        <div class=\"col-sm-8\">\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"name\"\r\n            class=\"form-control\"\r\n            id=\"name\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group form-row\">\r\n        <label for=\"description\" class=\"col-sm-4 col-form-label\"\r\n          >Description</label\r\n        >\r\n        <div class=\"col-sm-8\">\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"description\"\r\n            class=\"form-control\"\r\n            id=\"description\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group form-row\">\r\n        <div class=\"col-sm-12\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-sm btn-dark btn-block\"\r\n            [disabled]=\"!modelForm.valid\"\r\n          >\r\n            {{ modelFormTitle }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CanvasDefinitionCell } from '../../canvas-meta-model/canvas-definition-cell';\r\n\r\nexport interface CanvasDefinitionCellFormValue {\r\n  isSpacer: boolean;\r\n  name?: string;\r\n  id?: string;\r\n  rowspan: number;\r\n  colspan: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CanvasDefinitionRowFormService {\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  createForm(canvasDefinitionRows: CanvasDefinitionCell[][] = null): FormArray {\r\n    let forms = [];\r\n    if (canvasDefinitionRows != null) {\r\n      forms = canvasDefinitionRows.map((row) =>\r\n        this.fb.array(\r\n          row.map((cell) => this.createCanvasDefinitionCellForm(cell))\r\n        )\r\n      );\r\n    }\r\n    return this.fb.array(forms);\r\n  }\r\n\r\n  createCanvasDefinitionCellForm(\r\n    canvasDefinitionCell: CanvasDefinitionCell = null\r\n  ): FormGroup {\r\n    const form = this.fb.group({\r\n      isSpacer: [false, Validators.required],\r\n      name: ['', Validators.required],\r\n      id: [''],\r\n      rowspan: [1, [Validators.required, Validators.min(1)]],\r\n      colspan: [1, [Validators.required, Validators.min(1)]],\r\n    });\r\n    if (canvasDefinitionCell != null) {\r\n      if (canvasDefinitionCell.isSpacer) {\r\n        form.removeControl('name');\r\n        form.removeControl('id');\r\n      }\r\n      form.patchValue(canvasDefinitionCell);\r\n    }\r\n    return form;\r\n  }\r\n\r\n  convertCanvasDefinitionCellForm(\r\n    canvasDefinitionCellForm: FormGroup,\r\n    spacer: boolean\r\n  ): void {\r\n    if (spacer) {\r\n      canvasDefinitionCellForm.removeControl('name');\r\n      canvasDefinitionCellForm.removeControl('id');\r\n    } else {\r\n      canvasDefinitionCellForm.setControl(\r\n        'name',\r\n        this.fb.control('', Validators.required)\r\n      );\r\n      canvasDefinitionCellForm.setControl('id', this.fb.control(''));\r\n    }\r\n  }\r\n\r\n  getCanvasDefinitionCellForm(\r\n    formValue: CanvasDefinitionCellFormValue\r\n  ): CanvasDefinitionCell {\r\n    if (formValue.isSpacer) {\r\n      return new CanvasDefinitionCell(undefined, {\r\n        isSpacer: formValue.isSpacer,\r\n        rowspan: formValue.rowspan,\r\n        colspan: formValue.colspan,\r\n      });\r\n    } else {\r\n      return new CanvasDefinitionCell(undefined, {\r\n        isSpacer: formValue.isSpacer,\r\n        name: formValue.name,\r\n        rowspan: formValue.rowspan,\r\n        colspan: formValue.colspan,\r\n        id: formValue.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  get(formValue: CanvasDefinitionCellFormValue[][]): CanvasDefinitionCell[][] {\r\n    return formValue.map((row) =>\r\n      row.map((cell) => this.getCanvasDefinitionCellForm(cell))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FeatureModel } from '../../canvas-meta-model/feature-model';\r\n\r\nexport interface FeatureModelFormValue {\r\n  name: string;\r\n  description: string;\r\n  copyright: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FeatureModelFormService {\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  createForm(featureModel: FeatureModel = null): FormGroup {\r\n    const form = this.fb.group({\r\n      name: ['', Validators.required],\r\n      description: '',\r\n      copyright: '',\r\n    });\r\n    if (featureModel) {\r\n      form.patchValue(featureModel);\r\n    }\r\n    return form;\r\n  }\r\n\r\n  get(formValue: FeatureModelFormValue): FeatureModelFormValue {\r\n    return {\r\n      name: formValue.name,\r\n      description: formValue.description,\r\n      copyright: formValue.copyright,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Instance,\r\n  InstanceInit,\r\n  InstanceType,\r\n} from '../../canvas-meta-model/instance';\r\n\r\nexport interface InstanceFormValue {\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FeatureModelInstanceFormService {\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  createForm(instance: Instance = null): FormGroup {\r\n    const form = this.fb.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n    });\r\n    if (instance) {\r\n      form.patchValue(instance);\r\n    }\r\n    return form;\r\n  }\r\n\r\n  get(formValue: InstanceFormValue): InstanceInit {\r\n    return {\r\n      name: formValue.name,\r\n      description: formValue.description,\r\n      type: InstanceType.EXAMPLE,\r\n    };\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { Feature, FeatureInit } from '../../../canvas-meta-model/feature';\r\n\r\n@Component({\r\n  selector: 'app-add-decision-modal',\r\n  templateUrl: './add-decision-modal.component.html',\r\n  styleUrls: ['./add-decision-modal.component.css'],\r\n})\r\nexport class AddDecisionModalComponent {\r\n  @Input() instance: Instance;\r\n  @Input() feature: Feature;\r\n\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output() addBusinessModelDecision = new EventEmitter<string>();\r\n  @Output() addFeature = new EventEmitter<FeatureInit>();\r\n\r\n  addFeatureForm = this.fb.group({ name: ['', Validators.required] });\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  submitAddFeatureForm(): void {\r\n    this.addFeature.emit(this.addFeatureForm.value);\r\n    this.addFeatureForm.reset();\r\n  }\r\n\r\n  get unselectedFeatures(): Feature[] {\r\n    return Object.values(this.feature.subfeatures).filter(\r\n      (feature) => !this.instance.usedFeatures.includes(feature.id)\r\n    );\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-basic-title\">{{ feature.name }}</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close\"\r\n    aria-label=\"Close\"\r\n    (click)=\"closeModal.emit()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ul class=\"list-group inner\" style=\"margin: 5px\">\r\n    <li class=\"list-group-item justify-content-between align-items-center\">\r\n      <i class=\"fas fa-plus-square\"></i>\r\n      Add existing business model decisions:\r\n      <ul class=\"list-group inner\" style=\"margin: 5px\">\r\n        <li\r\n          class=\"list-group-item justify-content-between align-items-center\"\r\n          *ngFor=\"let f of unselectedFeatures\"\r\n        >\r\n          <span>\r\n            {{ f.name }}\r\n            <small class=\"text-muted\" *ngIf=\"f.description\">{{\r\n              f.description\r\n            }}</small>\r\n          </span>\r\n          <button\r\n            (click)=\"addBusinessModelDecision.emit(f.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-warning btn-xs bottom-right\"\r\n          >\r\n            Add\r\n          </button>\r\n        </li>\r\n        <li\r\n          class=\"list-group-item justify-content-between align-items-center\"\r\n          *ngIf=\"unselectedFeatures.length === 0\"\r\n        >\r\n          There are no existing business model decisions left to add.\r\n        </li>\r\n      </ul>\r\n    </li>\r\n    <li class=\"list-group-item justify-content-between align-items-center\">\r\n      <i class=\"fas fa-plus-square\"></i>\r\n      Add new business model decision:\r\n      <ul class=\"list-group inner\" style=\"margin: 5px\">\r\n        <li class=\"list-group-item justify-content-between align-items-center\">\r\n          <form\r\n            [formGroup]=\"addFeatureForm\"\r\n            (ngSubmit)=\"submitAddFeatureForm()\"\r\n            class=\"form-inline\"\r\n          >\r\n            <label class=\"sr-only\" for=\"name\">Decision Name</label>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control mb-2 mr-sm-2\"\r\n              id=\"name\"\r\n            />\r\n            <button type=\"submit\" class=\"btn btn-warning btn-xs bottom-right\">\r\n              Add\r\n            </button>\r\n          </form>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { ConformanceReport } from '../../../canvas-meta-model/conformance-report';\r\n\r\n@Component({\r\n  selector: 'app-canvas-building-block',\r\n  templateUrl: './canvas-building-block.component.html',\r\n  styleUrls: ['./canvas-building-block.component.css'],\r\n})\r\n/**\r\n * Internal class to display single business model decisions of the business model canvas.\r\n *\r\n * @author Sebastian Gottschalk\r\n */\r\nexport class CanvasBuildingBlockComponent {\r\n  @Input() feature: Feature;\r\n  @Input() levelDepth = 1;\r\n  @Input() instance: Instance;\r\n  @Input() conformance: ConformanceReport;\r\n  @Input() showWarnings: boolean;\r\n  @Input() showStrengths: boolean;\r\n  @Input() showHints: boolean;\r\n  @Input() showPatternHints: boolean;\r\n  @Input() compareInstance: Instance = null;\r\n  @Input() percentages: { [id: string]: number } = null;\r\n  @Input() patternInstance: Instance = null;\r\n  @Input() editable: boolean;\r\n\r\n  @Output() addFeatureEmitter = new EventEmitter<string>();\r\n  @Output() deleteFeatureEmitter = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Create a new instance of the CanvasBuildingBlockComponent.\r\n   */\r\n  constructor() {}\r\n\r\n  /**\r\n   * Emit Event to add feature.\r\n   * @param featureId current feature\r\n   */\r\n  addFeature(featureId: string) {\r\n    this.addFeatureEmitter.emit(featureId);\r\n  }\r\n\r\n  /**\r\n   * Emit Event to delete feature.\r\n   * @param featureId current feature\r\n   */\r\n  deleteFeature(featureId: string) {\r\n    this.deleteFeatureEmitter.emit(featureId);\r\n  }\r\n\r\n  /**\r\n   * Forward event emitter to add feature.\r\n   * @param featureId current feature\r\n   */\r\n  addFeatureForwardEmitter(featureId: string) {\r\n    this.addFeature(featureId);\r\n  }\r\n\r\n  /**\r\n   * Forward event emitter to delete feature.\r\n   * @param featureId featureId\r\n   */\r\n  deleteFeatureForwardEmitter(featureId: string) {\r\n    this.deleteFeature(featureId);\r\n  }\r\n\r\n  asList(map: { [id: string]: Feature }): Feature[] {\r\n    return Object.values(map);\r\n  }\r\n}\r\n","<ul\r\n  [class.no-list]=\"levelDepth === 1\"\r\n  class=\"list-group\"\r\n  style=\"margin-top: 5px; margin-left: 5px\"\r\n>\r\n  <li>\r\n    <ng-container *ngIf=\"instance.usedFeatures.includes(feature.id)\">\r\n      <strong\r\n        *ngIf=\"levelDepth === 1\"\r\n        [class.text-success]=\"\r\n          (compareInstance &&\r\n            !compareInstance.usedFeatures.includes(feature.id)) ||\r\n          (showStrengths && conformance.strengthFeatureIds.includes(feature.id))\r\n        \"\r\n        [class.text-danger]=\"conformance.errorFeatureIds.includes(feature.id)\"\r\n        [class.text-warning]=\"\r\n          conformance.warningFeatureIds.includes(feature.id) && showWarnings\r\n        \"\r\n      >\r\n        {{ feature.name }}\r\n      </strong>\r\n      <span\r\n        *ngIf=\"levelDepth !== 1\"\r\n        [class.text-success]=\"\r\n          (compareInstance &&\r\n            !compareInstance.usedFeatures.includes(feature.id)) ||\r\n          (showStrengths &&\r\n            conformance.strengthFeatureIds.includes(feature.id)) ||\r\n          (patternInstance && patternInstance.usedFeatures.includes(feature.id))\r\n        \"\r\n        [class.text-danger]=\"conformance.errorFeatureIds.includes(feature.id)\"\r\n        [class.text-warning]=\"\r\n          conformance.warningFeatureIds.includes(feature.id) && showWarnings\r\n        \"\r\n        >{{ feature.name }}</span\r\n      >\r\n      <i\r\n        class=\"fas fa-plus-square ml-2\"\r\n        *ngIf=\"editable\"\r\n        (click)=\"addFeature(feature.id)\"\r\n      ></i>\r\n      <i\r\n        class=\"fas fa-minus-square ml-2\"\r\n        *ngIf=\"feature.parent !== null && editable\"\r\n        (click)=\"deleteFeature(feature.id)\"\r\n      ></i>\r\n      <small\r\n        *ngIf=\"\r\n          percentages &&\r\n          asList(feature.subfeatures).length > 0 &&\r\n          compareInstance &&\r\n          compareInstance.usedFeatures.includes(feature.id) &&\r\n          instance.usedFeatures.includes(feature.id)\r\n        \"\r\n        class=\"text-muted ml-1\"\r\n        >{{ percentages[feature.id] | number: '.2-2' }}&nbsp;%</small\r\n      >\r\n    </ng-container>\r\n    <em\r\n      *ngIf=\"!instance.usedFeatures.includes(feature.id)\"\r\n      [class.text-danger]=\"\r\n        conformance.errorFeatureIds.includes(feature.id) ||\r\n        (compareInstance &&\r\n          compareInstance.usedFeatures.includes(feature.id)) ||\r\n        (patternInstance && patternInstance.usedFeatures.includes(feature.id))\r\n      \"\r\n      [class.text-success]=\"\r\n        conformance.hintFeatureIds.includes(feature.id) && showHints\r\n      \"\r\n      [class.text-muted]=\"\r\n        conformance.patternHintFeatureIds.includes(feature.id) &&\r\n        showPatternHints\r\n      \"\r\n      >{{ feature.name }}</em\r\n    >\r\n    <span *ngFor=\"let f of asList(feature.subfeatures)\">\r\n      <app-canvas-building-block\r\n        [feature]=\"f\"\r\n        [instance]=\"instance\"\r\n        *ngIf=\"\r\n          instance.usedFeatures.includes(f.id) ||\r\n          conformance.errorFeatureIds.includes(f.id) ||\r\n          (conformance.warningFeatureIds.includes(f.id) && showWarnings) ||\r\n          (conformance.strengthFeatureIds.includes(f.id) && showStrengths) ||\r\n          (conformance.hintFeatureIds.includes(f.id) && showHints) ||\r\n          (conformance.patternHintFeatureIds.includes(f.id) &&\r\n            showPatternHints) ||\r\n          (compareInstance && compareInstance.usedFeatures.includes(f.id)) ||\r\n          (patternInstance && patternInstance.usedFeatures.includes(f.id))\r\n        \"\r\n        [levelDepth]=\"levelDepth + 1\"\r\n        [conformance]=\"conformance\"\r\n        [showWarnings]=\"showWarnings\"\r\n        [showStrengths]=\"showStrengths\"\r\n        [showHints]=\"showHints\"\r\n        [showPatternHints]=\"showPatternHints\"\r\n        [compareInstance]=\"compareInstance\"\r\n        [percentages]=\"percentages\"\r\n        [patternInstance]=\"patternInstance\"\r\n        [editable]=\"editable\"\r\n        (addFeatureEmitter)=\"addFeatureForwardEmitter($event)\"\r\n        (deleteFeatureEmitter)=\"deleteFeatureForwardEmitter($event)\"\r\n      ></app-canvas-building-block>\r\n    </span>\r\n  </li>\r\n</ul>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { ConformanceReport } from '../../../canvas-meta-model/conformance-report';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\n\r\n@Component({\r\n  selector: 'app-canvas',\r\n  templateUrl: './canvas.component.html',\r\n  styleUrls: ['./canvas.component.css'],\r\n})\r\nexport class CanvasComponent {\r\n  @Input() featureModel: FeatureModel;\r\n  @Input() instance: Instance;\r\n\r\n  @Input() conformance: ConformanceReport = new ConformanceReport();\r\n  @Input() conformanceOptions: {\r\n    showWarnings: boolean;\r\n    showStrengths: boolean;\r\n    showHints: boolean;\r\n    showPatternHints: boolean;\r\n  } = {\r\n    showHints: false,\r\n    showPatternHints: false,\r\n    showStrengths: false,\r\n    showWarnings: false,\r\n  };\r\n\r\n  @Input() compareInstance: Instance = null;\r\n  @Input() percentages: { [id: string]: number } = null;\r\n\r\n  @Input() patternInstance: Instance = null;\r\n\r\n  @Input() editable = true;\r\n\r\n  @Output() addFeatureModal = new EventEmitter<string>();\r\n  @Output() deleteFeatureModal = new EventEmitter<string>();\r\n\r\n  getHeatmapStyle(featureId: string) {\r\n    return this.percentages\r\n      ? {\r\n          'background-color':\r\n            'hsla(' +\r\n            (this.percentages[featureId] / 100) * 120 +\r\n            ', 100%, 66%, 0.3)',\r\n        }\r\n      : {};\r\n  }\r\n}\r\n","<table *ngIf=\"featureModel\" class=\"table table-bordered canvas-table\">\r\n  <tbody>\r\n    <tr *ngFor=\"let row of featureModel.definition.rows\">\r\n      <ng-container *ngFor=\"let cell of row\">\r\n        <td\r\n          class=\"canvas-table-cell\"\r\n          *ngIf=\"!cell.isSpacer\"\r\n          [colSpan]=\"cell.colspan\"\r\n          [rowSpan]=\"cell.rowspan\"\r\n          [ngStyle]=\"getHeatmapStyle(cell.id)\"\r\n        >\r\n          <div class=\"canvas-table-block\">\r\n            <app-canvas-building-block\r\n              [feature]=\"featureModel.features[cell.id]\"\r\n              [instance]=\"instance\"\r\n              [conformance]=\"conformance\"\r\n              [showWarnings]=\"conformanceOptions.showWarnings\"\r\n              [showStrengths]=\"conformanceOptions.showStrengths\"\r\n              [showHints]=\"conformanceOptions.showHints\"\r\n              [showPatternHints]=\"conformanceOptions.showPatternHints\"\r\n              [compareInstance]=\"compareInstance\"\r\n              [percentages]=\"percentages\"\r\n              [patternInstance]=\"patternInstance\"\r\n              [editable]=\"editable\"\r\n              (addFeatureEmitter)=\"addFeatureModal.emit($event)\"\r\n              (deleteFeatureEmitter)=\"deleteFeatureModal.emit($event)\"\r\n            ></app-canvas-building-block>\r\n          </div>\r\n        </td>\r\n        <td\r\n          *ngIf=\"cell.isSpacer\"\r\n          [colSpan]=\"cell.colspan\"\r\n          [rowSpan]=\"cell.rowspan\"\r\n        ></td>\r\n      </ng-container>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\n\r\n@Component({\r\n  selector: 'app-delete-decision-modal',\r\n  templateUrl: './delete-decision-modal.component.html',\r\n  styleUrls: ['./delete-decision-modal.component.css'],\r\n})\r\nexport class DeleteDecisionModalComponent {\r\n  @Input() feature: Feature;\r\n\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output() deleteBusinessModelDecision = new EventEmitter<string>();\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-basic-title\">{{ feature.name }}</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close\"\r\n    aria-label=\"Close\"\r\n    (click)=\"closeModal.emit()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n      You are trying to remove the decision \"{{ feature.name }}\". Please keep in\r\n      mind that you are removing also all subdecisions.\r\n    </p>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn btn-block btn-warning\"\r\n    (click)=\"deleteBusinessModelDecision.emit(feature.id)\"\r\n  >\r\n    Delete Decision\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ExpertModel } from '../../../canvas-meta-model/expert-model';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { ExpertModelService } from '../../../canvas-meta-model/expert-model.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { InstanceService } from '../instance.service';\r\nimport { NgbNavChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ConformanceReport } from '../../../canvas-meta-model/conformance-report';\r\nimport { CanvasModelConsistencyService } from '../../../canvas-meta-model/canvas-model-consistency.service';\r\n\r\n@Component({\r\n  selector: 'app-example',\r\n  templateUrl: './example.component.html',\r\n  styleUrls: ['./example.component.css'],\r\n})\r\nexport class ExampleComponent implements OnInit {\r\n  expertModel: ExpertModel;\r\n  example: Instance;\r\n\r\n  // Conformance Checking\r\n  conformanceIsChecked: boolean;\r\n  conformance: ConformanceReport;\r\n  conformanceOptionsForm: FormGroup = this.fb.group({\r\n    showWarnings: true,\r\n    showStrengths: true,\r\n    showHints: false,\r\n    showPatternHints: false,\r\n    showUsedPatterns: false,\r\n  });\r\n\r\n  // used patterns\r\n  usedPatterns: Instance[] = null;\r\n\r\n  // Compare / Heatmap\r\n  selectOtherInstanceForm: FormGroup = this.fb.group({\r\n    instance: [null, Validators.required],\r\n  });\r\n  compareInstance: Instance = null;\r\n  percentages: { [id: string]: number } = null;\r\n\r\n  // Show pattern\r\n  selectPatternForm: FormGroup = this.fb.group({\r\n    pattern: [null, Validators.required],\r\n  });\r\n  patternInstance: Instance = null;\r\n\r\n  activeId: string;\r\n\r\n  private routeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private canvasModelConsistencyService: CanvasModelConsistencyService,\r\n    private fb: FormBuilder,\r\n    private expertModelService: ExpertModelService,\r\n    private instanceService: InstanceService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.routeSubscription = this.route.paramMap.subscribe((paramMap) => {\r\n      const expertModelId = paramMap.get('id');\r\n      const exampleId = +paramMap.get('exampleId');\r\n\r\n      this.activeId = 'stepCreate';\r\n\r\n      this.clearView();\r\n      this.initConformanceOptionsForm(this.activeId);\r\n\r\n      void this.load(expertModelId, exampleId);\r\n    });\r\n  }\r\n\r\n  async load(expertModelId, exampleId): Promise<void> {\r\n    const expertModel = await this.expertModelService.get(expertModelId);\r\n    this.expertModel = expertModel;\r\n    this.example = expertModel.getInstance(exampleId);\r\n    if (this.compareInstance) {\r\n      this.compare();\r\n    }\r\n    if (this.patternInstance) {\r\n      this.showPattern();\r\n    }\r\n    if (this.usedPatterns) {\r\n      this.showUsedPatterns();\r\n    }\r\n    if (this.conformanceIsChecked) {\r\n      this.checkConformance();\r\n    } else {\r\n      this.uncheckConformance();\r\n    }\r\n  }\r\n\r\n  async updateExpertModel(): Promise<void> {\r\n    await this.expertModelService.save(this.expertModel);\r\n    await this.load(this.expertModel._id, this.example.id);\r\n  }\r\n\r\n  /**\r\n   * Create adaptation of the business model.\r\n   */\r\n  async createAdaptation(): Promise<void> {\r\n    const adaptationName = this.instanceService.getAdaptionName(\r\n      this.example.name\r\n    );\r\n    this.expertModel.adaptInstance(this.example.id, adaptationName);\r\n    const instance =\r\n      this.expertModel.instances[this.expertModel.instances.length - 1];\r\n    await this.expertModelService.save(this.expertModel);\r\n    await this.router.navigate([\r\n      'expertModels',\r\n      this.expertModel._id,\r\n      'examples',\r\n      instance.id,\r\n    ]);\r\n  }\r\n\r\n  switchView(event: NgbNavChangeEvent): void {\r\n    this.clearView();\r\n    this.initConformanceOptionsForm(event.nextId);\r\n  }\r\n\r\n  private clearView(): void {\r\n    this.uncheckConformance();\r\n    this.clearCompare();\r\n    this.clearPattern();\r\n    this.hideUsedPatterns();\r\n  }\r\n\r\n  /**\r\n   * Uncheck the conformance.\r\n   */\r\n  uncheckConformance(): void {\r\n    this.conformanceIsChecked = false;\r\n    this.conformance = new ConformanceReport();\r\n  }\r\n\r\n  /**\r\n   * Check the conformance.\r\n   */\r\n  checkConformance(): void {\r\n    this.clearCompare();\r\n    this.clearPattern();\r\n    this.conformance =\r\n      this.canvasModelConsistencyService.checkConformanceOfInstance(\r\n        this.expertModel,\r\n        this.example.id,\r\n        this.expertModel.getPatterns()\r\n      );\r\n    this.conformanceIsChecked = true;\r\n  }\r\n\r\n  /**\r\n   * Compare this instance with another instance and generate a heatmap\r\n   */\r\n  compare(): void {\r\n    this.uncheckConformance();\r\n    this.clearPattern();\r\n    const id = this.selectOtherInstanceForm.value.instance;\r\n    this.compareInstance = this.expertModel.getInstance(id);\r\n    this.percentages = this.instanceService.compareInstances(\r\n      this.expertModel,\r\n      this.example,\r\n      this.compareInstance\r\n    );\r\n    this.selectOtherInstanceForm.get('instance').disable();\r\n  }\r\n\r\n  /**\r\n   * Clear comparison and remove heatmap\r\n   */\r\n  clearCompare(): void {\r\n    this.compareInstance = null;\r\n    this.percentages = null;\r\n    this.selectOtherInstanceForm.get('instance').enable();\r\n  }\r\n\r\n  /**\r\n   * Show pattern in business model canvas\r\n   */\r\n  showPattern(): void {\r\n    this.uncheckConformance();\r\n    this.clearCompare();\r\n    this.patternInstance = this.selectPatternForm.value.pattern;\r\n    this.selectPatternForm.get('pattern').disable();\r\n  }\r\n\r\n  /**\r\n   * Do not show pattern in business model canvas any longer\r\n   */\r\n  clearPattern(): void {\r\n    this.patternInstance = null;\r\n    this.selectPatternForm.get('pattern').enable();\r\n  }\r\n\r\n  showUsedPatterns(): void {\r\n    this.usedPatterns = this.canvasModelConsistencyService.getPatternHints(\r\n      this.expertModel,\r\n      this.example,\r\n      this.expertModel.getPatterns()\r\n    ).usedPatterns;\r\n  }\r\n\r\n  hideUsedPatterns(): void {\r\n    this.usedPatterns = null;\r\n  }\r\n\r\n  get selectedPattern(): Instance | undefined {\r\n    return this.selectPatternForm.value.pattern;\r\n  }\r\n\r\n  private initConformanceOptionsForm(activeId: string): void {\r\n    if (activeId === 'stepHints') {\r\n      this.conformanceOptionsForm.setValue({\r\n        showWarnings: true,\r\n        showStrengths: true,\r\n        showHints: true,\r\n        showPatternHints: true,\r\n        showUsedPatterns: false,\r\n      });\r\n    } else {\r\n      this.conformanceOptionsForm.setValue({\r\n        showWarnings: false,\r\n        showStrengths: false,\r\n        showHints: false,\r\n        showPatternHints: false,\r\n        showUsedPatterns: false,\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'expertModels']\">\r\n      Canvas Building Blocks\r\n    </a>\r\n    <a\r\n      *ngIf=\"expertModel\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'expertModels', expertModel._id]\"\r\n    >\r\n      {{ expertModel.name }}\r\n    </a>\r\n    <a *ngIf=\"expertModel\" class=\"nav-link active\" [routerLink]=\"[]\">\r\n      {{ example.name }}\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"expertModel\" role=\"main\" class=\"container\">\r\n  <app-instance\r\n    [featureModel]=\"expertModel\"\r\n    [instance]=\"example\"\r\n    [conformance]=\"conformance\"\r\n    [conformanceIsChecked]=\"conformanceIsChecked\"\r\n    [conformanceOptions]=\"conformanceOptionsForm.value\"\r\n    [compareInstance]=\"compareInstance\"\r\n    [percentages]=\"percentages\"\r\n    [patternInstance]=\"patternInstance\"\r\n    [editable]=\"activeId !== 'stepView'\"\r\n    (updateFeatureModel)=\"updateExpertModel()\"\r\n    (createAdaptation)=\"createAdaptation()\"\r\n  ></app-instance>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Steps</h6>\r\n    <ul\r\n      ngbNav\r\n      #nav=\"ngbNav\"\r\n      [(activeId)]=\"activeId\"\r\n      (navChange)=\"switchView($event)\"\r\n      class=\"nav-pills nav-justified\"\r\n    >\r\n      <li ngbNavItem=\"stepCreate\" #stepCreate=\"ngbNavItem\">\r\n        <a ngbNavLink>1. Creation & Conformance</a>\r\n        <ng-template ngbNavContent>\r\n          Create the example and check the conformance with the conformance\r\n          checker\r\n        </ng-template>\r\n      </li>\r\n      <li ngbNavItem=\"stepHints\" #stepHints=\"ngbNavItem\">\r\n        <a ngbNavLink>2. Hints</a>\r\n        <ng-template ngbNavContent> Adapt the example with hints</ng-template>\r\n      </li>\r\n      <li ngbNavItem=\"stepCompare\" #stepCompare=\"ngbNavItem\">\r\n        <a ngbNavLink>3. Compare & Adaption</a>\r\n        <ng-template ngbNavContent>\r\n          Compare the example with other examples and adapt it as needed\r\n        </ng-template>\r\n      </li>\r\n      <li ngbNavItem=\"stepView\">\r\n        <a ngbNavLink>4. View</a>\r\n        <ng-template ngbNavContent> Just view the example</ng-template>\r\n      </li>\r\n    </ul>\r\n    <div class=\"mt-1\" [ngbNavOutlet]=\"nav\"></div>\r\n  </div>\r\n\r\n  <div\r\n    class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n    *ngIf=\"stepCreate.active || stepHints.active\"\r\n  >\r\n    <h6 *ngIf=\"stepCreate.active\" class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Conformance Check\r\n    </h6>\r\n    <h6 *ngIf=\"stepHints.active\" class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Hints\r\n    </h6>\r\n    <div class=\"container\">\r\n      <div class=\"row\" style=\"margin-top: 20px\">\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"!conformanceIsChecked\"\r\n          (click)=\"checkConformance()\"\r\n          class=\"btn btn-dark btn-sm btn-block\"\r\n        >\r\n          <span *ngIf=\"stepCreate.active\"\r\n            >Activate Conformance Checking of Business Model</span\r\n          >\r\n          <span *ngIf=\"stepHints.active\">Show Hints of Business Model</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"conformanceIsChecked\"\r\n          (click)=\"uncheckConformance()\"\r\n          class=\"btn btn-dark btn-sm btn-block\"\r\n        >\r\n          <span *ngIf=\"stepCreate.active\"\r\n            >Deactivate Conformance Checking of Business Model</span\r\n          >\r\n          <span *ngIf=\"stepHints.active\">Hide Hints of Business Model</span>\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"conformanceIsChecked\" style=\"margin-top: 20px\">\r\n        <form [formGroup]=\"conformanceOptionsForm\" *ngIf=\"stepHints.active\">\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showWarnings\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"optionShowWarnings\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"optionShowWarnings\">\r\n              Show weaknesses\r\n              <small class=\"text-muted d-block\"\r\n                >Used features that have a hurt cross-tree relationship to other\r\n                used features</small\r\n              >\r\n            </label>\r\n          </div>\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showStrengths\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"showStrengths\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"showStrengths\">\r\n              Show strengths\r\n              <small class=\"text-muted d-block\"\r\n                >Used features that have a supports cross-tree relationship to\r\n                other used features</small\r\n              >\r\n            </label>\r\n          </div>\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showHints\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"showHints\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"showHints\">\r\n              Show hints\r\n              <small class=\"text-muted d-block\"\r\n                >Unused features that have a supports cross-tree relationship to\r\n                other used features and can be added without requirements and do\r\n                not lead to other errors</small\r\n              >\r\n            </label>\r\n          </div>\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showPatternHints\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"showPatternHints\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"showPatternHints\">\r\n              Show pattern hints\r\n              <small class=\"text-muted d-block\"\r\n                >A pattern is shown as a hint, if at least half of the pattern\r\n                is included in the current business model</small\r\n              >\r\n            </label>\r\n          </div>\r\n          <div class=\"custom-control custom-switch mb-2\">\r\n            <input\r\n              formControlName=\"showUsedPatterns\"\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"showUsedPatterns\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"showUsedPatterns\">\r\n              Show used patterns\r\n              <small class=\"text-muted d-block\"\r\n                >A pattern is shown as used, if it is completely included in the\r\n                current business model</small\r\n              >\r\n            </label>\r\n          </div>\r\n        </form>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <h6>Errors</h6>\r\n            <ul>\r\n              <li *ngFor=\"let error of conformance.errors\">{{ error }}</li>\r\n            </ul>\r\n          </div>\r\n          <div\r\n            class=\"col border-left\"\r\n            *ngIf=\"\r\n              conformanceOptionsForm.value.showWarnings ||\r\n              conformanceOptionsForm.value.showStrengths\r\n            \"\r\n          >\r\n            <div *ngIf=\"conformanceOptionsForm.value.showWarnings\">\r\n              <h6>Weaknesses</h6>\r\n              <ul>\r\n                <li *ngFor=\"let warning of conformance.warnings\">\r\n                  {{ warning }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div *ngIf=\"conformanceOptionsForm.value.showStrengths\">\r\n              <h6>Strengths</h6>\r\n              <ul>\r\n                <li *ngFor=\"let strength of conformance.strengths\">\r\n                  {{ strength }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"col border-left\"\r\n            *ngIf=\"\r\n              conformanceOptionsForm.value.showHints ||\r\n              conformanceOptionsForm.value.showPatternHints ||\r\n              conformanceOptionsForm.value.showUsedPatterns\r\n            \"\r\n          >\r\n            <div *ngIf=\"conformanceOptionsForm.value.showHints\">\r\n              <h6>Hints</h6>\r\n              <ul>\r\n                <li *ngFor=\"let hint of conformance.hints\">{{ hint }}</li>\r\n              </ul>\r\n            </div>\r\n            <div *ngIf=\"conformanceOptionsForm.value.showPatternHints\">\r\n              <h6>Pattern Hints</h6>\r\n              <ul>\r\n                <li *ngFor=\"let hint of conformance.patternHints\">\r\n                  <app-pattern-hint [patternHint]=\"hint\"></app-pattern-hint>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div *ngIf=\"conformanceOptionsForm.value.showUsedPatterns\">\r\n              <h6>Used Patterns</h6>\r\n              <ul>\r\n                <li *ngFor=\"let pattern of conformance.usedPatterns\">\r\n                  <app-pattern-view [pattern]=\"pattern\"></app-pattern-view>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"stepCompare.active\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Patterns</h6>\r\n    <div class=\"container\">\r\n      <div class=\"row\" style=\"margin-top: 20px\">\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"!usedPatterns\"\r\n          (click)=\"showUsedPatterns()\"\r\n          class=\"btn btn-dark btn-sm btn-block\"\r\n        >\r\n          Show used Patterns of Business Model\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"usedPatterns\"\r\n          (click)=\"hideUsedPatterns()\"\r\n          class=\"btn btn-dark btn-sm btn-block\"\r\n        >\r\n          Hide used Patterns of Business Model\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"usedPatterns\" style=\"margin-top: 20px\">\r\n        <h6>Used Patterns</h6>\r\n        <ul>\r\n          <li *ngFor=\"let pattern of usedPatterns\">\r\n            <app-pattern-view [pattern]=\"pattern\"></app-pattern-view>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"stepCompare.active\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Compare</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form [formGroup]=\"selectOtherInstanceForm\" (ngSubmit)=\"compare()\">\r\n        <div class=\"form-group form-row\">\r\n          <label for=\"instance\" class=\"col-sm-4 col-form-label\"\r\n            >Business Model</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <select\r\n              id=\"instance\"\r\n              formControlName=\"instance\"\r\n              class=\"form-control\"\r\n            >\r\n              <ng-container *ngFor=\"let instance of expertModel.getExamples()\">\r\n                <option\r\n                  *ngIf=\"instance.id !== example.id\"\r\n                  [ngValue]=\"instance.id\"\r\n                >\r\n                  {{ instance.name }}\r\n                </option>\r\n              </ng-container>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group form-row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              *ngIf=\"compareInstance === null\"\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!selectOtherInstanceForm.valid\"\r\n            >\r\n              Compare\r\n            </button>\r\n            <button\r\n              *ngIf=\"compareInstance !== null\"\r\n              type=\"button\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              (click)=\"clearCompare()\"\r\n            >\r\n              Clear Compare\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"stepCompare.active\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Show pattern</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form [formGroup]=\"selectPatternForm\" (ngSubmit)=\"showPattern()\">\r\n        <div class=\"form-group form-row\">\r\n          <label for=\"pattern\" class=\"col-sm-4 col-form-label\">Pattern</label>\r\n          <div class=\"col-sm-8\">\r\n            <select id=\"pattern\" formControlName=\"pattern\" class=\"form-control\">\r\n              <ng-container *ngFor=\"let instance of expertModel.getPatterns()\">\r\n                <option [ngValue]=\"instance\">\r\n                  {{ instance.name }}\r\n                </option>\r\n              </ng-container>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div\r\n          *ngIf=\"\r\n            (selectPatternForm.valid || patternInstance != null) &&\r\n            selectedPattern != null &&\r\n            selectedPattern.description\r\n          \"\r\n          class=\"form-group form-row\"\r\n        >\r\n          <label class=\"col-sm-4 col-form-label\">Description</label>\r\n          <div class=\"col-sm-8\">\r\n            {{ selectedPattern.description }}\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group form-row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              *ngIf=\"patternInstance === null\"\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!selectPatternForm.valid\"\r\n            >\r\n              Show\r\n            </button>\r\n            <button\r\n              *ngIf=\"patternInstance !== null\"\r\n              type=\"button\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              (click)=\"clearPattern()\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport { ControlContainer, FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-feature-model-instance-subform',\r\n  templateUrl: './feature-model-instance-subform.component.html',\r\n  styleUrls: ['./feature-model-instance-subform.component.css'],\r\n})\r\nexport class FeatureModelInstanceSubformComponent {\r\n  constructor(private controlContainer: ControlContainer) {}\r\n\r\n  get formGroup(): FormGroup {\r\n    return this.controlContainer.control as FormGroup;\r\n  }\r\n\r\n  get nameControl(): FormControl {\r\n    return this.formGroup.get('name') as FormControl;\r\n  }\r\n}\r\n","<ng-container [formGroup]=\"formGroup\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Artifact Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        [class.is-invalid]=\"nameControl.invalid\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"description\" class=\"col-sm-4 col-form-label\">\r\n      Artifact Description\r\n    </label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"description\"\r\n        class=\"form-control\"\r\n        id=\"description\"\r\n      />\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { ExpertModel } from '../../../canvas-meta-model/expert-model';\r\nimport { ExpertModelService } from '../../../canvas-meta-model/expert-model.service';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { Subscription } from 'rxjs';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\n\r\n@Component({\r\n  selector: 'app-instance-compare-form',\r\n  templateUrl: './instance-compare-form.component.html',\r\n  styleUrls: ['./instance-compare-form.component.css'],\r\n})\r\nexport class InstanceCompareFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() currentlyComparing = false;\r\n  @Input() companyModel: CompanyModel;\r\n  @Input() competitors: Instance[];\r\n\r\n  @Output() compare = new EventEmitter<{\r\n    instance: Instance;\r\n    featureModelId: string;\r\n  }>();\r\n  @Output() clearCompare = new EventEmitter<void>();\r\n\r\n  expertModels: ExpertModel[];\r\n  currentExpertModel: ExpertModel;\r\n\r\n  selectOtherInstanceForm: FormGroup = this.fb.group({\r\n    featureModel: [null, Validators.required],\r\n    instance: [null, Validators.required],\r\n  });\r\n\r\n  private formSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private expertModelService: ExpertModelService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formSubscription = this.featureModelControl.valueChanges.subscribe(\r\n      (value) => {\r\n        this.currentExpertModel = this.expertModels.find(\r\n          (expertModel) => expertModel._id === value\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.companyModel) {\r\n      void this.loadExpertModels();\r\n    }\r\n    if (changes.currentlyComparing) {\r\n      if (changes.currentlyComparing.currentValue) {\r\n        this.selectOtherInstanceForm.disable();\r\n      } else {\r\n        this.selectOtherInstanceForm.enable();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.formSubscription) {\r\n      this.formSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    const featureModel: FeatureModel = this.currentExpertModel\r\n      ? this.currentExpertModel\r\n      : this.companyModel;\r\n    this.compare.emit({\r\n      instance: featureModel.getInstance(this.instanceControl.value),\r\n      featureModelId: featureModel._id,\r\n    });\r\n  }\r\n\r\n  async loadExpertModels() {\r\n    const expertModels: ExpertModel[] = [];\r\n    for (const expertModelId of this.companyModel.expertModelIds) {\r\n      const expertModel = await this.expertModelService.get(expertModelId);\r\n      const featureIds = expertModel\r\n        .getFeatureList()\r\n        .map((feature) => feature.id);\r\n      if (\r\n        featureIds.every(\r\n          (id) =>\r\n            id in\r\n            this.companyModel.expertModelTraces[expertModel._id]\r\n              .expertFeatureIdMap\r\n        ) &&\r\n        expertModel.getExamples().length > 0\r\n      ) {\r\n        expertModels.push(expertModel);\r\n      }\r\n    }\r\n    this.expertModels = expertModels;\r\n  }\r\n\r\n  get featureModelControl(): FormControl {\r\n    return this.selectOtherInstanceForm.get('featureModel') as FormControl;\r\n  }\r\n\r\n  get instanceControl(): FormControl {\r\n    return this.selectOtherInstanceForm.get('instance') as FormControl;\r\n  }\r\n}\r\n","<form [formGroup]=\"selectOtherInstanceForm\" (ngSubmit)=\"submit()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"featureModel\" class=\"col-sm-4 col-form-label\"\r\n      >Compare with</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <select\r\n        id=\"featureModel\"\r\n        formControlName=\"featureModel\"\r\n        class=\"form-control\"\r\n      >\r\n        <option [ngValue]=\"companyModel._id\">Competitors</option>\r\n        <option\r\n          *ngFor=\"let expertModel of expertModels\"\r\n          [ngValue]=\"expertModel._id\"\r\n        >\r\n          Examples of {{ expertModel.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"form-group row\"\r\n    *ngIf=\"featureModelControl.value === companyModel._id\"\r\n  >\r\n    <label for=\"instance\" class=\"col-sm-4 col-form-label\">Competitor</label>\r\n    <div class=\"col-sm-8\">\r\n      <select id=\"instance\" formControlName=\"instance\" class=\"form-control\">\r\n        <ng-container *ngFor=\"let instance of competitors\">\r\n          <option [ngValue]=\"instance.id\">\r\n            {{ instance.name }}\r\n          </option>\r\n        </ng-container>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"form-group row\"\r\n    *ngIf=\"\r\n      featureModelControl.value != null &&\r\n      featureModelControl.value !== companyModel._id\r\n    \"\r\n  >\r\n    <label for=\"instanceExpertModel\" class=\"col-sm-4 col-form-label\"\r\n      >Example</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <select\r\n        id=\"instanceExpertModel\"\r\n        formControlName=\"instance\"\r\n        class=\"form-control\"\r\n      >\r\n        <option\r\n          *ngFor=\"let example of currentExpertModel.getExamples()\"\r\n          [ngValue]=\"example.id\"\r\n        >\r\n          {{ example.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        *ngIf=\"!currentlyComparing\"\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        [disabled]=\"!selectOtherInstanceForm.valid\"\r\n      >\r\n        Compare\r\n      </button>\r\n      <button\r\n        *ngIf=\"currentlyComparing\"\r\n        type=\"button\"\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        (click)=\"clearCompare.emit()\"\r\n      >\r\n        Clear Compare\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\n\r\n@Component({\r\n  selector: 'app-instance-form',\r\n  templateUrl: './instance-form.component.html',\r\n  styleUrls: ['./instance-form.component.css'],\r\n})\r\nexport class InstanceFormComponent implements OnChanges {\r\n  @Input() instance: Instance;\r\n\r\n  @Output() submitInstanceForm = new EventEmitter<FormGroup>();\r\n\r\n  instanceForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.instance) {\r\n      this.loadForm(changes.instance.currentValue);\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitInstanceForm.emit(this.instanceForm);\r\n    this.loadForm(this.instance);\r\n  }\r\n\r\n  private loadForm(instance: Instance) {\r\n    this.instanceForm = this.fb.group({\r\n      name: [instance.name, Validators.required],\r\n      description: [instance.description ? instance.description : ''],\r\n    });\r\n  }\r\n}\r\n","<form [formGroup]=\"instanceForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Instance Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"description\" class=\"col-sm-4 col-form-label\"\r\n      >Instance Description</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"description\"\r\n        class=\"form-control\"\r\n        id=\"description\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        [disabled]=\"!instanceForm.valid\"\r\n      >\r\n        Update Instance\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, Input } from '@angular/core';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { ExpertModel } from '../../../canvas-meta-model/expert-model';\r\n\r\n@Component({\r\n  selector: 'app-instance-info-box',\r\n  templateUrl: './instance-info-box.component.html',\r\n  styleUrls: ['./instance-info-box.component.css'],\r\n})\r\nexport class InstanceInfoBoxComponent {\r\n  @Input() featureModel: FeatureModel;\r\n  @Input() instance: Instance;\r\n\r\n  expertModelTypeName(): string {\r\n    return ExpertModel.typeName;\r\n  }\r\n}\r\n","<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">Info</h6>\r\n  <table class=\"table table-sm mb-0\" style=\"table-layout: fixed\">\r\n    <tbody>\r\n      <tr class=\"table-borderless\">\r\n        <th scope=\"row\" style=\"width: 250px\">Name</th>\r\n        <td>{{ instance.name }}</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">Description</th>\r\n        <td>{{ instance.description }}</td>\r\n      </tr>\r\n      <tr *ngIf=\"featureModel.type === expertModelTypeName()\">\r\n        <th scope=\"row\">Type</th>\r\n        <td>{{ instance.type }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\n\r\n@Component({\r\n  selector: 'app-instance-list',\r\n  templateUrl: './instance-list.component.html',\r\n  styleUrls: ['./instance-list.component.css'],\r\n})\r\nexport class InstanceListComponent implements OnInit {\r\n  @Input() formTitle: string;\r\n  @Input() listTitle: string;\r\n  @Input() instances: Instance[];\r\n\r\n  @Input() viewInstanceLink: (instance: Instance) => string[];\r\n\r\n  @Output() addInstance = new EventEmitter<FormGroup>();\r\n  @Output() deleteInstance = new EventEmitter<number>();\r\n\r\n  instanceForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.loadForm();\r\n  }\r\n\r\n  addInstanceForwardEmitter() {\r\n    this.addInstance.emit(this.instanceForm);\r\n    this.loadForm();\r\n  }\r\n\r\n  private loadForm() {\r\n    this.instanceForm = this.fb.group({ name: ['', Validators.required] });\r\n  }\r\n}\r\n","<!-- View instances -->\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">{{ listTitle }}</h6>\r\n\r\n  <ul class=\"list-group inner\" style=\"margin: 5px\">\r\n    <li *ngFor=\"let instance of instances\" class=\"list-group-item\">\r\n      <app-results-list-item\r\n        [viewLink]=\"viewInstanceLink(instance)\"\r\n        (delete)=\"deleteInstance.emit(instance.id)\"\r\n      >\r\n        <ng-container itemTitle>\r\n          {{ instance.name }}\r\n        </ng-container>\r\n        <ng-container itemDescription>\r\n          {{ instance.description }}\r\n        </ng-container>\r\n      </app-results-list-item>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<!-- Add instance -->\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">{{ formTitle }}</h6>\r\n  <div class=\"text-muted pt-3\">\r\n    <form [formGroup]=\"instanceForm\" (ngSubmit)=\"addInstanceForwardEmitter()\">\r\n      <div class=\"form-group row\">\r\n        <label for=\"name\" class=\"col-sm-4 col-form-label\">Instance Name</label>\r\n        <div class=\"col-sm-8\">\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"name\"\r\n            class=\"form-control\"\r\n            id=\"name\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-sm-12\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-sm btn-dark btn-block\"\r\n            [disabled]=\"!instanceForm.valid\"\r\n          >\r\n            {{ formTitle }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { ExpertModel } from '../../../canvas-meta-model/expert-model';\r\n\r\n@Component({\r\n  selector: 'app-instance-select-pattern-form',\r\n  templateUrl: './instance-select-pattern-form.component.html',\r\n  styleUrls: ['./instance-select-pattern-form.component.css'],\r\n})\r\nexport class InstanceSelectPatternFormComponent implements OnChanges {\r\n  @Input() expertModels: ExpertModel[] = [];\r\n  @Input() showsPattern = false;\r\n\r\n  @Output() showPattern = new EventEmitter<{\r\n    instance: Instance;\r\n    featureModelId: string;\r\n  }>();\r\n  @Output() clearPattern = new EventEmitter<void>();\r\n\r\n  selectPatternForm: FormGroup = this.fb.group({\r\n    featureModel: [null, Validators.required],\r\n    instance: [null, Validators.required],\r\n  });\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.showsPattern) {\r\n      if (changes.showsPattern.currentValue) {\r\n        this.selectPatternForm.disable();\r\n      } else {\r\n        this.selectPatternForm.enable();\r\n      }\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.showPattern.emit({\r\n      instance: this.instance,\r\n      featureModelId: this.expertModel._id,\r\n    });\r\n  }\r\n\r\n  get expertModel(): ExpertModel | undefined {\r\n    return this.featureModelControl.value;\r\n  }\r\n\r\n  get instance(): Instance | undefined {\r\n    return this.instanceControl.value;\r\n  }\r\n\r\n  get featureModelControl(): FormControl {\r\n    return this.selectPatternForm.get('featureModel') as FormControl;\r\n  }\r\n\r\n  get instanceControl(): FormControl {\r\n    return this.selectPatternForm.get('instance') as FormControl;\r\n  }\r\n}\r\n","<form [formGroup]=\"selectPatternForm\" (ngSubmit)=\"submit()\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"featureModel\" class=\"col-sm-4 col-form-label\"\r\n      >Patterns of</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <select\r\n        id=\"featureModel\"\r\n        formControlName=\"featureModel\"\r\n        class=\"form-control\"\r\n      >\r\n        <option\r\n          *ngFor=\"let expertModel of expertModels\"\r\n          [ngValue]=\"expertModel\"\r\n        >\r\n          {{ expertModel.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"instance\" class=\"col-sm-4 col-form-label\">Pattern</label>\r\n    <div class=\"col-sm-8\">\r\n      <select id=\"instance\" formControlName=\"instance\" class=\"form-control\">\r\n        <option\r\n          *ngFor=\"let instance of expertModel ? expertModel.getPatterns() : []\"\r\n          [ngValue]=\"instance\"\r\n        >\r\n          {{ instance.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div\r\n    *ngIf=\"\r\n      (selectPatternForm.valid || showsPattern) &&\r\n      instance != null &&\r\n      instance.description\r\n    \"\r\n    class=\"form-group form-row\"\r\n  >\r\n    <label class=\"col-sm-4 col-form-label\">Description</label>\r\n    <div class=\"col-sm-8\">\r\n      {{ instance.description }}\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        *ngIf=\"!showsPattern\"\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        [disabled]=\"!selectPatternForm.valid\"\r\n      >\r\n        Show\r\n      </button>\r\n      <button\r\n        *ngIf=\"showsPattern\"\r\n        type=\"button\"\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        (click)=\"clearPattern.emit()\"\r\n      >\r\n        Clear\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { FeatureModel } from '../../canvas-meta-model/feature-model';\r\nimport { Instance } from '../../canvas-meta-model/instance';\r\nimport { Feature } from '../../canvas-meta-model/feature';\r\nimport { CompanyModel } from '../../canvas-meta-model/company-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InstanceService {\r\n  /**\r\n   * Generates a name for an adaption of an instance from the current name\r\n   *\r\n   * @param currentName the current name\r\n   * @return the adapted name\r\n   */\r\n  getAdaptionName(currentName: string): string {\r\n    const nameSplit = currentName.split(' - Adaptation#');\r\n    let adaptationName;\r\n    if (\r\n      nameSplit.length > 1 &&\r\n      !isNaN(parseInt(nameSplit[nameSplit.length - 1], 10))\r\n    ) {\r\n      adaptationName =\r\n        nameSplit[0] +\r\n        ' - Adaptation#' +\r\n        (parseInt(nameSplit[nameSplit.length - 1], 10) + 1);\r\n    } else {\r\n      adaptationName = nameSplit[0] + ' - Adaptation#1';\r\n    }\r\n    return adaptationName;\r\n  }\r\n\r\n  /**\r\n   * Compare two instances and get a feature map with comparison percentages per feature\r\n   *\r\n   * @param featureModel the feature model of the instances\r\n   * @param instanceA the id of the first instance\r\n   * @param instanceB the id of the second instance\r\n   * @return a mapping with feature id to percentage\r\n   */\r\n  compareInstances(\r\n    featureModel: FeatureModel,\r\n    instanceA: Instance,\r\n    instanceB: Instance\r\n  ): { [id: string]: number } {\r\n    const features: Feature[] = [];\r\n    featureModel.iterateFeatures((feature) => {\r\n      features.unshift(feature);\r\n      return false;\r\n    });\r\n    const map: { [id: string]: number } = {};\r\n    const outMap: { [id: string]: number } = {};\r\n    for (const feature of features) {\r\n      const inA = instanceA.usedFeatures.includes(feature.id);\r\n      const inB = instanceB.usedFeatures.includes(feature.id);\r\n      if (inA === inB) {\r\n        if (inA) {\r\n          const subfeatures = Object.keys(feature.subfeatures).filter(\r\n            (id) => id in map\r\n          );\r\n          if (subfeatures.length > 0) {\r\n            const count = subfeatures\r\n              .map((id) => outMap[id])\r\n              .reduce((agg, f) => agg + f, 0);\r\n            map[feature.id] = count / subfeatures.length;\r\n            outMap[feature.id] = (count + 100) / (subfeatures.length + 1);\r\n          } else {\r\n            map[feature.id] = 100;\r\n            outMap[feature.id] = 100;\r\n          }\r\n        }\r\n      } else {\r\n        map[feature.id] = 0;\r\n        outMap[feature.id] = 0;\r\n      }\r\n    }\r\n    return map;\r\n  }\r\n\r\n  /**\r\n   * Convert an expert instance to a company model instance. Requires that all features of the expert model are merged.\r\n   *\r\n   * @param companyModel the company model\r\n   * @param expertModelId the id of the expert model\r\n   * @param expertInstance the instance of the expert model\r\n   * @return the converted instance\r\n   */\r\n  convertExpertInstance(\r\n    companyModel: CompanyModel,\r\n    expertModelId: string,\r\n    expertInstance: Instance\r\n  ): Instance {\r\n    const instance = new Instance(undefined, expertInstance);\r\n    instance.usedFeatures = instance.usedFeatures.map(\r\n      (expertFeatureId) =>\r\n        companyModel.expertModelTraces[expertModelId].expertFeatureIdMap[\r\n          expertFeatureId\r\n        ]\r\n    );\r\n\r\n    // Add missing main features to instance\r\n    companyModel.iterateFeatures((feature) => {\r\n      if (instance.usedFeatures.includes(feature.id)) {\r\n        let parent = feature.parent;\r\n        while (parent !== null) {\r\n          if (!instance.usedFeatures.includes(parent.id)) {\r\n            instance.usedFeatures.push(parent.id);\r\n            parent = parent.parent;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return instance;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Feature, FeatureInit } from '../../../canvas-meta-model/feature';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { InstanceService } from '../instance.service';\r\nimport { ConformanceReport } from '../../../canvas-meta-model/conformance-report';\r\n\r\n@Component({\r\n  selector: 'app-instance',\r\n  templateUrl: './instance.component.html',\r\n  styleUrls: ['./instance.component.css'],\r\n})\r\nexport class InstanceComponent {\r\n  @Input() featureModel: FeatureModel;\r\n  @Input() instance: Instance;\r\n\r\n  @Input() editable = true;\r\n  @Input() adaptable = true;\r\n  @Input() updatable = true;\r\n\r\n  @Input() conformanceIsChecked = false;\r\n  @Input() conformance: ConformanceReport = new ConformanceReport();\r\n  @Input() conformanceOptions: {\r\n    showWarnings: boolean;\r\n    showStrengths: boolean;\r\n    showHints: boolean;\r\n    showPatternHints: boolean;\r\n  } = {\r\n    showHints: false,\r\n    showPatternHints: false,\r\n    showStrengths: false,\r\n    showWarnings: false,\r\n  };\r\n\r\n  @Input() patternInstance: Instance;\r\n\r\n  @Input() compareInstance: Instance;\r\n  @Input() percentages: { [id: string]: number } = null;\r\n\r\n  @Output() updateFeatureModel = new EventEmitter<void>();\r\n  @Output() createAdaptation = new EventEmitter<void>();\r\n\r\n  private modalReference: NgbModalRef;\r\n  modalFeature: Feature;\r\n\r\n  @ViewChild('addModal', { static: true }) addModal: unknown;\r\n  @ViewChild('deleteModal', { static: true }) deleteModal: unknown;\r\n\r\n  constructor(\r\n    private instanceService: InstanceService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  /**\r\n   * Opens the add modal to add a decision.\r\n   *\r\n   * @param featureId id of the parent feature\r\n   */\r\n  openAddDecisionModal(featureId: string): void {\r\n    this.modalFeature = this.featureModel.getFeature(featureId);\r\n    this.modalReference = this.modalService.open(this.addModal, { size: 'lg' });\r\n  }\r\n\r\n  /**\r\n   * Add feature and add as decision\r\n   *\r\n   * @param feature the feature to add (values will be copied to a new object)\r\n   */\r\n  addFeature(feature: FeatureInit): void {\r\n    const addedFeature = this.featureModel.addFeature(\r\n      feature,\r\n      this.modalFeature.id\r\n    );\r\n    this.featureModel.addFeatureToInstance(this.instance.id, addedFeature.id);\r\n    this.updateFeatureModel.emit();\r\n  }\r\n\r\n  /**\r\n   * Add a decision\r\n   *\r\n   * @param featureId id of the feature to add\r\n   */\r\n  addDecision(featureId: string): void {\r\n    this.featureModel.addFeatureToInstance(this.instance.id, featureId);\r\n    this.updateFeatureModel.emit();\r\n  }\r\n\r\n  /**\r\n   * Opens the delete modal to delete a decision.\r\n   *\r\n   * @param featureId id of the feature to delete\r\n   */\r\n  openDeleteDecisionModal(featureId: string): void {\r\n    this.modalFeature = this.featureModel.getFeature(featureId);\r\n    this.modalReference = this.modalService.open(this.deleteModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete a decision\r\n   *\r\n   * @param featureId id of the feature to delete\r\n   */\r\n  deleteDecision(featureId: string): void {\r\n    this.featureModel.removeFeatureFromInstance(this.instance.id, featureId);\r\n    this.updateFeatureModel.emit();\r\n    this.closeModal();\r\n  }\r\n\r\n  update(patternInfo: Partial<Instance>): void {\r\n    this.featureModel.updateInstance(this.instance.id, patternInfo);\r\n    this.updateFeatureModel.emit();\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.modalReference.close();\r\n    this.modalFeature = null;\r\n    this.modalReference = null;\r\n  }\r\n}\r\n","<ng-template #deleteModal>\r\n  <app-delete-decision-modal\r\n    [feature]=\"modalFeature\"\r\n    (closeModal)=\"closeModal()\"\r\n    (deleteBusinessModelDecision)=\"deleteDecision($event)\"\r\n  ></app-delete-decision-modal>\r\n</ng-template>\r\n\r\n<ng-template #addModal>\r\n  <app-add-decision-modal\r\n    [feature]=\"modalFeature\"\r\n    [instance]=\"instance\"\r\n    (closeModal)=\"closeModal()\"\r\n    (addBusinessModelDecision)=\"addDecision($event)\"\r\n    (addFeature)=\"addFeature($event)\"\r\n  ></app-add-decision-modal>\r\n</ng-template>\r\n\r\n<app-instance-info-box\r\n  [featureModel]=\"featureModel\"\r\n  [instance]=\"instance\"\r\n></app-instance-info-box>\r\n\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">\r\n    {{ instance.name }} of {{ featureModel.name }}\r\n  </h6>\r\n\r\n  <!-- Build Business Model Canvas -->\r\n  <app-canvas\r\n    [patternInstance]=\"patternInstance\"\r\n    [percentages]=\"percentages\"\r\n    [compareInstance]=\"compareInstance\"\r\n    [featureModel]=\"featureModel\"\r\n    [conformance]=\"conformance\"\r\n    [conformanceOptions]=\"conformanceOptions\"\r\n    [instance]=\"instance\"\r\n    [editable]=\"editable\"\r\n    (addFeatureModal)=\"openAddDecisionModal($event)\"\r\n    (deleteFeatureModal)=\"openDeleteDecisionModal($event)\"\r\n  ></app-canvas>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-2\"><strong>Legend:</strong></div>\r\n      <div class=\"col-2\">Modification:</div>\r\n      <div class=\"col-4\">\r\n        <i class=\"fas fa-plus-square\"></i> Add Business Model Decision\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"fas fa-minus-square\"></i> Delete Business Model Decision\r\n      </div>\r\n    </div>\r\n    <ng-container *ngIf=\"conformanceIsChecked\">\r\n      <div class=\"row\">\r\n        <div class=\"col-2\">&nbsp;</div>\r\n        <div class=\"col-2\">Conformance:</div>\r\n        <div class=\"col-4\">\r\n          <span class=\"text-danger\">Conformance Error (see below)</span>\r\n        </div>\r\n        <div class=\"col-4\" *ngIf=\"conformanceOptions.showWarnings\">\r\n          <span class=\"text-warning\">Weakness (see below)</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-2\">&nbsp;</div>\r\n        <div class=\"col-2\">&nbsp;</div>\r\n        <div class=\"col-4\">\r\n          <em class=\"text-danger\">Missing Mandatory Decision</em>\r\n        </div>\r\n        <div class=\"col-4\" *ngIf=\"conformanceOptions.showStrengths\">\r\n          <span class=\"text-success\">Strength (see below)</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"conformanceOptions.showHints\">\r\n        <div class=\"col-2\">&nbsp;</div>\r\n        <div class=\"col-2\">&nbsp;</div>\r\n        <div class=\"col-4\">&nbsp;</div>\r\n        <div class=\"col-4\">\r\n          <em class=\"text-success\">Hint (see below)</em>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"conformanceOptions.showPatternHints\">\r\n        <div class=\"col-2\">&nbsp;</div>\r\n        <div class=\"col-2\">&nbsp;</div>\r\n        <div class=\"col-4\">&nbsp;</div>\r\n        <div class=\"col-4\">\r\n          <em class=\"text-muted\">Pattern Hint (see below)</em>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"compareInstance\">\r\n      <div class=\"row\">\r\n        <div class=\"col-2\">&nbsp;</div>\r\n        <div class=\"col-2\">Compare:</div>\r\n        <div class=\"col-4\">\r\n          <em class=\"text-danger\">Feature only in other model</em>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <span class=\"text-success\">Feature only in this model</span>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"patternInstance\">\r\n      <div class=\"row\">\r\n        <div class=\"col-2\">&nbsp;</div>\r\n        <div class=\"col-2\">Pattern:</div>\r\n        <div class=\"col-4\"><em class=\"text-danger\">Feature missing</em></div>\r\n        <div class=\"col-4\"><span class=\"text-success\">Feature used</span></div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"adaptable\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">Adapt Instance</h6>\r\n  <div class=\"container\">\r\n    <div class=\"row\" style=\"margin-top: 20px\">\r\n      <button\r\n        type=\"button\"\r\n        (click)=\"createAdaptation.emit()\"\r\n        class=\"btn btn-dark btn-sm btn-block\"\r\n      >\r\n        Create New Instance Adaptation\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"updatable\">\r\n  <h6 class=\"border-bottom border-gray pb-2 mb-0\">Update Instance</h6>\r\n\r\n  <div class=\"text-muted pt-3\">\r\n    <app-instance-form\r\n      [instance]=\"instance\"\r\n      (submitInstanceForm)=\"update($event.value)\"\r\n    ></app-instance-form>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\n\r\n@Component({\r\n  selector: 'app-pattern-description-modal',\r\n  templateUrl: './pattern-description-modal.component.html',\r\n  styleUrls: ['./pattern-description-modal.component.css'],\r\n})\r\nexport class PatternDescriptionModalComponent {\r\n  @Input() pattern: Instance;\r\n\r\n  constructor(private activeModal: NgbActiveModal) {}\r\n\r\n  dismiss(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">Description of pattern {{ pattern.name }}</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n    <span class=\"sr-only\">Close Window</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  {{ pattern.description }}\r\n</div>\r\n<div class=\"modal-footer d-flex\">\r\n  <button type=\"button\" class=\"btn btn-dark ml-auto\" (click)=\"dismiss()\">\r\n    Close\r\n  </button>\r\n</div>\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { PatternHint } from '../../../canvas-meta-model/conformance-report';\r\n\r\n@Component({\r\n  selector: 'app-pattern-hint',\r\n  templateUrl: './pattern-hint.component.html',\r\n  styleUrls: ['./pattern-hint.component.css'],\r\n})\r\nexport class PatternHintComponent implements OnChanges {\r\n  @Input() patternHint: PatternHint;\r\n\r\n  missingFeaturesInfo: string;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.patternHint) {\r\n      this.buildMissingFeaturesInfo();\r\n    }\r\n  }\r\n\r\n  private buildMissingFeaturesInfo(): void {\r\n    this.missingFeaturesInfo = this.patternHint.missingFeatures\r\n      .map((feature) => feature.name)\r\n      .join(', ');\r\n  }\r\n}\r\n","You could add the pattern\r\n<app-pattern-view [pattern]=\"patternHint.pattern\"></app-pattern-view> by adding\r\nthe following features: {{ missingFeaturesInfo }}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PatternDescriptionModalComponent } from '../pattern-description-modal/pattern-description-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-pattern-view',\r\n  templateUrl: './pattern-view.component.html',\r\n  styleUrls: ['./pattern-view.component.css'],\r\n})\r\nexport class PatternViewComponent {\r\n  @Input() pattern: Instance;\r\n\r\n  constructor(private modalService: NgbModal) {}\r\n\r\n  openDescription(): void {\r\n    const modal = this.modalService.open(PatternDescriptionModalComponent, {\r\n      size: 'lg',\r\n    });\r\n    modal.componentInstance.pattern = this.pattern;\r\n  }\r\n}\r\n","<span\r\n  class=\"btn btn-link p-0 border-0 align-baseline\"\r\n  (click)=\"openDescription()\"\r\n  >{{ pattern.name }}</span\r\n>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Instance } from '../../../canvas-meta-model/instance';\r\nimport { ExpertModel } from '../../../canvas-meta-model/expert-model';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExpertModelService } from '../../../canvas-meta-model/expert-model.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InstanceService } from '../instance.service';\r\n\r\n@Component({\r\n  selector: 'app-pattern',\r\n  templateUrl: './pattern.component.html',\r\n  styleUrls: ['./pattern.component.css'],\r\n})\r\nexport class PatternComponent implements OnInit {\r\n  expertModel: ExpertModel;\r\n  pattern: Instance;\r\n\r\n  private routeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private expertModelService: ExpertModelService,\r\n    private instanceService: InstanceService,\r\n    private modalService: NgbModal,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.routeSubscription = this.route.paramMap.subscribe((paramMap) => {\r\n      const expertModelId = paramMap.get('id');\r\n      const patternId = +paramMap.get('patternId');\r\n\r\n      void this.load(expertModelId, patternId);\r\n    });\r\n  }\r\n\r\n  async load(expertModelId, patternId) {\r\n    const expertModel = await this.expertModelService.get(expertModelId);\r\n    this.expertModel = expertModel;\r\n    this.pattern = expertModel.getInstance(patternId);\r\n  }\r\n\r\n  async updateExpertModel() {\r\n    await this.expertModelService.save(this.expertModel);\r\n    await this.load(this.expertModel._id, this.pattern.id);\r\n  }\r\n\r\n  /**\r\n   * Create adaptation of the pattern\r\n   */\r\n  async createAdaptation() {\r\n    const adaptationName = this.instanceService.getAdaptionName(\r\n      this.pattern.name\r\n    );\r\n    this.expertModel.adaptInstance(this.pattern.id, adaptationName);\r\n    const instance =\r\n      this.expertModel.instances[this.expertModel.instances.length - 1];\r\n    await this.expertModelService.save(this.expertModel);\r\n    await this.router.navigate([\r\n      'expertModels',\r\n      this.expertModel._id,\r\n      'patterns',\r\n      instance.id,\r\n    ]);\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'expertModels']\">\r\n      Canvas Building Blocks\r\n    </a>\r\n    <a\r\n      *ngIf=\"expertModel\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'expertModels', expertModel._id]\"\r\n    >\r\n      {{ expertModel.name }}\r\n    </a>\r\n    <a *ngIf=\"expertModel\" class=\"nav-link active\" [routerLink]=\"[]\">\r\n      {{ pattern.name }}\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"expertModel\" role=\"main\" class=\"container\">\r\n  <app-instance\r\n    [featureModel]=\"expertModel\"\r\n    [instance]=\"pattern\"\r\n    (updateFeatureModel)=\"updateExpertModel()\"\r\n    (createAdaptation)=\"createAdaptation()\"\r\n  ></app-instance>\r\n</main>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MergeService } from '../merge.service';\r\nimport { ExpertModelService } from '../../../canvas-meta-model/expert-model.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ExpertModelEntry } from '../../../canvas-meta-model/expert-model';\r\n\r\n@Component({\r\n  selector: 'app-merge-expert-models',\r\n  templateUrl: './merge-expert-models.component.html',\r\n  styleUrls: ['./merge-expert-models.component.css'],\r\n})\r\nexport class MergeExpertModelsComponent implements OnInit, OnDestroy {\r\n  companyModelId: string;\r\n\r\n  selectedExpertModelList: ExpertModelEntry[];\r\n  selectedExpertModelForm = this.fb.group({\r\n    expertModelId: [null, Validators.required],\r\n  });\r\n  unselectedExpertModelList: ExpertModelEntry[];\r\n\r\n  private routeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private expertModelService: ExpertModelService,\r\n    private fb: FormBuilder,\r\n    private mergeService: MergeService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.routeSubscription = this.route.paramMap.subscribe((paramMap) => {\r\n      this.companyModelId = paramMap.get('companyModelId');\r\n      void this.loadExpertModels(this.companyModelId);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.routeSubscription) {\r\n      this.routeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async selectExpertModel(): Promise<void> {\r\n    await this.mergeService.selectExpertModel(\r\n      this.companyModelId,\r\n      this.selectedExpertModelForm.value.expertModelId\r\n    );\r\n    this.selectedExpertModelForm.reset();\r\n    await this.loadExpertModels(this.companyModelId);\r\n  }\r\n\r\n  async unselectExpertModel(expertModelId: string): Promise<void> {\r\n    await this.mergeService.unselectExpertModel(\r\n      this.companyModelId,\r\n      expertModelId\r\n    );\r\n    await this.loadExpertModels(this.companyModelId);\r\n  }\r\n\r\n  async viewExpertModel(expertModelId: string): Promise<void> {\r\n    await this.router.navigate(['/expertModels', expertModelId]);\r\n  }\r\n\r\n  async mergeExpertModel(expertModelId: string): Promise<void> {\r\n    void this.router.navigate(['/merge', this.companyModelId, expertModelId]);\r\n  }\r\n\r\n  private async loadExpertModels(companyModelId: string): Promise<void> {\r\n    await this.loadSelectedExpertModels(companyModelId);\r\n    await this.loadUnselectedExpertModels(companyModelId);\r\n  }\r\n\r\n  private async loadSelectedExpertModels(\r\n    companyModelId: string\r\n  ): Promise<void> {\r\n    this.selectedExpertModelList =\r\n      await this.mergeService.getSelectedExpertModels(companyModelId);\r\n  }\r\n\r\n  private async loadUnselectedExpertModels(\r\n    companyModelId: string\r\n  ): Promise<void> {\r\n    this.unselectedExpertModelList =\r\n      await this.mergeService.getUnselectedExpertModels(companyModelId);\r\n  }\r\n}\r\n","<main class=\"container\">\r\n  <!-- List expert models -->\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Selected Canvas Building Blocks\r\n    </h6>\r\n\r\n    <ul\r\n      *ngIf=\"selectedExpertModelList\"\r\n      class=\"list-group inner\"\r\n      style=\"margin: 5px\"\r\n    >\r\n      <li\r\n        *ngFor=\"let em of selectedExpertModelList\"\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-center\r\n        \"\r\n      >\r\n        <span>{{ em.name }}</span>\r\n        <span>\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"mergeExpertModel(em._id)\"\r\n            class=\"btn btn-warning btn-xs\"\r\n          >\r\n            Merge</button\r\n          >&nbsp;\r\n          <button\r\n            (click)=\"viewExpertModel(em._id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-dark btn-xs\"\r\n          >\r\n            View</button\r\n          >&nbsp;\r\n          <button\r\n            (click)=\"unselectExpertModel(em._id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Unselect\r\n          </button>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- Select expert model -->\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Select Canvas Building Block\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"selectedExpertModelForm\"\r\n        (ngSubmit)=\"selectExpertModel()\"\r\n      >\r\n        <div class=\"form-group row\">\r\n          <label for=\"expertModelSelector\" class=\"col-sm-4 col-form-label\"\r\n            >Canvas Building Block</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <select\r\n              id=\"expertModelSelector\"\r\n              formControlName=\"expertModelId\"\r\n              class=\"form-control\"\r\n            >\r\n              <option\r\n                *ngFor=\"let em of unselectedExpertModelList\"\r\n                [value]=\"em._id\"\r\n              >\r\n                {{ em.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!selectedExpertModelForm.valid\"\r\n            >\r\n              Add Canvas Building Block\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\n\r\n@Component({\r\n  selector: 'app-merge-into-tree',\r\n  templateUrl: './merge-into-tree.component.html',\r\n  styleUrls: ['./merge-into-tree.component.css'],\r\n})\r\nexport class MergeIntoTreeComponent {\r\n  @Input() expertModelId: string;\r\n  @Input() features: { [id: string]: Feature };\r\n\r\n  @Output() openTrace = new EventEmitter<string>();\r\n  @Output() openDependencies = new EventEmitter<string>();\r\n  @Output() updateFeature = new EventEmitter<string>();\r\n  @Output() deleteFeature = new EventEmitter<string>();\r\n\r\n  @Input() openPanels: string[];\r\n\r\n  panelChange(id: string, state: boolean) {\r\n    if (state && !this.openPanels.includes(id)) {\r\n      this.openPanels.push(id);\r\n    } else if (!state && this.openPanels.includes(id)) {\r\n      this.openPanels.splice(this.openPanels.indexOf(id), 1);\r\n    }\r\n  }\r\n\r\n  asList(map: { [id: string]: Feature }): Feature[] {\r\n    return Object.values(map);\r\n  }\r\n}\r\n","<ngb-accordion\r\n  *ngIf=\"features\"\r\n  class=\"list-group inner\"\r\n  style=\"margin: 5px\"\r\n  (panelChange)=\"panelChange($event.panelId, $event.nextState)\"\r\n  [activeIds]=\"openPanels\"\r\n>\r\n  <ngb-panel\r\n    *ngFor=\"let f of asList(features)\"\r\n    [id]=\"f.fixId\"\r\n    class=\"list-group-item justify-content-between align-items-center\"\r\n  >\r\n    <ng-template ngbPanelHeader>\r\n      <div class=\"d-flex justify-content-between align-items-center\">\r\n        <div class=\"d-flex align-items-baseline\">\r\n          <ng-container *ngIf=\"f.type === 'mandatory'\">\r\n            <i\r\n              class=\"fa fa-circle mr-1\"\r\n              aria-hidden=\"true\"\r\n              title=\"mandatory\"\r\n            ></i>\r\n            <span class=\"sr-only\">mandatory</span>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"f.type === 'optional'\">\r\n            <i\r\n              class=\"fa fa-circle-o mr-1\"\r\n              aria-hidden=\"true\"\r\n              title=\"optional\"\r\n            ></i>\r\n            <span class=\"sr-only\">optional</span>\r\n          </ng-container>\r\n          <button\r\n            *ngIf=\"asList(f.subfeatures).length > 0\"\r\n            class=\"btn btn-link p-0 mr-1\"\r\n            ngbPanelToggle\r\n          >\r\n            {{ f.name }}\r\n          </button>\r\n          <button\r\n            *ngIf=\"asList(f.subfeatures).length === 0\"\r\n            class=\"btn p-0 mr-1\"\r\n          >\r\n            {{ f.name }}\r\n          </button>\r\n          <small class=\"text-muted mr-1\" *ngIf=\"f.description\">{{\r\n            f.description\r\n          }}</small>\r\n          <ng-container *ngIf=\"f.subfeatureConnections === 'or'\">\r\n            <i\r\n              class=\"fa fa-caret-up\"\r\n              aria-hidden=\"true\"\r\n              title=\"or subfeatures\"\r\n            ></i>\r\n            <span class=\"sr-only\">or subfeatures</span>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"f.subfeatureConnections === 'xor'\">\r\n            <i\r\n              class=\"fa fa-angle-up\"\r\n              aria-hidden=\"true\"\r\n              title=\"xor subfeatures\"\r\n            ></i>\r\n            <span class=\"sr-only\">xor subfeatures</span>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            *ngIf=\"!f.relationships.hasNoRelationships()\"\r\n            class=\"btn btn-dark btn-xs mr-1\"\r\n            (click)=\"openDependencies.emit(f.id)\"\r\n          >\r\n            Show Dependencies\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary btn-xs mr-1\"\r\n            *ngIf=\"f.expertModelTrace[expertModelId]\"\r\n            (click)=\"openTrace.emit(f.id)\"\r\n          >\r\n            Show Trace\r\n          </button>\r\n          <button\r\n            (click)=\"updateFeature.emit(f.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-warning btn-xs mr-1\"\r\n          >\r\n            Update\r\n          </button>\r\n          <button\r\n            *ngIf=\"f.parent !== null\"\r\n            (click)=\"deleteFeature.emit(f.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs mr-1\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template ngbPanelContent>\r\n      <app-merge-into-tree\r\n        [features]=\"f.subfeatures\"\r\n        [expertModelId]=\"expertModelId\"\r\n        [openPanels]=\"openPanels\"\r\n        (openDependencies)=\"openDependencies.emit($event)\"\r\n        (openTrace)=\"openTrace.emit($event)\"\r\n        (updateFeature)=\"updateFeature.emit($event)\"\r\n        (deleteFeature)=\"deleteFeature.emit($event)\"\r\n      ></app-merge-into-tree>\r\n    </ng-template>\r\n  </ngb-panel>\r\n</ngb-accordion>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ExpertModel } from '../../../canvas-meta-model/expert-model';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\nimport { CompanyModelService } from '../../../canvas-meta-model/company-model.service';\r\nimport { ExpertModelService } from '../../../canvas-meta-model/expert-model.service';\r\nimport { RelationshipType } from '../../../canvas-meta-model/relationships';\r\nimport { MergeService } from '../merge.service';\r\nimport { BmProcessService } from '../../../development-process-registry/bm-process/bm-process.service';\r\nimport { BmProcess } from '../../../development-process-registry/bm-process/bm-process';\r\n\r\n@Component({\r\n  selector: 'app-merge-model-view',\r\n  templateUrl: './merge-model-view.component.html',\r\n  styleUrls: ['./merge-model-view.component.css'],\r\n})\r\nexport class MergeModelViewComponent implements OnInit, OnDestroy {\r\n  @ViewChild('dependencyModal', { static: true }) dependencyModal: unknown;\r\n  @ViewChild('mergeModal', { static: true }) mergeModal: unknown;\r\n  @ViewChild('addAllModal', { static: true }) addAllModal: unknown;\r\n  @ViewChild('updateModal', { static: true }) updateModal: unknown;\r\n  @ViewChild('traceModal', { static: true }) traceModal: unknown;\r\n  @ViewChild('selectModal', { static: true }) selectModal: unknown;\r\n  @ViewChild('deleteModal', { static: true }) deleteModal: unknown;\r\n\r\n  expertModel: ExpertModel;\r\n  companyModel: CompanyModel;\r\n\r\n  bmProcessGiven = false;\r\n  bmProcess?: BmProcess;\r\n\r\n  companyFeatureList: { id: string; levelname: string }[] = [];\r\n\r\n  companyModelId: string;\r\n  expertModelId: string;\r\n\r\n  private querySubscription: Subscription;\r\n  private paramSubscription: Subscription;\r\n\r\n  modalFeatureModel: FeatureModel;\r\n  modalFeature: Feature;\r\n  modalTracedFeature: Feature;\r\n  modalReference: NgbModalRef;\r\n  modalSubfeatureIds: string[];\r\n  modalSelectFeatureForm: FormGroup;\r\n\r\n  companyOpenPanels: string[] = null;\r\n\r\n  isFullyMerged = false;\r\n\r\n  constructor(\r\n    private bmProcessService: BmProcessService,\r\n    private fb: FormBuilder,\r\n    private mergeService: MergeService,\r\n    private modalService: NgbModal,\r\n    private companyModelService: CompanyModelService,\r\n    private expertModelService: ExpertModelService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.querySubscription = this.route.queryParamMap.subscribe((paramMap) => {\r\n      if (paramMap.has('bmProcessId')) {\r\n        this.bmProcessGiven = true;\r\n        void this.loadBmProcess(paramMap.get('bmProcessId'));\r\n      } else {\r\n        this.bmProcess = undefined;\r\n        this.bmProcessGiven = false;\r\n      }\r\n    });\r\n    this.paramSubscription = this.route.paramMap.subscribe((params) => {\r\n      this.companyModelId = params.get('companyModelId');\r\n      this.expertModelId = params.get('expertModelId');\r\n      void this.loadModels();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.querySubscription !== null) {\r\n      this.querySubscription.unsubscribe();\r\n    }\r\n    if (this.paramSubscription !== null) {\r\n      this.paramSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async loadBmProcess(bmProcessId: string): Promise<void> {\r\n    this.bmProcess = await this.bmProcessService.get(bmProcessId);\r\n  }\r\n\r\n  async loadModels(): Promise<void> {\r\n    await Promise.all([this.loadExpertModel(), this.loadCompanyModel()]);\r\n    this.isFullyMerged = this.checkIsFullyMerged();\r\n  }\r\n\r\n  async loadExpertModel(): Promise<void> {\r\n    this.expertModel = await this.expertModelService.get(this.expertModelId);\r\n  }\r\n\r\n  async loadCompanyModel(): Promise<void> {\r\n    const companyModel = await this.companyModelService.get(\r\n      this.companyModelId\r\n    );\r\n    if (this.companyOpenPanels === null) {\r\n      this.companyOpenPanels = Object.values(companyModel.features).reduce(\r\n        (acc, feature) => {\r\n          acc.push(feature.fixId);\r\n          acc.push(\r\n            ...feature\r\n              .getAllSubfeatures()\r\n              .filter((f) => Object.values(f.subfeatures).length > 0)\r\n              .map((f) => f.fixId)\r\n          );\r\n          return acc;\r\n        },\r\n        []\r\n      );\r\n    }\r\n    this.companyModel = companyModel;\r\n    this.companyFeatureList = companyModel.getFeatureList();\r\n  }\r\n\r\n  openDependenciesModalExpertModel(featureId: string): void {\r\n    this.openDependenciesModal(this.expertModel, featureId);\r\n  }\r\n\r\n  openDependenciesModalCompanyModel(featureId: string): void {\r\n    this.openDependenciesModal(this.companyModel, featureId);\r\n  }\r\n\r\n  openDependenciesModal(featureModel: FeatureModel, featureId: string): void {\r\n    const feature = featureModel.getFeature(featureId);\r\n    this.modalFeatureModel = featureModel;\r\n    this.modalFeature = feature;\r\n    this.modalReference = this.modalService.open(this.dependencyModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  openTraceModal(featureId): void {\r\n    this.modalFeatureModel = this.companyModel;\r\n    this.modalFeature = this.companyModel.getFeature(featureId);\r\n    this.modalTracedFeature = this.expertModel.getFeature(\r\n      this.modalFeature.expertModelTrace[this.expertModelId]\r\n    );\r\n    this.modalReference = this.modalService.open(this.traceModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  openExpertTraceModal(featureId): void {\r\n    this.modalFeatureModel = this.expertModel;\r\n    this.modalFeature = this.expertModel.getFeature(featureId);\r\n    this.modalTracedFeature = this.companyModel.getFeature(\r\n      this.companyModel.expertModelTraces[this.expertModelId]\r\n        .expertFeatureIdMap[featureId]\r\n    );\r\n    this.modalReference = this.modalService.open(this.traceModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  openMergeModal(featureId: string): void {\r\n    const expertFeature = this.expertModel.getFeature(featureId);\r\n    const parentId =\r\n      this.companyModel.expertModelTraces[this.expertModelId]\r\n        .expertFeatureIdMap[expertFeature.parent.id];\r\n    this.modalSubfeatureIds = this.companyModel\r\n      .getFeature(parentId)\r\n      .getAllSubfeatures()\r\n      .map((feature) => feature.id);\r\n    this.modalSubfeatureIds.push(parentId);\r\n    const companyModelFeatureParentId =\r\n      this.companyModel.expertModelTraces[this.expertModelId]\r\n        .expertFeatureIdMap[expertFeature.parent.id];\r\n    this.modalFeature = new Feature(\r\n      undefined,\r\n      expertFeature,\r\n      expertFeature.id,\r\n      new Feature(\r\n        undefined,\r\n        { name: '' },\r\n        companyModelFeatureParentId,\r\n        undefined\r\n      )\r\n    );\r\n    this.modalReference = this.modalService.open(this.mergeModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  openAddAllModal(featureId: string): void {\r\n    this.modalFeature = featureId\r\n      ? this.expertModel.getFeature(featureId)\r\n      : null;\r\n    this.modalReference = this.modalService.open(this.addAllModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  openSelectModal(featureId: string): void {\r\n    this.modalFeature = this.expertModel.getFeature(featureId);\r\n    this.modalSubfeatureIds = this.companyModel\r\n      .getFeature(\r\n        this.companyModel.expertModelTraces[this.expertModelId]\r\n          .expertFeatureIdMap[this.modalFeature.parent.id]\r\n      )\r\n      .getAllSubfeatures()\r\n      .map((feature) => feature.id);\r\n    const selectedIds = Object.values(\r\n      this.companyModel.expertModelTraces[this.expertModelId].expertFeatureIdMap\r\n    );\r\n    this.modalSubfeatureIds = this.modalSubfeatureIds.filter(\r\n      (id) => !selectedIds.includes(id)\r\n    );\r\n    this.modalSelectFeatureForm = this.fb.group({\r\n      feature: null,\r\n    });\r\n    this.modalReference = this.modalService.open(this.selectModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  openDeleteFeatureModal(featureId: string): void {\r\n    this.modalFeature = this.companyModel.getFeature(featureId);\r\n    this.modalReference = this.modalService.open(this.deleteModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  openUpdateFeatureModal(featureId: string): void {\r\n    const feature = this.companyModel.getFeature(featureId);\r\n    this.modalFeature = feature;\r\n    this.modalSubfeatureIds = feature.getAllSubfeatures().map((f) => f.id);\r\n    this.modalSubfeatureIds.push(feature.id);\r\n    this.modalReference = this.modalService.open(this.updateModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Closes the current modal.\r\n   */\r\n  async closeModal(): Promise<void> {\r\n    this.modalReference.close();\r\n    this.modalFeature = null;\r\n    await this.loadModels();\r\n  }\r\n\r\n  async mergeFeature(featureForm: FormGroup): Promise<void> {\r\n    await this.mergeService.addFeatureMerge(\r\n      this.companyModelId,\r\n      featureForm.value,\r\n      featureForm.get('subfeatureOf').value,\r\n      this.expertModelId,\r\n      this.modalFeature.id\r\n    );\r\n    await this.closeModal();\r\n  }\r\n\r\n  async addAll(featureId: string): Promise<void> {\r\n    await this.mergeService.addAllSubfeaturesMerge(\r\n      this.companyModelId,\r\n      this.expertModelId,\r\n      featureId\r\n    );\r\n    await this.closeModal();\r\n  }\r\n\r\n  async mergeIntoSelected(): Promise<void> {\r\n    await this.mergeService.addTrace(\r\n      this.companyModelId,\r\n      this.modalSelectFeatureForm.value.feature,\r\n      this.expertModelId,\r\n      this.modalFeature.id\r\n    );\r\n    await this.closeModal();\r\n  }\r\n\r\n  async deleteTrace(): Promise<void> {\r\n    if (this.modalFeatureModel === this.companyModel) {\r\n      await this.deleteCompanyTrace();\r\n    } else {\r\n      await this.deleteExpertTrace();\r\n    }\r\n  }\r\n\r\n  async deleteCompanyTrace(): Promise<void> {\r\n    await this.mergeService.deleteTrace(\r\n      this.companyModelId,\r\n      this.modalFeature.id,\r\n      this.expertModelId\r\n    );\r\n    await this.closeModal();\r\n  }\r\n\r\n  async deleteExpertTrace(): Promise<void> {\r\n    await this.mergeService.deleteTrace(\r\n      this.companyModelId,\r\n      this.modalTracedFeature.id,\r\n      this.expertModelId\r\n    );\r\n    await this.closeModal();\r\n  }\r\n\r\n  async deleteFeature(featureId): Promise<void> {\r\n    await this.mergeService.deleteFeature(this.companyModelId, featureId);\r\n    await this.closeModal();\r\n  }\r\n\r\n  async addDependency(\r\n    relationshipType: RelationshipType,\r\n    fromFeatureId: string,\r\n    toFeatureId: string\r\n  ): Promise<void> {\r\n    await this.mergeService.addRelationship(\r\n      this.companyModelId,\r\n      relationshipType,\r\n      fromFeatureId,\r\n      toFeatureId\r\n    );\r\n    await this.closeModal();\r\n  }\r\n\r\n  async deleteDependency(\r\n    relationshipType: RelationshipType,\r\n    fromId: string,\r\n    toId: string\r\n  ): Promise<void> {\r\n    await this.mergeService.removeRelationship(\r\n      this.companyModelId,\r\n      relationshipType,\r\n      fromId,\r\n      toId\r\n    );\r\n    await this.loadModels();\r\n    this.modalFeature = this.companyModel.getFeature(this.modalFeature.id);\r\n  }\r\n\r\n  async updateFeature(featureForm: FormGroup): Promise<void> {\r\n    await this.mergeService.updateFeature(\r\n      this.companyModelId,\r\n      this.modalFeature.id,\r\n      featureForm.value,\r\n      featureForm.get('subfeatureOf').value\r\n    );\r\n    await this.closeModal();\r\n  }\r\n\r\n  asKeys(map: { [id: string]: Feature }): string[] {\r\n    return Object.keys(map);\r\n  }\r\n\r\n  private checkIsFullyMerged(): boolean {\r\n    return this.expertModel\r\n      .getFeatureList()\r\n      .every(\r\n        (feature) =>\r\n          !!this.companyModel.expertModelTraces[this.expertModel._id]\r\n            .expertFeatureIdMap[feature.id]\r\n      );\r\n  }\r\n}\r\n","<ng-template #deleteModal>\r\n  <app-delete-feature-confirm\r\n    [feature]=\"modalFeature\"\r\n    (deletionResult)=\"deleteFeature($event)\"\r\n    (closeModal)=\"closeModal()\"\r\n  ></app-delete-feature-confirm>\r\n</ng-template>\r\n\r\n<ng-template #updateModal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">{{ modalFeature.name }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"closeModal()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"text-muted pt-3\">\r\n      <app-feature-form\r\n        [feature]=\"modalFeature\"\r\n        [disabledSubfeatures]=\"modalSubfeatureIds\"\r\n        [featureList]=\"companyFeatureList\"\r\n        (submitFeatureForm)=\"updateFeature($event)\"\r\n      ></app-feature-form>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #dependencyModal>\r\n  <app-cross-tree-relationship-modal\r\n    [feature]=\"modalFeature\"\r\n    [featureModel]=\"modalFeatureModel\"\r\n    [companyModel]=\"\r\n      modalFeatureModel._id === expertModel._id ? companyModel : null\r\n    \"\r\n    (addRelationshipOnCompanyModel)=\"\r\n      addDependency($event.type, $event.fromFeatureId, $event.toFeatureId)\r\n    \"\r\n    (closeModal)=\"closeModal()\"\r\n    (removeRelationship)=\"\r\n      deleteDependency($event.type, $event.fromFeatureId, $event.toFeatureId)\r\n    \"\r\n  ></app-cross-tree-relationship-modal>\r\n</ng-template>\r\n\r\n<ng-template #traceModal>\r\n  <app-trace-modal\r\n    [feature]=\"modalFeature\"\r\n    [tracedFeature]=\"modalTracedFeature\"\r\n    (closeModal)=\"closeModal()\"\r\n    (deleteTrace)=\"deleteTrace()\"\r\n  ></app-trace-modal>\r\n</ng-template>\r\n\r\n<ng-template #mergeModal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">{{ modalFeature.name }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"closeModal()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"text-muted pt-3\">\r\n      <app-feature-form\r\n        [feature]=\"modalFeature\"\r\n        [featureList]=\"companyFeatureList\"\r\n        [enabledSubfeatures]=\"modalSubfeatureIds\"\r\n        submitButtonText=\"Merge Feature\"\r\n        (submitFeatureForm)=\"mergeFeature($event)\"\r\n      ></app-feature-form>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #addAllModal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Add all subfeatures of\r\n      {{ modalFeature ? modalFeature.name : 'the model' }}\r\n    </h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"closeModal()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"alert alert-warning\" role=\"alert\">\r\n      This will add all subfeatures of\r\n      {{ modalFeature ? modalFeature.name : 'the model' }} to the composed model\r\n      as new features if they are not merged yet.\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-block btn-warning\"\r\n      (click)=\"addAll(modalFeature ? modalFeature.id : null)\"\r\n    >\r\n      Add all\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #selectModal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">{{ modalFeature.name }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"closeModal()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"modalSelectFeatureForm\"\r\n        (ngSubmit)=\"mergeIntoSelected()\"\r\n      >\r\n        <div class=\"form-group row\">\r\n          <label for=\"feature\" class=\"col-sm-4 col-form-label\"\r\n            >Select feature</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <select id=\"feature\" formControlName=\"feature\" class=\"form-control\">\r\n              <option\r\n                *ngFor=\"let fl of companyFeatureList; let i = index\"\r\n                [disabled]=\"!modalSubfeatureIds.includes(fl.id)\"\r\n                [ngValue]=\"fl.id\"\r\n              >\r\n                {{ fl.levelname }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-dark btn-block\"\r\n              [disabled]=\"!modalSelectFeatureForm.valid\"\r\n            >\r\n              Merge Feature\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #featurerow let-id=\"id\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6\">\r\n      <app-merge-tree\r\n        *ngIf=\"expertModel && expertModel.features\"\r\n        [features]=\"{ id: expertModel.features[id] }\"\r\n        [trace]=\"companyModel.expertModelTraces[expertModelId]\"\r\n        (addTrace)=\"openMergeModal($event)\"\r\n        (openDependencies)=\"openDependenciesModalExpertModel($event)\"\r\n        (selectFeature)=\"openSelectModal($event)\"\r\n        (addAll)=\"openAddAllModal($event)\"\r\n        (openTrace)=\"openExpertTraceModal($event)\"\r\n      ></app-merge-tree>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n      <app-merge-into-tree\r\n        *ngIf=\"companyModel && companyModel.features\"\r\n        [expertModelId]=\"expertModelId\"\r\n        [openPanels]=\"companyOpenPanels\"\r\n        [features]=\"{ id: companyModel.features[id] }\"\r\n        (openDependencies)=\"openDependenciesModalCompanyModel($event)\"\r\n        (openTrace)=\"openTraceModal($event)\"\r\n        (updateFeature)=\"openUpdateFeatureModal($event)\"\r\n        (deleteFeature)=\"openDeleteFeatureModal($event)\"\r\n      ></app-merge-into-tree>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"bmProcessGiven && bmProcess != null\">\r\n    <a\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'bmprocess', 'bmprocessview', bmProcess._id]\"\r\n    >\r\n      {{ bmProcess.name }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"companyModel\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'companyModels', companyModel._id, 'select']\"\r\n      [queryParams]=\"{ bmProcessId: this.bmProcess._id }\"\r\n    >\r\n      {{ companyModel.name }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"companyModel && expertModel\"\r\n      class=\"nav-link active\"\r\n      [routerLink]=\"[]\"\r\n      [queryParams]=\"{ bmProcessId: this.bmProcess._id }\"\r\n    >\r\n      Merge {{ expertModel.name }}\r\n    </a>\r\n  </nav>\r\n  <nav *ngIf=\"!bmProcessGiven\" class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'companyModels']\">\r\n      Composed Models\r\n    </a>\r\n    <a\r\n      *ngIf=\"companyModel\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'companyModels', companyModel._id]\"\r\n    >\r\n      {{ companyModel.name }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"companyModel && expertModel\"\r\n      class=\"nav-link active\"\r\n      [routerLink]=\"[]\"\r\n    >\r\n      Merge {{ expertModel.name }}\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"expertModel && companyModel\" role=\"main\">\r\n  <!-- List of Features -->\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Merge Feature Tree</h6>\r\n\r\n    <div class=\"alert alert-info container\" role=\"alert\">\r\n      <p>\r\n        Merge all features from the canvas building block on the left into the\r\n        composed model on the right. This can be done in three different ways:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Add all: Add all subfeatures that are not yet merged to the composed\r\n          model.\r\n        </li>\r\n        <li>\r\n          Add: Add the feature to the composed model. Opens a pre filled feature\r\n          form to adjust the feature.\r\n        </li>\r\n        <li>\r\n          Select: Select the corresponding feature in the composed model. This\r\n          just creates a trace.\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div\r\n      class=\"alert alert-warning container\"\r\n      role=\"alert\"\r\n      *ngIf=\"!isFullyMerged\"\r\n    >\r\n      Not all features are merged yet.\r\n    </div>\r\n\r\n    <div\r\n      class=\"alert alert-success container\"\r\n      role=\"alert\"\r\n      *ngIf=\"isFullyMerged\"\r\n    >\r\n      All features are merged.\r\n    </div>\r\n\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-warning btn-xs mr-1\"\r\n      (click)=\"openAddAllModal(null)\"\r\n    >\r\n      Add all\r\n    </button>\r\n\r\n    <ng-container *ngFor=\"let id of asKeys(companyModel.features)\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"featurerow; context: { id: id }\"\r\n      ></ng-container>\r\n    </ng-container>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-4\"><strong>Legend:</strong></div>\r\n      <div class=\"col-4\"><i class=\"fa fa-circle\"></i> Mandatory Feature</div>\r\n      <div class=\"col-4\"><i class=\"fa fa-circle-o\"></i> Optional Feature</div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">&nbsp;</div>\r\n      <div class=\"col-4\"><i class=\"fa fa-caret-up\"></i> Or</div>\r\n      <div class=\"col-4\"><i class=\"fa fa-angle-up\"></i> Alternative (Xor)</div>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\nimport { Trace } from '../../../canvas-meta-model/trace';\r\n\r\n@Component({\r\n  selector: 'app-merge-tree',\r\n  templateUrl: './merge-tree.component.html',\r\n  styleUrls: ['./merge-tree.component.css'],\r\n})\r\nexport class MergeTreeComponent {\r\n  @Input() features: { [id: string]: Feature };\r\n  @Input() trace: Trace;\r\n\r\n  @Output() addTrace = new EventEmitter<string>();\r\n  @Output() selectFeature = new EventEmitter<string>();\r\n  @Output() openDependencies = new EventEmitter<string>();\r\n  @Output() addAll = new EventEmitter<string>();\r\n  @Output() openTrace = new EventEmitter<string>();\r\n\r\n  asList(map: { [id: string]: Feature }): Feature[] {\r\n    return Object.values(map);\r\n  }\r\n}\r\n","<ul *ngIf=\"features\" class=\"list-group inner\" style=\"margin: 5px\">\r\n  <li\r\n    *ngFor=\"let f of asList(features)\"\r\n    class=\"list-group-item justify-content-between align-items-center\"\r\n  >\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <div class=\"d-flex\">\r\n        <div class=\"mr-1\">\r\n          <ng-container *ngIf=\"f.type === 'mandatory'\">\r\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" title=\"mandatory\"></i>\r\n            <span class=\"sr-only\">mandatory</span>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"f.type === 'optional'\">\r\n            <i class=\"fa fa-circle-o\" aria-hidden=\"true\" title=\"optional\"></i>\r\n            <span class=\"sr-only\">optional</span>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <div class=\"mr-1\">\r\n          {{ f.name }}\r\n          <small class=\"text-muted\" *ngIf=\"f.description\">{{\r\n            f.description\r\n          }}</small>\r\n        </div>\r\n\r\n        <div>\r\n          <ng-container *ngIf=\"f.subfeatureConnections === 'or'\">\r\n            <i\r\n              class=\"fa fa-caret-up\"\r\n              aria-hidden=\"true\"\r\n              title=\"or subfeatures\"\r\n            ></i>\r\n            <span class=\"sr-only\">or subfeatures</span>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"f.subfeatureConnections === 'xor'\">\r\n            <i\r\n              class=\"fa fa-angle-up\"\r\n              aria-hidden=\"true\"\r\n              title=\"xor subfeatures\"\r\n            ></i>\r\n            <span class=\"sr-only\">xor subfeatures</span>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          *ngIf=\"!f.relationships.hasNoRelationships()\"\r\n          class=\"btn btn-dark btn-xs mr-1\"\r\n          (click)=\"openDependencies.emit(f.id)\"\r\n        >\r\n          Show Dependencies\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-warning btn-xs mr-1\"\r\n          *ngIf=\"\r\n            !trace.expertFeatureIdMap[f.id] &&\r\n            f.parent &&\r\n            trace.expertFeatureIdMap[f.parent.id]\r\n          \"\r\n          (click)=\"addTrace.emit(f.id)\"\r\n        >\r\n          Add\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-warning btn-xs mr-1\"\r\n          *ngIf=\"\r\n            !trace.expertFeatureIdMap[f.id] &&\r\n            f.parent &&\r\n            trace.expertFeatureIdMap[f.parent.id]\r\n          \"\r\n          (click)=\"selectFeature.emit(f.id)\"\r\n        >\r\n          Select\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-warning btn-xs mr-1\"\r\n          *ngIf=\"trace.expertFeatureIdMap[f.id]\"\r\n          (click)=\"addAll.emit(f.id)\"\r\n        >\r\n          Add all\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary btn-xs mr-1\"\r\n          *ngIf=\"trace.expertFeatureIdMap[f.id]\"\r\n          (click)=\"openTrace.emit(f.id)\"\r\n        >\r\n          Show Trace\r\n        </button>\r\n        <ng-container *ngIf=\"trace.expertFeatureIdMap[f.id]\">\r\n          <i class=\"fa fa-check\" aria-hidden=\"true\" title=\"Merged\"></i>\r\n          <span class=\"sr-only\">(Merged)</span>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!trace.expertFeatureIdMap[f.id]\">\r\n          <i\r\n            class=\"fa fa-exclamation-triangle\"\r\n            aria-hidden=\"true\"\r\n            title=\"Unmerged\"\r\n          ></i>\r\n          <span class=\"sr-only\">(Unmerged)</span>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n\r\n    <app-merge-tree\r\n      [features]=\"f.subfeatures\"\r\n      [trace]=\"trace\"\r\n      (openDependencies)=\"openDependencies.emit($event)\"\r\n      (addTrace)=\"addTrace.emit($event)\"\r\n      (selectFeature)=\"selectFeature.emit($event)\"\r\n      (addAll)=\"addAll.emit($event)\"\r\n      (openTrace)=\"openTrace.emit($event)\"\r\n    ></app-merge-tree>\r\n  </li>\r\n</ul>\r\n","import { Injectable } from '@angular/core';\r\nimport { ExpertModelService } from '../../canvas-meta-model/expert-model.service';\r\nimport { CompanyModelService } from '../../canvas-meta-model/company-model.service';\r\nimport { Feature, FeatureInit } from '../../canvas-meta-model/feature';\r\nimport { RelationshipType } from '../../canvas-meta-model/relationships';\r\nimport { ExpertModelEntry } from '../../canvas-meta-model/expert-model';\r\nimport {\r\n  CanvasDefinition,\r\n  CanvasDefinitionEntry,\r\n} from '../../canvas-meta-model/canvas-definition';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MergeService {\r\n  constructor(\r\n    private companyModelService: CompanyModelService,\r\n    private expertModelService: ExpertModelService\r\n  ) {}\r\n\r\n  async selectExpertModel(\r\n    companyModelId: string,\r\n    expertModelId: string\r\n  ): Promise<void> {\r\n    const companyModel = await this.companyModelService.get(companyModelId);\r\n    companyModel.addExpertModel(expertModelId);\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n\r\n  async unselectExpertModel(\r\n    companyModelId: string,\r\n    expertModelId: string\r\n  ): Promise<void> {\r\n    const companyModel = await this.companyModelService.get(companyModelId);\r\n    companyModel.removeExpertModel(expertModelId);\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n\r\n  async getSelectedExpertModels(\r\n    companyModelId: string\r\n  ): Promise<ExpertModelEntry[]> {\r\n    const companyModel = await this.companyModelService.get(companyModelId);\r\n    return this.expertModelService.getList({\r\n      _id: { $in: Object.keys(companyModel.expertModelTraces) },\r\n    });\r\n  }\r\n\r\n  async getUnselectedExpertModels(\r\n    companyModelId: string\r\n  ): Promise<ExpertModelEntry[]> {\r\n    const companyModel = await this.companyModelService.get(companyModelId);\r\n    const getRootFeatureIds = (\r\n      canvasDefinition: CanvasDefinition | CanvasDefinitionEntry\r\n    ): string[] => {\r\n      const rootFeatureIds: string[] = [];\r\n      canvasDefinition.rows.forEach((row) =>\r\n        row\r\n          .filter((cell) => !cell.isSpacer)\r\n          .forEach((cell) => {\r\n            rootFeatureIds.push(cell.id);\r\n          })\r\n      );\r\n      return rootFeatureIds;\r\n    };\r\n    const definitionIds = getRootFeatureIds(companyModel.definition);\r\n    return (\r\n      await this.expertModelService.getList({\r\n        $not: {\r\n          _id: { $in: Object.keys(companyModel.expertModelTraces) },\r\n        },\r\n      })\r\n    ).filter((expertModel: ExpertModelEntry) => {\r\n      const ids = getRootFeatureIds(expertModel.$definition);\r\n      return (\r\n        ids.length === definitionIds.length &&\r\n        ids.every((id) => definitionIds.includes(id))\r\n      );\r\n    });\r\n  }\r\n\r\n  async addFeatureMerge(\r\n    featureModelId: string,\r\n    feature: FeatureInit,\r\n    subfeatureOf: string,\r\n    expertModelId: string,\r\n    expertModelFeatureId: string\r\n  ): Promise<void> {\r\n    const expertModel = await this.expertModelService.get(expertModelId);\r\n    const companyModel = await this.companyModelService.get(featureModelId);\r\n    const newFeature = companyModel.addFeature(feature, subfeatureOf);\r\n    companyModel.addExpertModelTrace(\r\n      expertModel,\r\n      expertModelFeatureId,\r\n      newFeature.id\r\n    );\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n\r\n  async addAllSubfeaturesMerge(\r\n    featureModelId: string,\r\n    expertModelId: string,\r\n    expertModelFeatureId: string\r\n  ): Promise<void> {\r\n    const expertModel = await this.expertModelService.get(expertModelId);\r\n    const companyModel = await this.companyModelService.get(featureModelId);\r\n    let subfeatures: Feature[];\r\n    if (expertModelFeatureId) {\r\n      const expertFeature = expertModel.getFeature(expertModelFeatureId);\r\n      subfeatures = expertFeature.getAllSubfeatures();\r\n    } else {\r\n      subfeatures = Object.values(expertModel.getFeatureMap());\r\n    }\r\n    subfeatures\r\n      .filter(\r\n        (feature) =>\r\n          !companyModel.expertModelTraces[expertModelId].expertFeatureIdMap[\r\n            feature.id\r\n          ]\r\n      )\r\n      .forEach((feature) => {\r\n        const newFeature = companyModel.addFeature(\r\n          {\r\n            name: feature.name,\r\n            description: feature.description,\r\n            type: feature.type,\r\n            subfeatureConnections: feature.subfeatureConnections,\r\n          },\r\n          companyModel.expertModelTraces[expertModelId].expertFeatureIdMap[\r\n            feature.parent.id\r\n          ]\r\n        );\r\n        companyModel.addExpertModelTrace(\r\n          expertModel,\r\n          feature.id,\r\n          newFeature.id\r\n        );\r\n      });\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n\r\n  async addTrace(\r\n    featureModelId: string,\r\n    featureId: string,\r\n    expertModelId: string,\r\n    expertModelFeatureId: string\r\n  ): Promise<void> {\r\n    const expertModel = await this.expertModelService.get(expertModelId);\r\n    const companyModel = await this.companyModelService.get(featureModelId);\r\n    companyModel.addExpertModelTrace(\r\n      expertModel,\r\n      expertModelFeatureId,\r\n      featureId\r\n    );\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n\r\n  async deleteTrace(\r\n    featureModelId: string,\r\n    featureId: string,\r\n    expertModelId: string\r\n  ): Promise<void> {\r\n    const companyModel = await this.companyModelService.get(featureModelId);\r\n    companyModel.removeTrace(featureId, expertModelId);\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n\r\n  async updateFeature(\r\n    featureModelId: string,\r\n    featureId: string,\r\n    feature: Partial<Feature>,\r\n    subfeatureOf: string\r\n  ): Promise<void> {\r\n    const companyModel = await this.companyModelService.get(featureModelId);\r\n    companyModel.updateFeature(featureId, subfeatureOf, feature);\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n\r\n  async deleteFeature(\r\n    featureModelId: string,\r\n    featureId: string\r\n  ): Promise<void> {\r\n    const companyModel = await this.companyModelService.get(featureModelId);\r\n    companyModel.removeFeature(featureId);\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n\r\n  async addRelationship(\r\n    featureModelId: string,\r\n    relationshipType: RelationshipType,\r\n    fromFeatureId: string,\r\n    toFeatureId: string\r\n  ): Promise<void> {\r\n    const companyModel = await this.companyModelService.get(featureModelId);\r\n    companyModel.addRelationship(relationshipType, fromFeatureId, toFeatureId);\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n\r\n  async removeRelationship(\r\n    featureModelId: string,\r\n    relationshipType: RelationshipType,\r\n    fromFeatureId: string,\r\n    toFeatureId: string\r\n  ): Promise<void> {\r\n    const companyModel = await this.companyModelService.get(featureModelId);\r\n    companyModel.removeRelationship(\r\n      relationshipType,\r\n      fromFeatureId,\r\n      toFeatureId\r\n    );\r\n    await this.companyModelService.save(companyModel);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\n\r\n@Component({\r\n  selector: 'app-trace-modal',\r\n  templateUrl: './trace-modal.component.html',\r\n  styleUrls: ['./trace-modal.component.css'],\r\n})\r\nexport class TraceModalComponent {\r\n  @Input() feature: Feature;\r\n  @Input() tracedFeature: Feature;\r\n\r\n  @Output() closeModal = new EventEmitter<null>();\r\n  @Output() deleteTrace = new EventEmitter<null>();\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{ feature.name }}</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close\"\r\n    aria-label=\"Close\"\r\n    (click)=\"closeModal.emit()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ul class=\"list-group inner\" style=\"margin: 5px\">\r\n    <li class=\"list-group-item justify-content-between align-items-center\">\r\n      Connected to:\r\n      <ul class=\"list-group inner\" style=\"margin: 5px\">\r\n        <li class=\"list-group-item justify-content-between align-items-center\">\r\n          {{ tracedFeature.name }}\r\n          <button\r\n            (click)=\"deleteTrace.emit()\"\r\n            *ngIf=\"feature.parent !== null\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs bottom-right\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-cross-tree-relationship-form',\r\n  templateUrl: './cross-tree-relationship-form.component.html',\r\n  styleUrls: ['./cross-tree-relationship-form.component.css'],\r\n})\r\nexport class CrossTreeRelationshipFormComponent implements OnInit {\r\n  @Input() featureList: { id: string; levelname: string }[];\r\n  @Input() relationshipTypes: string[];\r\n\r\n  @Output() submitRelationshipForm = new EventEmitter<FormGroup>();\r\n\r\n  relationshipForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadForm();\r\n  }\r\n\r\n  private loadForm(): void {\r\n    this.relationshipForm = this.fb.group({\r\n      relationshipType: [null, Validators.required],\r\n      fromFeatureId: [\r\n        this.featureList.length > 0 ? this.featureList[0].id : null,\r\n        Validators.required,\r\n      ],\r\n      toFeatureId: [\r\n        this.featureList.length > 1 ? this.featureList[1].id : null,\r\n        Validators.required,\r\n      ],\r\n    });\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitRelationshipForm.emit(this.relationshipForm);\r\n    this.loadForm();\r\n  }\r\n}\r\n","<form [formGroup]=\"relationshipForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"relationshipType\" class=\"col-sm-4 col-form-label\"\r\n      >Type of Relationship</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <select\r\n        id=\"relationshipType\"\r\n        formControlName=\"relationshipType\"\r\n        class=\"form-control\"\r\n      >\r\n        <option\r\n          *ngFor=\"let relationshipType of relationshipTypes\"\r\n          [ngValue]=\"relationshipType\"\r\n        >\r\n          A {{ relationshipType }} B\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label for=\"fromFeatureId\" class=\"col-sm-4 col-form-label\">Feature A</label>\r\n    <div class=\"col-sm-8\">\r\n      <select\r\n        id=\"fromFeatureId\"\r\n        formControlName=\"fromFeatureId\"\r\n        class=\"form-control\"\r\n      >\r\n        <option *ngFor=\"let fl of featureList; let i = index\" [ngValue]=\"fl.id\">\r\n          {{ fl.levelname }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label for=\"toFeatureId\" class=\"col-sm-4 col-form-label\">Feature B</label>\r\n    <div class=\"col-sm-8\">\r\n      <select\r\n        id=\"toFeatureId\"\r\n        formControlName=\"toFeatureId\"\r\n        class=\"form-control\"\r\n      >\r\n        <option *ngFor=\"let fl of featureList; let i = index\" [ngValue]=\"fl.id\">\r\n          {{ fl.levelname }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        [disabled]=\"!relationshipForm.valid\"\r\n      >\r\n        Add Cross-Tree Relationship\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Feature } from '../../../canvas-meta-model/feature';\r\nimport { RelationshipType } from '../../../canvas-meta-model/relationships';\r\nimport { CompanyModel } from '../../../canvas-meta-model/company-model';\r\nimport { FeatureModel } from '../../../canvas-meta-model/feature-model';\r\n\r\n@Component({\r\n  selector: 'app-cross-tree-relationship-modal',\r\n  templateUrl: './cross-tree-relationship-modal.component.html',\r\n  styleUrls: ['./cross-tree-relationship-modal.component.css'],\r\n})\r\nexport class CrossTreeRelationshipModalComponent implements OnChanges {\r\n  @Input() featureModel: FeatureModel;\r\n  @Input() feature: Feature;\r\n  @Input() companyModel: CompanyModel = null;\r\n\r\n  @Output() closeModal = new EventEmitter<null>();\r\n  @Output() addRelationshipOnCompanyModel = new EventEmitter<{\r\n    type: RelationshipType;\r\n    fromFeatureId: string;\r\n    toFeatureId: string;\r\n  }>();\r\n  @Output() removeRelationship = new EventEmitter<{\r\n    type: RelationshipType;\r\n    fromFeatureId: string;\r\n    toFeatureId: string;\r\n  }>();\r\n\r\n  relationships: {\r\n    name: string;\r\n    type: RelationshipType;\r\n    features: Feature[];\r\n  }[];\r\n  tracedFeature: Feature;\r\n\r\n  constructor() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.feature) {\r\n      this.load(changes.feature.currentValue);\r\n    }\r\n  }\r\n\r\n  add(type: RelationshipType, toExpertFeatureId: string): void {\r\n    const toCompanyFeatureId =\r\n      this.companyModel.expertModelTraces[this.featureModel._id]\r\n        .expertFeatureIdMap[toExpertFeatureId];\r\n    this.addRelationshipOnCompanyModel.emit({\r\n      type,\r\n      fromFeatureId: this.feature.id,\r\n      toFeatureId: toCompanyFeatureId,\r\n    });\r\n  }\r\n\r\n  remove(type: RelationshipType, toFeatureId: string): void {\r\n    this.removeRelationship.emit({\r\n      type,\r\n      fromFeatureId: this.feature.id,\r\n      toFeatureId,\r\n    });\r\n  }\r\n\r\n  private load(feature: Feature): void {\r\n    this.relationships = [];\r\n    this.tracedFeature = null;\r\n    const featureMap = this.featureModel.getFeatureMap();\r\n    const relationshipTypes = this.featureModel.definition.relationshipTypes;\r\n    relationshipTypes.forEach((type) =>\r\n      this.loadRelationship(\r\n        type,\r\n        type,\r\n        feature.relationships.getRelationships(type),\r\n        featureMap\r\n      )\r\n    );\r\n    if (this.companyModel) {\r\n      const tracedFeatureId =\r\n        this.companyModel.expertModelTraces[this.featureModel._id]\r\n          .expertFeatureIdMap[this.feature.id];\r\n      if (tracedFeatureId) {\r\n        this.tracedFeature = this.companyModel.getFeature(tracedFeatureId);\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadRelationship(\r\n    name: string,\r\n    type: RelationshipType,\r\n    features: string[],\r\n    featureMap: { [p: string]: Feature }\r\n  ): void {\r\n    this.relationships.push({\r\n      name,\r\n      type,\r\n      features: features.map((featureId) => featureMap[featureId]),\r\n    });\r\n  }\r\n\r\n  relationshipDoesNotExistInCompanyModel(\r\n    type: RelationshipType,\r\n    toExpertFeatureId: string\r\n  ): boolean {\r\n    const toCompanyFeatureId =\r\n      this.companyModel.expertModelTraces[this.featureModel._id]\r\n        .expertFeatureIdMap[toExpertFeatureId];\r\n    if (toCompanyFeatureId) {\r\n      return !this.tracedFeature.relationships.hasRelationship(\r\n        type,\r\n        toCompanyFeatureId\r\n      );\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-basic-title\">{{ feature.name }}</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close\"\r\n    aria-label=\"Close\"\r\n    (click)=\"closeModal.emit()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <div\r\n    *ngIf=\"feature.relationships.hasNoRelationships()\"\r\n    class=\"alert alert-info\"\r\n    role=\"alert\"\r\n  >\r\n    There are no dependencies left to remove.\r\n  </div>\r\n\r\n  <ul class=\"list-group inner\" style=\"margin: 5px\">\r\n    <ng-container *ngFor=\"let relationship of relationships\">\r\n      <li\r\n        class=\"list-group-item justify-content-between align-items-center\"\r\n        *ngIf=\"relationship.features.length !== 0\"\r\n      >\r\n        <i class=\"fa fa-arrow-right\"></i> {{ relationship.name }}:\r\n        <ul class=\"list-group inner\" style=\"margin: 5px\">\r\n          <li\r\n            class=\"list-group-item justify-content-between align-items-center\"\r\n            *ngFor=\"let f of relationship.features\"\r\n          >\r\n            {{ f.name }}\r\n            <button\r\n              *ngIf=\"\r\n                companyModel &&\r\n                relationshipDoesNotExistInCompanyModel(relationship.type, f.id)\r\n              \"\r\n              type=\"button\"\r\n              class=\"btn btn-warning btn-xs bottom-right\"\r\n              (click)=\"add(relationship.type, f.id)\"\r\n            >\r\n              Add\r\n            </button>\r\n            <button\r\n              *ngIf=\"!companyModel\"\r\n              (click)=\"remove(relationship.type, f.id)\"\r\n              type=\"button\"\r\n              class=\"btn btn-warning btn-xs bottom-right\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ng-container>\r\n  </ul>\r\n</div>\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-change-password-form',\r\n  templateUrl: './change-password-form.component.html',\r\n  styleUrls: ['./change-password-form.component.css'],\r\n})\r\nexport class ChangePasswordFormComponent {\r\n  @Output() changePassword = new EventEmitter<string>();\r\n\r\n  passwordForm: FormGroup = this.fb.group(\r\n    {\r\n      password: this.fb.control('', [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n      ]),\r\n      confirm: this.fb.control(''),\r\n    },\r\n    {\r\n      validators: (group) => {\r\n        if (group.get('password').value !== group.get('confirm').value) {\r\n          return { passwordNotConfirmed: true };\r\n        }\r\n        return null;\r\n      },\r\n    }\r\n  );\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  submitForm() {\r\n    this.changePassword.emit(this.passwordControl.value);\r\n    this.passwordForm.reset();\r\n  }\r\n\r\n  get passwordControl() {\r\n    return this.passwordForm.get('password');\r\n  }\r\n\r\n  get confirmControl() {\r\n    return this.passwordForm.get('confirm');\r\n  }\r\n}\r\n","<form [formGroup]=\"passwordForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">Password</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        id=\"inputPassword\"\r\n        formControlName=\"password\"\r\n        aria-describedby=\"validationPassword\"\r\n        [class.is-invalid]=\"passwordControl.invalid && passwordControl.touched\"\r\n      />\r\n      <div id=\"validationPassword\" class=\"invalid-feedback\">\r\n        <ng-container *ngIf=\"passwordControl.hasError('minlength')\">\r\n          The password must be at least 10 characters long.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"passwordControl.hasError('required')\">\r\n          This field is required.\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"inputConfirm\" class=\"col-sm-4 col-form-label\">Confirm</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        id=\"inputConfirm\"\r\n        formControlName=\"confirm\"\r\n        aria-describedby=\"validationConfirm\"\r\n        [class.is-invalid]=\"passwordForm.invalid && confirmControl.touched\"\r\n      />\r\n      <div\r\n        id=\"validationConfirm\"\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"passwordForm.hasError('passwordNotConfirmed')\"\r\n      >\r\n        The passwords do not match.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-dark btn-sm btn-block\"\r\n        [disabled]=\"!passwordForm.valid\"\r\n      >\r\n        Change Password\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this.authService.isLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.authService.redirectTo = state.url;\r\n      return this.router.createUrlTree(['/', 'login']);\r\n    }\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nexport abstract class AuthService {\r\n  abstract set redirectTo(redirectTo: string | undefined);\r\n\r\n  abstract get username(): string | undefined;\r\n\r\n  abstract get group(): string | undefined;\r\n\r\n  abstract init(): Observable<void> | Promise<void>;\r\n\r\n  abstract login(username: string, password: string): Observable<void>;\r\n\r\n  abstract logout(): Observable<void>;\r\n\r\n  abstract changePassword(newPassword: string): Observable<void>;\r\n\r\n  abstract isLoggedIn(): boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n  HttpStatusCode,\r\n} from '@angular/common/http';\r\nimport { defer, from, Observable, of, pipe, UnaryFunction } from 'rxjs';\r\nimport { catchError, map, mapTo, switchMap, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { PouchdbService } from './pouchdb.service';\r\nimport { AuthService } from './auth.service';\r\n\r\nexport enum AuthErrors {\r\n  NOT_AUTHENTICATED = 'You need to be logged in to perform this action',\r\n  NOT_ACTIVATED = 'Your account is not yet activated.',\r\n  NOT_AVAILABLE = 'Database is not available',\r\n  SERVER_MAINTENANCE = 'The database is in maintenance',\r\n}\r\n\r\n@Injectable()\r\nexport class CouchdbAuthService implements AuthService {\r\n  redirectTo: string | undefined;\r\n\r\n  private loggedIn = false;\r\n\r\n  private _username?: string = undefined;\r\n  get username(): string | undefined {\r\n    return this._username;\r\n  }\r\n\r\n  private _group?: string = undefined;\r\n  get group(): string | undefined {\r\n    return this._group;\r\n  }\r\n\r\n  private readonly upUrl = new URL('/database/_up', location.origin).href;\r\n  private readonly url = new URL('/database/_session', location.origin).href;\r\n  private userUrl?: string = undefined;\r\n  private databaseUrl?: string = undefined;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private pouchdbService: PouchdbService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  init(): Observable<void> {\r\n    return this.http\r\n      .get(this.url, {\r\n        headers: {\r\n          'X-CouchDB-WWW-Authenticate': 'Cookie',\r\n        },\r\n      })\r\n      .pipe(\r\n        tap((response: any) =>\r\n          this.initUser(response.userCtx.name, response.userCtx.roles)\r\n        ),\r\n        this.checkAndLogin(),\r\n        catchError(() => of()),\r\n        mapTo(undefined)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Login the user\r\n   *\r\n   * @param username the username\r\n   * @param password the password\r\n   */\r\n  login(username: string, password: string): Observable<void> {\r\n    return this.http\r\n      .post(this.url, {\r\n        username,\r\n        password,\r\n      })\r\n      .pipe(\r\n        tap((response: any) => this.initUser(response.name, response.roles)),\r\n        this.checkAndLogin(),\r\n        tap(() => this.redirect()),\r\n        mapTo(undefined)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Logout the current user\r\n   */\r\n  logout(): Observable<void> {\r\n    return defer(() => from(this.pouchdbService.closeDb())).pipe(\r\n      tap(() => this.clearUser()),\r\n      switchMap(() =>\r\n        this.http.delete(this.url, {\r\n          headers: {\r\n            'X-CouchDB-WWW-Authenticate': 'Cookie',\r\n          },\r\n        })\r\n      ),\r\n      switchMap(() => from(this.router.navigate(['/', 'login']))),\r\n      mapTo(undefined)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Change the password of the current user\r\n   *\r\n   * @param newPassword the new password of the user\r\n   */\r\n  changePassword(newPassword: string): Observable<void> {\r\n    if (this.userUrl == null) {\r\n      throw new Error(AuthErrors.NOT_AUTHENTICATED);\r\n    }\r\n    const userUrl = this.userUrl;\r\n    return this.http\r\n      .get(userUrl, {\r\n        headers: {\r\n          'X-CouchDB-WWW-Authenticate': 'Cookie',\r\n        },\r\n      })\r\n      .pipe(\r\n        switchMap((user: any) => {\r\n          const newUser = {\r\n            _id: user._id,\r\n            _rev: user._rev,\r\n            name: user.name,\r\n            roles: user.roles,\r\n            type: user.type,\r\n            password: newPassword,\r\n          };\r\n          return this.http.put(userUrl, newUser, {\r\n            headers: {\r\n              'X-CouchDB-WWW-Authenticate': 'Cookie',\r\n            },\r\n          });\r\n        }),\r\n        switchMap(async () => {\r\n          this.redirectTo = this.router.url;\r\n          await this.pouchdbService.closeDb();\r\n          this.clearUser();\r\n          return this.router.navigate(['/', 'login'], {\r\n            queryParams: { passwordChanged: true },\r\n          });\r\n        }),\r\n        mapTo(undefined)\r\n      );\r\n  }\r\n\r\n  private async redirect(): Promise<void> {\r\n    if (this.redirectTo) {\r\n      await this.router.navigateByUrl(this.redirectTo);\r\n    } else {\r\n      await this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the user after logging in\r\n   *\r\n   * @param username the username of the user\r\n   * @param roles the roles of the user\r\n   */\r\n  private initUser(username: string, roles: string[]): void {\r\n    this._group = this.getGroup(roles);\r\n    this._username = username;\r\n    if (this.group == null) {\r\n      throw new Error(AuthErrors.NOT_ACTIVATED);\r\n    }\r\n    this.userUrl = new URL(\r\n      '/database/_users/org.couchdb.user:' + this.username,\r\n      location.origin\r\n    ).href;\r\n    this.databaseUrl = new URL('/database/' + this.group, location.origin).href;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the user is able to log in.\r\n   * Assumes that the group and databaseUrl are set.\r\n   *\r\n   * @return whether the user is able to log in\r\n   */\r\n  private checkAndLogin(): UnaryFunction<\r\n    Observable<unknown>,\r\n    Observable<unknown>\r\n  > {\r\n    return pipe(\r\n      switchMap(() => this.checkServerAvailable()),\r\n      map((available) => {\r\n        if (available) {\r\n          return;\r\n        } else {\r\n          throw new Error(AuthErrors.SERVER_MAINTENANCE);\r\n        }\r\n      }),\r\n      switchMap(() => this.checkDatabaseAvailable()),\r\n      map((available) => {\r\n        if (available) {\r\n          return;\r\n        } else {\r\n          throw new Error(AuthErrors.NOT_AVAILABLE);\r\n        }\r\n      }),\r\n      tap(() => {\r\n        this.pouchdbService.init(\r\n          this.group!,\r\n          () => this.sessionExpired(),\r\n          () => this.dbError()\r\n        );\r\n        this.loggedIn = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Called if the session is expired\r\n   */\r\n  private async sessionExpired(): Promise<void> {\r\n    this.redirectTo = this.router.url;\r\n    await this.pouchdbService.closeDb();\r\n    this.clearUser();\r\n    await this.router.navigate(['/', 'login'], {\r\n      queryParams: {\r\n        expired: true,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Called on critical error in db\r\n   */\r\n  private async dbError(): Promise<void> {\r\n    this.redirectTo = this.router.url;\r\n    await this.pouchdbService.closeDb();\r\n    this.clearUser();\r\n    await this.router.navigate(['/', 'login'], {\r\n      queryParams: {\r\n        dbError: true,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear all user related fields\r\n   */\r\n  private clearUser(): void {\r\n    this._group = undefined;\r\n    this._username = undefined;\r\n    this.userUrl = undefined;\r\n    this.databaseUrl = undefined;\r\n    this.loggedIn = false;\r\n  }\r\n\r\n  /**\r\n   * Get the group of this user from the roles array\r\n   *\r\n   * @param roles the roles array\r\n   * @return the group the user belongs to\r\n   */\r\n  private getGroup(roles: string[]): string | undefined {\r\n    return roles.find((role) => /^group[0-9]+$/.test(role));\r\n  }\r\n\r\n  /**\r\n   * Checks whether the database is available\r\n   *\r\n   * @return whether the database is available\r\n   */\r\n  private checkDatabaseAvailable(): Observable<boolean> {\r\n    return this.http.head(this.databaseUrl!).pipe(\r\n      mapTo(true),\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === HttpStatusCode.NotFound) {\r\n          return of(false);\r\n        } else {\r\n          throw error;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks whether the server is available or in maintenance mode\r\n   *\r\n   * @return whether the server is up\r\n   */\r\n  private checkServerAvailable(): Observable<boolean> {\r\n    return this.http.get(this.upUrl).pipe(\r\n      mapTo(true),\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === HttpStatusCode.NotFound) {\r\n          return of(false);\r\n        } else {\r\n          throw error;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check whether the user is currently logged in or not\r\n   *\r\n   * @return true if the user is logged in\r\n   */\r\n  isLoggedIn(): boolean {\r\n    return this.loggedIn;\r\n  }\r\n}\r\n","import { DatabaseModelPart } from './database-model-part';\r\nimport { Equality } from '../shared/equality';\r\nimport { DatabaseRootEntry, DatabaseRootInit, DbType } from './database-entry';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class DatabaseModel\r\n  implements DatabaseRootInit, DatabaseModelPart, Equality<DatabaseModel>\r\n{\r\n  _id: string;\r\n  _rev?: string;\r\n\r\n  readonly type: string;\r\n\r\n  protected constructor(\r\n    entry: DatabaseRootEntry | undefined,\r\n    init: DatabaseRootInit | undefined,\r\n    type: DbType\r\n  ) {\r\n    if (entry != null) {\r\n      this._id = entry._id;\r\n      this._rev = entry._rev;\r\n      this.type = entry.type;\r\n    } else if (init != null) {\r\n      this._id = init._id ?? DatabaseModel.getId();\r\n      this.type = type;\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  toDb(): DatabaseRootEntry {\r\n    return {\r\n      type: this.type,\r\n      _id: this._id,\r\n      _rev: this._rev,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reset the models database state and add it as a new model if pushed to pouchdb\r\n   */\r\n  resetDatabaseState(): void {\r\n    this._id = DatabaseModel.getId();\r\n    this._rev = undefined;\r\n  }\r\n\r\n  /**\r\n   * Check if two pouchdb models are equal by their id and revision\r\n   *\r\n   * @param other the other pouchdb model\r\n   * @return true if the id and revision are equal\r\n   */\r\n  equals(other: DatabaseModel): boolean {\r\n    if (other == null) {\r\n      return false;\r\n    }\r\n    return this._id === other._id && this._rev === other._rev;\r\n  }\r\n\r\n  private static getId(): string {\r\n    return String(Date.now()) + uuidv4();\r\n  }\r\n}\r\n","import { APP_INITIALIZER, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { PouchdbService } from './pouchdb.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CouchdbAuthService } from './couchdb-auth.service';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../environments/environment';\r\nimport { LocalAuthService } from './local-auth.service';\r\nimport { LoginGuard } from './login.guard';\r\nimport { Observable } from 'rxjs';\r\n\r\n@NgModule({\r\n  providers: [\r\n    AuthGuard,\r\n    LoginGuard,\r\n    PouchdbService,\r\n    {\r\n      provide: AuthService,\r\n      useClass: environment.localDatabase\r\n        ? LocalAuthService\r\n        : CouchdbAuthService,\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory:\r\n        (authService: AuthService) => (): Observable<void> | Promise<void> =>\r\n          authService.init(),\r\n      deps: [AuthService],\r\n      multi: true,\r\n    },\r\n  ],\r\n  imports: [HttpClientModule],\r\n})\r\nexport class DatabaseModule {\r\n  // see https://angular.io/guide/singleton-services#prevent-reimport-of-the-greetingmodule\r\n  constructor(@Optional() @SkipSelf() databaseModule?: DatabaseModule) {\r\n    if (databaseModule) {\r\n      throw new Error(\r\n        'DatabaseModule is already loaded. Import it in the AppModule only.'\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PouchdbService } from './pouchdb.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ElementService } from './element.service';\r\nimport { DatabaseModel } from './database-model';\r\nimport { DatabaseRevision, DatabaseRootInit } from './database-entry';\r\nimport { DatabaseConstructor, EntryType } from './database-model-part';\r\n\r\n@Injectable()\r\nexport abstract class DefaultElementService<\r\n  T extends DatabaseModel,\r\n  S extends DatabaseRootInit\r\n> implements ElementService<T, S>\r\n{\r\n  protected abstract get typeName(): string;\r\n\r\n  protected abstract get elementConstructor(): DatabaseConstructor<T, S>;\r\n\r\n  constructor(protected pouchdbService: PouchdbService) {}\r\n\r\n  async add(element: S): Promise<void> {\r\n    await this.pouchdbService.post(\r\n      new this.elementConstructor(undefined, element)\r\n    );\r\n  }\r\n\r\n  async getList(): Promise<EntryType<T>[]> {\r\n    return this.pouchdbService.find<EntryType<T>>(this.typeName, {\r\n      selector: {},\r\n    });\r\n  }\r\n\r\n  async get(id: string): Promise<T & DatabaseRevision> {\r\n    return new this.elementConstructor(\r\n      await this.pouchdbService.get<EntryType<T>>(id),\r\n      undefined\r\n    ) as T & DatabaseRevision;\r\n  }\r\n\r\n  /**\r\n   * Get the changes of a domain\r\n   *\r\n   * @param id the id of the domain\r\n   * @return the changes feed\r\n   */\r\n  getChangesFeed(id: string): Observable<void> {\r\n    return this.pouchdbService.getChangesFeed(id);\r\n  }\r\n\r\n  async delete(id: string): Promise<void> {\r\n    await this.pouchdbService.remove(await this.get(id));\r\n  }\r\n\r\n  protected async save(element: T): Promise<void> {\r\n    await this.pouchdbService.put(element);\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport {\r\n  asapScheduler,\r\n  Observable,\r\n  ReplaySubject,\r\n  Subject,\r\n  Subscription,\r\n} from 'rxjs';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { subscribeOn, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport abstract class ElementLoaderService implements OnDestroy {\r\n  private readonly _loadedObservable: Observable<void>;\r\n  private readonly _loaded: Subject<void>;\r\n  get loaded(): Observable<void> {\r\n    return this._loadedObservable;\r\n  }\r\n\r\n  private readonly routeSubscription: Subscription;\r\n  private _changesFeed?: Subscription;\r\n  protected set changesFeed(changesFeed: Subscription) {\r\n    this._changesFeed = changesFeed;\r\n  }\r\n\r\n  protected constructor(private route: ActivatedRoute) {\r\n    this._loaded = new ReplaySubject<void>(1);\r\n    this._loadedObservable = this._loaded.asObservable();\r\n    this.routeSubscription = this.route.paramMap\r\n      .pipe(\r\n        tap(() => this.checkUnsubscribeChangesFeed()),\r\n        subscribeOn(asapScheduler) // needs to subscribe after the initialization of the subclass\r\n      )\r\n      .subscribe((paramMap) => this.initParams(paramMap));\r\n  }\r\n\r\n  /**\r\n   * Called if the param map observable has new values\r\n   *\r\n   * @param paramMap the param map\r\n   */\r\n  protected abstract initParams(paramMap: ParamMap): void;\r\n\r\n  ngOnDestroy(): void {\r\n    this.checkUnsubscribeChangesFeed();\r\n    this.routeSubscription.unsubscribe();\r\n    this._loaded.complete();\r\n  }\r\n\r\n  private checkUnsubscribeChangesFeed(): void {\r\n    if (this._changesFeed) {\r\n      this._changesFeed.unsubscribe();\r\n      this._changesFeed = undefined;\r\n    }\r\n  }\r\n\r\n  protected elementLoaded(): void {\r\n    this._loaded.next();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PouchdbService } from './pouchdb.service';\r\n\r\ninterface ImportExportContent {\r\n  identifier: string;\r\n  docs: any[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ImportExportService {\r\n  private static identifier = 'SBMD-v1';\r\n\r\n  constructor(private pouchdbService: PouchdbService) {}\r\n\r\n  /**\r\n   * Get the blob that represents the database content.\r\n   */\r\n  async exportDatabase(): Promise<Blob> {\r\n    const allDocs = await this.pouchdbService.getAllDocs();\r\n    const exportContent = allDocs as ImportExportContent;\r\n    exportContent.docs.forEach((doc) => delete doc._rev);\r\n    exportContent.identifier = ImportExportService.identifier;\r\n    return new Blob([JSON.stringify(allDocs, null, 2)], {\r\n      type: 'application/json',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the current database and import the file\r\n   *\r\n   * @param file the file to import\r\n   */\r\n  async importDatabase(file: File): Promise<void> {\r\n    console.log('Load file');\r\n    const content = await this.importJson(file);\r\n    console.log('File loaded');\r\n    console.log('Check file');\r\n    const docs = this.convertContentToDocs(content);\r\n    console.log('File check');\r\n    console.log('Delete database');\r\n    await this.pouchdbService.clearDatabase();\r\n    console.log('Database deleted');\r\n    console.log('Import docs');\r\n    await this.pouchdbService.importDocs(docs);\r\n    console.log('Docs imported');\r\n    console.log('Finished');\r\n  }\r\n\r\n  /**\r\n   * Check whether the file has the correct content.\r\n   * Throws an error if the file can not be imported.\r\n   *\r\n   * @return the docs to be imported\r\n   */\r\n  private convertContentToDocs(content: unknown): any[] {\r\n    if (\r\n      typeof content === 'object' &&\r\n      'identifier' in content! &&\r\n      'docs' in content\r\n    ) {\r\n      const importContent = content as ImportExportContent;\r\n      if (importContent.identifier === ImportExportService.identifier) {\r\n        return importContent.docs;\r\n      }\r\n    }\r\n    throw new Error('Content has not the correct form. Database not deleted.');\r\n  }\r\n\r\n  /**\r\n   * Imports JSON from a file.\r\n   *\r\n   * @param file the file to read the JSON from\r\n   */\r\n  private importJson(file: File): Promise<unknown> {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.addEventListener('error', () => {\r\n        reject('Error loading file');\r\n      });\r\n      fileReader.addEventListener(\r\n        'load',\r\n        (event: ProgressEvent<FileReader>) => {\r\n          let json = null;\r\n          try {\r\n            json = JSON.parse(event.target!.result as string);\r\n          } catch (error) {\r\n            reject(error);\r\n            return;\r\n          }\r\n          resolve(json);\r\n        }\r\n      );\r\n      fileReader.readAsText(file);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { PouchdbService } from './pouchdb.service';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class LocalAuthService implements AuthService {\r\n  constructor(private pouchdbService: PouchdbService) {}\r\n\r\n  set redirectTo(redirectTo: string) {}\r\n\r\n  get username(): undefined {\r\n    return undefined;\r\n  }\r\n\r\n  get group(): undefined {\r\n    return undefined;\r\n  }\r\n\r\n  async init(): Promise<void> {\r\n    this.pouchdbService.init('bmdlFeatureModeler');\r\n    const info = await this.pouchdbService.getDatabaseInfo();\r\n    if (info.doc_count === 0 && environment.exampleData) {\r\n      console.log('No docs detected. Adding default data.');\r\n      await this.pouchdbService.addDefaultData();\r\n    }\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return true;\r\n  }\r\n\r\n  login(username: string, password: string): Observable<void> {\r\n    return of();\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    return of();\r\n  }\r\n\r\n  changePassword(newPassword: string): Observable<void> {\r\n    throw new Error('Not implemented');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class LoginGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | UrlTree {\r\n    if (this.authService.isLoggedIn()) {\r\n      return this.router.createUrlTree(['/']);\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport PouchDB from 'pouchdb-browser';\r\nimport PouchDBFind from 'pouchdb-find';\r\nimport { DatabaseModel } from './database-model';\r\nimport examples from '../../examples';\r\nimport { from, Observable, Subject } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport {\r\n  DatabaseRevision,\r\n  DatabaseRootEntry,\r\n  DbId,\r\n  DbType,\r\n} from './database-entry';\r\n\r\nexport enum DatabaseErrors {\r\n  INVALID_NAME = 'Name of database may only contain characters or numbers.',\r\n  MISSING_NAME = 'Database name is missing.',\r\n}\r\n\r\ninterface CouchDBFindResponse {\r\n  docs: unknown[];\r\n  bookmark?: string;\r\n}\r\n\r\n// noinspection JSVoidFunctionReturnValueUsed\r\n@Injectable()\r\nexport class PouchdbService {\r\n  private db?: PouchDB.Database<DatabaseRootEntry>;\r\n  private expired?: () => Promise<void>;\r\n  private error?: () => Promise<void>;\r\n\r\n  constructor(private zone: NgZone) {\r\n    PouchDB.plugin(PouchDBFind);\r\n  }\r\n\r\n  init(\r\n    name: string,\r\n    expired?: () => Promise<void>,\r\n    error?: () => Promise<void>\r\n  ): void {\r\n    if (this.db) {\r\n      void this.db.close();\r\n    }\r\n    this.db = this.getDatabase(name);\r\n    this.expired = expired;\r\n    this.error = error;\r\n  }\r\n\r\n  /**\r\n   * Close the connection to the current database\r\n   */\r\n  async closeDb(): Promise<void> {\r\n    await this.getDb().close();\r\n    this.db = undefined;\r\n    this.expired = undefined;\r\n    this.error = undefined;\r\n  }\r\n\r\n  /**\r\n   * Get the database to connect to\r\n   *\r\n   * @param name the name of the database\r\n   */\r\n  private getDatabase(name: string): PouchDB.Database<DatabaseRootEntry> {\r\n    if (name == null) {\r\n      throw new Error(DatabaseErrors.MISSING_NAME);\r\n    }\r\n    if (!/^[a-zA-Z0-9]+$/.test(name)) {\r\n      throw new Error(DatabaseErrors.INVALID_NAME);\r\n    }\r\n    if (environment.localDatabase) {\r\n      return new PouchDB<DatabaseRootEntry>(name);\r\n    } else {\r\n      const options: PouchDB.Configuration.DatabaseConfiguration = {\r\n        fetch: (fetchUrl, fetchOptions) => {\r\n          (fetchOptions!.headers as Headers).set(\r\n            'X-CouchDB-WWW-Authenticate',\r\n            'Cookie'\r\n          );\r\n          return PouchDB.fetch(fetchUrl, fetchOptions);\r\n        },\r\n        skip_setup: true,\r\n      };\r\n      const url = new URL('/database/' + name, location.origin).href;\r\n      return new PouchDB<DatabaseRootEntry>(url, options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get info about the database\r\n   */\r\n  getDatabaseInfo(): Promise<PouchDB.Core.DatabaseInfo> {\r\n    return this.getDb()\r\n      .info()\r\n      .catch((error) => this.handleError(error));\r\n  }\r\n\r\n  async find<T extends DatabaseRootEntry>(\r\n    type: DbType,\r\n    request: PouchDB.Find.FindRequest<T>\r\n  ): Promise<T[]> {\r\n    try {\r\n      let result: PouchDB.Find.FindResponse<T>;\r\n      if (Object.keys(request.selector).length > 0) {\r\n        result = (await this._find({\r\n          ...request,\r\n          selector: {\r\n            $and: [request.selector, { type }],\r\n          },\r\n        })) as PouchDB.Find.FindResponse<T>;\r\n      } else {\r\n        result = (await this._find({\r\n          ...request,\r\n          selector: {\r\n            type,\r\n          },\r\n        })) as PouchDB.Find.FindResponse<T>;\r\n      }\r\n      return result.docs;\r\n    } catch (error) {\r\n      return this.handleError(error);\r\n    }\r\n  }\r\n\r\n  async get<T extends DatabaseRootEntry>(\r\n    id: DbId\r\n  ): Promise<T & DatabaseRevision> {\r\n    try {\r\n      return await this.getDb().get<T>(id);\r\n    } catch (error) {\r\n      return this.handleError(error);\r\n    }\r\n  }\r\n\r\n  async post(model: DatabaseModel): Promise<void> {\r\n    try {\r\n      await this.getDb().post(model.toDb());\r\n    } catch (error) {\r\n      await this.handleError(error);\r\n    }\r\n  }\r\n\r\n  async put<T extends DatabaseModel>(model: T): Promise<void> {\r\n    try {\r\n      await this.getDb().put(model.toDb());\r\n    } catch (error) {\r\n      await this.handleError(error);\r\n    }\r\n  }\r\n\r\n  async remove(model: DatabaseRevision): Promise<void> {\r\n    try {\r\n      await this.getDb().remove(model);\r\n    } catch (error) {\r\n      await this.handleError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all changes of a specific model\r\n   *\r\n   * @param id the id of the model\r\n   * @return the changes feed, needs to be canceled to stop receiving changes\r\n   */\r\n  getChangesFeed(id: DbId): Observable<void> {\r\n    const subject = new Subject<void>();\r\n    const changes = this.getDb()\r\n      .changes({\r\n        since: 'now',\r\n        live: true,\r\n        doc_ids: [id],\r\n      })\r\n      .on('change', () => this.zone.run(() => subject.next()))\r\n      .on('error', (error) => this.zone.run(() => subject.error(error)));\r\n    return subject.pipe(\r\n      catchError((error) => from(this.handleError(error))),\r\n      finalize(() => changes.cancel())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Called on error\r\n   */\r\n  private async handleError(error: PouchDB.Core.Error): Promise<never> {\r\n    if (\r\n      error.status === 401 &&\r\n      error.error === 'unauthorized' &&\r\n      this.expired != null\r\n    ) {\r\n      await this.expired();\r\n    }\r\n    if (\r\n      error.status === 500 &&\r\n      error.error === 'internal_server_error' &&\r\n      this.error != null\r\n    ) {\r\n      await this.error();\r\n    }\r\n    throw error;\r\n  }\r\n\r\n  /**\r\n   * Add default data to the database.\r\n   */\r\n  async addDefaultData(): Promise<void> {\r\n    try {\r\n      await this.getDb().bulkDocs(examples as DatabaseRootEntry[]);\r\n    } catch (error) {\r\n      return this.handleError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all documents from the database\r\n   */\r\n  async clearDatabase(): Promise<void> {\r\n    try {\r\n      const allDocs = await this.getDb().allDocs();\r\n      const toBeDeleted = allDocs.rows.map((row) => {\r\n        return {\r\n          _id: row.id,\r\n          _rev: row.value.rev,\r\n          _deleted: true,\r\n        };\r\n      });\r\n      await this.getDb().bulkDocs(\r\n        toBeDeleted as unknown[] as DatabaseRootEntry[]\r\n      );\r\n    } catch (error) {\r\n      await this.handleError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Export the complete database\r\n   */\r\n  async getAllDocs(): Promise<PouchDB.Find.FindResponse<DatabaseRootEntry>> {\r\n    const docCount = (await this.getDatabaseInfo()).doc_count;\r\n    const allDocs = await this._find({ selector: {} });\r\n    if (docCount !== allDocs.docs.length) {\r\n      throw new Error('Doc count does not match export size');\r\n    }\r\n    return allDocs as PouchDB.Find.FindResponse<DatabaseRootEntry>;\r\n  }\r\n\r\n  async importDocs(docs: DatabaseRootEntry[]): Promise<void> {\r\n    try {\r\n      await this.getDb().bulkDocs(docs);\r\n    } catch (error) {\r\n      await this.handleError(error);\r\n    }\r\n  }\r\n\r\n  private async _find(\r\n    request: PouchDB.Find.FindRequest<{}>\r\n  ): Promise<PouchDB.Find.FindResponse<{}>> {\r\n    const response = await this.getDb().find(request);\r\n    if ('bookmark' in response) {\r\n      const couchDbResponse = response as CouchDBFindResponse;\r\n      let docCount = couchDbResponse.docs.length;\r\n      while (docCount > 0 && couchDbResponse.bookmark != null) {\r\n        const nextPage = await this.getDb().find({\r\n          ...request,\r\n          bookmark: couchDbResponse.bookmark,\r\n        } as never);\r\n        docCount = nextPage.docs.length;\r\n        couchDbResponse.docs = couchDbResponse.docs.concat(nextPage.docs);\r\n        if ('bookmark' in response) {\r\n          const couchDbNextPage = nextPage as CouchDBFindResponse;\r\n          couchDbResponse.bookmark = couchDbNextPage.bookmark;\r\n        } else {\r\n          couchDbResponse.bookmark = undefined;\r\n        }\r\n      }\r\n    }\r\n    return response;\r\n  }\r\n\r\n  /**\r\n   * Get the database, but check whether it is available.\r\n   */\r\n  private getDb(): PouchDB.Database<DatabaseRootEntry> {\r\n    if (this.db == null) {\r\n      throw new Error('Database is not initialized');\r\n    }\r\n    return this.db;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PouchdbService } from '../../database/pouchdb.service';\r\nimport { BmProcess, BmProcessInit } from './bm-process';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\nimport {\r\n  SituationalFactor,\r\n  SituationalFactorEntry,\r\n  SituationalFactorInit,\r\n} from '../method-elements/situational-factor/situational-factor';\r\nimport { ModuleService } from '../module-api/module.service';\r\nimport { Decision } from './decision';\r\nimport { DefaultElementService } from '../../database/default-element.service';\r\nimport { DbId } from '../../database/database-entry';\r\nimport { Domain } from '../knowledge/domain';\r\nimport { Selection, SelectionInit } from '../development-method/selection';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class BmProcessService extends DefaultElementService<\r\n  BmProcess,\r\n  BmProcessInit\r\n> {\r\n  protected readonly typeName = BmProcess.typeName;\r\n\r\n  protected readonly elementConstructor = BmProcess;\r\n\r\n  constructor(\r\n    private moduleService: ModuleService,\r\n    pouchdbService: PouchdbService\r\n  ) {\r\n    super(pouchdbService);\r\n  }\r\n\r\n  /**\r\n   * Finish the initialization process of a bm process, i.e.,\r\n   * the context selection is finished.\r\n   *\r\n   * @param id the id of the bm process\r\n   */\r\n  async finishInitialization(id: DbId): Promise<void> {\r\n    const dbProcess = await this.get(id);\r\n    dbProcess.finishInitialization();\r\n    await this.save(dbProcess);\r\n  }\r\n\r\n  /**\r\n   * Update the domains of the bm process\r\n   *\r\n   * @param id the id of the bm process to update\r\n   * @param domains the domains to set for the bm process\r\n   */\r\n  async updateDomains(id: DbId, domains: Domain[]): Promise<void> {\r\n    const dbProcess = await this.get(id);\r\n    dbProcess.domains = domains;\r\n    await this.save(dbProcess);\r\n  }\r\n\r\n  async updateSituationalFactors(\r\n    id: DbId,\r\n    situationalFactors: SelectionInit<SituationalFactorInit>[]\r\n  ): Promise<void> {\r\n    const dbProcess = await this.get(id);\r\n    dbProcess.situationalFactors = situationalFactors.map(\r\n      (selection) =>\r\n        new Selection<SituationalFactor>(\r\n          undefined,\r\n          selection,\r\n          SituationalFactor\r\n        )\r\n    );\r\n    await this.save(dbProcess);\r\n  }\r\n\r\n  /**\r\n   * Save the bm process diagram, maybe together with new decisions.\r\n   *\r\n   * @param id the id of the bm process\r\n   * @param processDiagram the process diagram\r\n   * @param decisions the decisions\r\n   */\r\n  async saveBmProcessDiagram(\r\n    id: DbId,\r\n    processDiagram: string,\r\n    decisions?: { [elementId: string]: Decision }\r\n  ): Promise<void> {\r\n    const dbProcess = await this.get(id);\r\n    dbProcess.processDiagram = processDiagram;\r\n    if (decisions != null) {\r\n      dbProcess.updateDecisions(decisions);\r\n    }\r\n    await this.save(dbProcess);\r\n  }\r\n\r\n  /**\r\n   * Calculate the distance of a process context to provided situational factors\r\n   *\r\n   * @param process the bm process\r\n   * @param provided the provided situational factors\r\n   * @return the distance\r\n   */\r\n  distanceToContext(\r\n    process: BmProcess,\r\n    provided: (SituationalFactor | SituationalFactorEntry)[]\r\n  ): number {\r\n    const map = SituationalFactor.createMap(provided);\r\n    const { missing, incorrect, low } = process.checkMatchByFactor(map);\r\n    let distance = incorrect.length;\r\n    low.forEach((factor) => {\r\n      const internalDistance =\r\n        factor.factor.values.indexOf(factor.value) -\r\n        factor.factor.values.indexOf(\r\n          map[factor.factor.list][factor.factor.name]\r\n        );\r\n      distance += internalDistance / factor.factor.values.length;\r\n    });\r\n    const correct =\r\n      process.situationalFactors.length -\r\n      missing.length -\r\n      incorrect.length -\r\n      low.length;\r\n    return distance - correct;\r\n  }\r\n\r\n  /**\r\n   * Check whether the step decisions of a step of a decision are all correctly filled in.\r\n   *\r\n   * @param decision the decision\r\n   * @return whether the step decisions are all correctly filled in\r\n   */\r\n  checkDecisionStepArtifacts(decision: Decision): boolean {\r\n    for (let i = 0; i < decision.method.executionSteps.length; i++) {\r\n      const step = decision.method.executionSteps[i];\r\n      const method = this.moduleService.getModuleMethod(\r\n        step.module,\r\n        step.method\r\n      );\r\n      if (method.createDecisionConfigurationForm != null) {\r\n        const form = method.createDecisionConfigurationForm(\r\n          decision.stepDecisions[i]\r\n        );\r\n        if (!form.valid) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { DatabaseModel } from '../../database/database-model';\r\nimport {\r\n  SituationalFactor,\r\n  SituationalFactorEntry,\r\n} from '../method-elements/situational-factor/situational-factor';\r\nimport { DevelopmentMethod } from '../development-method/development-method';\r\nimport { Decision, DecisionEntry, DecisionInit } from './decision';\r\nimport { Domain, DomainEntry, DomainInit } from '../knowledge/domain';\r\nimport { Selection, SelectionEntry } from '../development-method/selection';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n} from '../../database/database-entry';\r\n\r\nexport interface BmProcessInit extends DatabaseRootInit {\r\n  initial?: boolean;\r\n  name: string;\r\n  processDiagram?: string;\r\n  domains?: DomainInit[];\r\n  situationalFactors?: Selection<SituationalFactor>[];\r\n  decisions?: { [elementId: string]: Decision };\r\n}\r\n\r\nexport interface BmProcessEntry extends DatabaseRootEntry {\r\n  initial: boolean;\r\n  name: string;\r\n  processDiagram: string;\r\n  domains: DomainEntry[];\r\n  situationalFactors: SelectionEntry<SituationalFactorEntry>[];\r\n  decisions: { [elementId: string]: DecisionEntry };\r\n}\r\n\r\nexport class BmProcess extends DatabaseModel {\r\n  static readonly typeName = 'BmProcess';\r\n\r\n  initial = true;\r\n\r\n  name: string;\r\n\r\n  processDiagram: string;\r\n\r\n  domains: Domain[] = [];\r\n  situationalFactors: Selection<SituationalFactor>[] = [];\r\n\r\n  decisions: { [elementId: string]: Decision } = {};\r\n\r\n  constructor(\r\n    entry: BmProcessEntry | undefined,\r\n    init: BmProcessInit | undefined\r\n  ) {\r\n    super(entry, init, BmProcess.typeName);\r\n    const element = entry ?? init;\r\n    this.initial = element.initial ?? this.initial;\r\n    this.name = element.name;\r\n    this.processDiagram = element.processDiagram;\r\n    if (entry != null) {\r\n      this.domains =\r\n        entry.domains?.map((domain) => new Domain(domain, undefined)) ??\r\n        this.domains;\r\n      this.situationalFactors =\r\n        entry.situationalFactors?.map(\r\n          (selection) =>\r\n            new Selection<SituationalFactor>(\r\n              selection,\r\n              undefined,\r\n              SituationalFactor\r\n            )\r\n        ) ?? this.situationalFactors;\r\n      if (entry.decisions) {\r\n        Object.entries(entry.decisions).forEach(\r\n          ([elementId, decision]) =>\r\n            (this.decisions[elementId] = new Decision(decision, undefined))\r\n        );\r\n      }\r\n    } else if (init != null) {\r\n      this.domains =\r\n        init.domains?.map((domain) => new Domain(undefined, domain)) ??\r\n        this.domains;\r\n      this.situationalFactors =\r\n        init.situationalFactors?.map(\r\n          (selection) =>\r\n            new Selection<SituationalFactor>(\r\n              undefined,\r\n              selection,\r\n              SituationalFactor\r\n            )\r\n        ) ?? this.situationalFactors;\r\n      if (init.decisions) {\r\n        Object.entries(init.decisions).forEach(\r\n          ([elementId, decision]) =>\r\n            (this.decisions[elementId] = new Decision(undefined, decision))\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  checkMatchByFactor(factorMap: {\r\n    [listName: string]: { [factorName: string]: string };\r\n  }): {\r\n    missing: SituationalFactor[];\r\n    low: SituationalFactor[];\r\n    incorrect: SituationalFactor[];\r\n  } {\r\n    const result: {\r\n      missing: SituationalFactor[];\r\n      low: SituationalFactor[];\r\n      incorrect: SituationalFactor[];\r\n    } = {\r\n      missing: [],\r\n      low: [],\r\n      incorrect: [],\r\n    };\r\n    this.situationalFactors\r\n      .map((element) => element.element)\r\n      .forEach((factor) => {\r\n        if (\r\n          factor.factor.list in factorMap &&\r\n          factor.factor.name in factorMap[factor.factor.list]\r\n        ) {\r\n          const value = factorMap[factor.factor.list][factor.factor.name];\r\n          if (factor.value !== value) {\r\n            if (factor.factor.ordered) {\r\n              if (\r\n                factor.factor.values.indexOf(factor.value) >\r\n                factor.factor.values.indexOf(value)\r\n              ) {\r\n                result.low.push(factor);\r\n              }\r\n            } else {\r\n              result.incorrect.push(factor);\r\n            }\r\n          }\r\n        } else {\r\n          result.missing.push(factor);\r\n        }\r\n      });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Check for match between context and given factors\r\n   *\r\n   * @param factorMap the given factors that should fulfill the context of this process\r\n   * @returns factor names that are missing, have too low or incorrect values\r\n   */\r\n  checkMatch(factorMap: {\r\n    [listName: string]: { [factorName: string]: string };\r\n  }): { missing: string[]; low: string[]; incorrect: string[] } {\r\n    const result = this.checkMatchByFactor(factorMap);\r\n    return {\r\n      low: result.low.map((factor) => factor.factor.name),\r\n      incorrect: result.incorrect.map((factor) => factor.factor.name),\r\n      missing: result.missing.map((factor) => factor.factor.name),\r\n    };\r\n  }\r\n\r\n  addDecision(id: string, method: DevelopmentMethod): void {\r\n    this.decisions[id] = new Decision(undefined, {\r\n      method: method,\r\n      stakeholders: {},\r\n      inputArtifacts: {},\r\n      outputArtifacts: {},\r\n      tools: {},\r\n      stepDecisions: method.executionSteps.map(() => null),\r\n    });\r\n  }\r\n\r\n  removeDecision(id: string): void {\r\n    delete this.decisions[id];\r\n  }\r\n\r\n  /**\r\n   * Finish the initialization process of a bm process, i.e.,\r\n   * the context selection is finished.\r\n   */\r\n  finishInitialization(): void {\r\n    this.initial = false;\r\n  }\r\n\r\n  /**\r\n   * Update the decisions of this bm process.\r\n   *\r\n   * @param decisions the new decisions\r\n   */\r\n  updateDecisions(decisions: { [elementId: string]: DecisionInit }): void {\r\n    this.decisions = {};\r\n    Object.entries(decisions).forEach(\r\n      ([elementId, decision]) =>\r\n        (this.decisions[elementId] = new Decision(undefined, decision))\r\n    );\r\n  }\r\n\r\n  toDb(): BmProcessEntry {\r\n    const decisions: { [elementId: string]: DecisionEntry } = {};\r\n    Object.entries(this.decisions).forEach(([id, decision]) => {\r\n      decisions[id] = decision.toDb();\r\n    });\r\n    return {\r\n      ...super.toDb(),\r\n      initial: this.initial,\r\n      name: this.name,\r\n      processDiagram: this.processDiagram,\r\n      domains: this.domains.map((domain) => domain.toDb()),\r\n      situationalFactors: this.situationalFactors.map((selection) =>\r\n        selection.toDb()\r\n      ),\r\n      decisions,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  DevelopmentMethod,\r\n  DevelopmentMethodEntry,\r\n} from '../development-method/development-method';\r\nimport { Artifact, ArtifactEntry } from '../method-elements/artifact/artifact';\r\nimport {\r\n  Stakeholder,\r\n  StakeholderEntry,\r\n} from '../method-elements/stakeholder/stakeholder';\r\nimport { Tool, ToolEntry } from '../method-elements/tool/tool';\r\nimport {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n  MethodElementInit,\r\n} from '../method-elements/method-element';\r\nimport { MultipleSelection } from '../development-method/multiple-selection';\r\nimport { Equality } from '../../shared/equality';\r\nimport { equalsList } from '../../shared/utils';\r\nimport {\r\n  DatabaseConstructor,\r\n  DatabaseModelPart,\r\n  EntryType,\r\n  InitType,\r\n} from '../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface ElementSummary<T extends MethodElement> {\r\n  list: string;\r\n  elements: T[];\r\n  multiple: boolean;\r\n  multipleElements: boolean;\r\n}\r\n\r\nexport class GroupSummary<T extends MethodElement> {\r\n  elements: ElementSummary<T>[];\r\n}\r\n\r\nexport interface GroupSelectionInit<T extends MethodElementInit>\r\n  extends DatabaseInit {\r\n  selectedGroup?: number;\r\n  elements?: T[][];\r\n}\r\n\r\nexport interface GroupSelectionEntry<T extends MethodElementEntry>\r\n  extends DatabaseEntry {\r\n  selectedGroup: number;\r\n  elements: T[][];\r\n}\r\n\r\nexport class GroupSelection<T extends MethodElement>\r\n  implements\r\n    GroupSelectionInit<T>,\r\n    Equality<GroupSelection<T>>,\r\n    DatabaseModelPart\r\n{\r\n  selectedGroup: number = null;\r\n  elements: T[][] = null;\r\n\r\n  constructor(\r\n    entry: GroupSelectionEntry<EntryType<T>>,\r\n    init: GroupSelectionInit<InitType<T> & MethodElementInit>,\r\n    databaseConstructor: DatabaseConstructor<T>\r\n  ) {\r\n    this.selectedGroup = (entry ?? init).selectedGroup ?? this.selectedGroup;\r\n    if (entry != null) {\r\n      this.elements =\r\n        entry.elements?.map(\r\n          (element) =>\r\n            element?.map((e) =>\r\n              e ? new databaseConstructor(e, undefined) : undefined\r\n            ) ?? undefined\r\n        ) ?? this.elements;\r\n    } else if (init != null) {\r\n      this.elements =\r\n        init.elements?.map(\r\n          (element) =>\r\n            element?.map((e) =>\r\n              e ? new databaseConstructor(undefined, e) : undefined\r\n            ) ?? undefined\r\n        ) ?? this.elements;\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  update(\r\n    groupSelection: Partial<GroupSelection<T>>,\r\n    createElement: (element: Partial<T>) => T\r\n  ): void {\r\n    Object.assign(this, groupSelection);\r\n    this.elements = this.elements\r\n      ? this.elements.map((element) =>\r\n          element ? element.map((e) => (e ? createElement(e) : null)) : null\r\n        )\r\n      : null;\r\n  }\r\n\r\n  isComplete(providedByMethod: MultipleSelection<T>[][]): boolean {\r\n    if (providedByMethod.length === 0) {\r\n      return true;\r\n    }\r\n    if (this.selectedGroup === null || this.selectedGroup === undefined) {\r\n      return false;\r\n    }\r\n    const group = providedByMethod[this.selectedGroup];\r\n    return group.every((element, index) => {\r\n      if (element.element || element.multiple) {\r\n        return true;\r\n      }\r\n      return this.elements[index] && !!this.elements[index][0];\r\n    });\r\n  }\r\n\r\n  getList(providedByMethod: MultipleSelection<T>[][]): GroupSummary<T> {\r\n    const summary: GroupSummary<T> = {\r\n      elements: [],\r\n    };\r\n    if (this.selectedGroup === null || this.selectedGroup === undefined) {\r\n      return summary;\r\n    }\r\n    const group = providedByMethod[this.selectedGroup];\r\n    summary.elements = group.map((element, index) => {\r\n      const part = {\r\n        list: element.list,\r\n        elements: [],\r\n        multiple: element.multiple,\r\n        multipleElements: element.multipleElements,\r\n      };\r\n      if (element.element) {\r\n        part.elements = [element.element];\r\n      } else if (this.elements) {\r\n        part.elements = this.elements[index];\r\n      }\r\n      return part;\r\n    });\r\n    return summary;\r\n  }\r\n\r\n  toDb(): GroupSelectionEntry<ReturnType<T['toDb']>> {\r\n    return {\r\n      selectedGroup: this.selectedGroup,\r\n      elements: this.elements\r\n        ? this.elements.map((element) =>\r\n            element\r\n              ? element.map((e) =>\r\n                  e ? (e.toDb() as ReturnType<T['toDb']>) : null\r\n                )\r\n              : null\r\n          )\r\n        : null,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Checks whether this group selection equals another\r\n   *\r\n   * @param other the other group selection\r\n   * @return whether they are equal\r\n   */\r\n  equals(other: GroupSelection<T>): boolean {\r\n    if (other == null || other.selectedGroup !== this.selectedGroup) {\r\n      return false;\r\n    }\r\n    if (other.elements === null && this.elements === null) {\r\n      return true;\r\n    }\r\n    if (other.elements === null || this.elements === null) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      const thisElementGroup = this.elements[i];\r\n      const otherElementGroup = other.elements[i];\r\n      if (!equalsList(thisElementGroup, otherElementGroup)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport interface DecisionInit extends DatabaseInit {\r\n  method: DevelopmentMethod;\r\n  inputArtifacts: GroupSelectionInit<Artifact>;\r\n  outputArtifacts: GroupSelectionInit<Artifact>;\r\n  stakeholders: GroupSelectionInit<Stakeholder>;\r\n  tools: GroupSelectionInit<Tool>;\r\n\r\n  stepDecisions: any[];\r\n}\r\n\r\nexport interface DecisionEntry extends DatabaseEntry {\r\n  method: DevelopmentMethodEntry;\r\n  inputArtifacts: GroupSelectionEntry<ArtifactEntry>;\r\n  outputArtifacts: GroupSelectionEntry<ArtifactEntry>;\r\n  stakeholders: GroupSelectionEntry<StakeholderEntry>;\r\n  tools: GroupSelectionEntry<ToolEntry>;\r\n  stepDecisions: any[];\r\n}\r\n\r\nexport class Decision implements DatabaseModelPart {\r\n  method: DevelopmentMethod;\r\n  inputArtifacts: GroupSelection<Artifact>;\r\n  outputArtifacts: GroupSelection<Artifact>;\r\n  stakeholders: GroupSelection<Stakeholder>;\r\n  tools: GroupSelection<Tool>;\r\n\r\n  stepDecisions: any[];\r\n\r\n  constructor(entry: DecisionEntry, init: DecisionInit) {\r\n    if (entry != null) {\r\n      this.method = new DevelopmentMethod(entry.method, undefined);\r\n      this.inputArtifacts = new GroupSelection<Artifact>(\r\n        entry.inputArtifacts,\r\n        undefined,\r\n        Artifact\r\n      );\r\n      this.outputArtifacts = new GroupSelection<Artifact>(\r\n        entry.outputArtifacts,\r\n        undefined,\r\n        Artifact\r\n      );\r\n      this.stakeholders = new GroupSelection<Stakeholder>(\r\n        entry.stakeholders,\r\n        undefined,\r\n        Stakeholder\r\n      );\r\n      this.tools = new GroupSelection<Tool>(entry.tools, undefined, Tool);\r\n    } else if (init != null) {\r\n      this.method = new DevelopmentMethod(undefined, init.method);\r\n      this.inputArtifacts = new GroupSelection<Artifact>(\r\n        undefined,\r\n        init.inputArtifacts,\r\n        Artifact\r\n      );\r\n      this.outputArtifacts = new GroupSelection<Artifact>(\r\n        undefined,\r\n        init.outputArtifacts,\r\n        Artifact\r\n      );\r\n      this.stakeholders = new GroupSelection<Stakeholder>(\r\n        undefined,\r\n        init.stakeholders,\r\n        Stakeholder\r\n      );\r\n      this.tools = new GroupSelection<Tool>(undefined, init.tools, Tool);\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n    this.stepDecisions = (entry ?? init).stepDecisions;\r\n  }\r\n\r\n  update(decision: Partial<Decision>): void {\r\n    Object.assign(this, decision);\r\n    this.method = new DevelopmentMethod(undefined, this.method);\r\n    this.inputArtifacts = new GroupSelection<Artifact>(\r\n      undefined,\r\n      this.inputArtifacts,\r\n      Artifact\r\n    );\r\n    this.outputArtifacts = new GroupSelection<Artifact>(\r\n      undefined,\r\n      this.outputArtifacts,\r\n      Artifact\r\n    );\r\n    this.stakeholders = new GroupSelection<Stakeholder>(\r\n      undefined,\r\n      this.stakeholders,\r\n      Stakeholder\r\n    );\r\n    this.tools = new GroupSelection<Tool>(undefined, this.tools, Tool);\r\n  }\r\n\r\n  isComplete(): boolean {\r\n    return (\r\n      this.inputArtifacts.isComplete(this.method.inputArtifacts) &&\r\n      this.outputArtifacts.isComplete(this.method.outputArtifacts) &&\r\n      this.stakeholders.isComplete(this.method.stakeholders) &&\r\n      this.tools.isComplete(this.method.tools)\r\n    );\r\n  }\r\n\r\n  getSummary(): {\r\n    inputArtifacts: GroupSummary<Artifact>;\r\n    outputArtifacts: GroupSummary<Artifact>;\r\n    stakeholders: GroupSummary<Stakeholder>;\r\n    tools: GroupSummary<Tool>;\r\n  } {\r\n    return {\r\n      inputArtifacts: this.inputArtifacts.getList(this.method.inputArtifacts),\r\n      outputArtifacts: this.outputArtifacts.getList(\r\n        this.method.outputArtifacts\r\n      ),\r\n      stakeholders: this.stakeholders.getList(this.method.stakeholders),\r\n      tools: this.tools.getList(this.method.tools),\r\n    };\r\n  }\r\n\r\n  toDb(): DecisionEntry {\r\n    return {\r\n      method: this.method.toDb(),\r\n      inputArtifacts: this.inputArtifacts.toDb(),\r\n      outputArtifacts: this.outputArtifacts.toDb(),\r\n      stakeholders: this.stakeholders.toDb(),\r\n      tools: this.tools.toDb(),\r\n      stepDecisions: this.stepDecisions,\r\n    };\r\n  }\r\n}\r\n","import { Equality } from '../../shared/equality';\r\nimport { DatabaseModelPart } from '../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface ArtifactMappingInit extends DatabaseInit {\r\n  output: boolean;\r\n  step?: number;\r\n  group?: number;\r\n  artifact: number;\r\n}\r\n\r\nexport interface ArtifactMappingEntry extends DatabaseEntry {\r\n  output: boolean;\r\n  step?: number;\r\n  group?: number;\r\n  artifact: number;\r\n}\r\n\r\nexport class ArtifactMapping\r\n  implements ArtifactMappingInit, Equality<ArtifactMapping>, DatabaseModelPart\r\n{\r\n  output: boolean;\r\n  step?: number;\r\n  group?: number;\r\n  artifact: number;\r\n\r\n  constructor(\r\n    entry: ArtifactMappingEntry | undefined,\r\n    init: ArtifactMappingInit | undefined\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.output = element.output;\r\n    this.step = element.step;\r\n    this.group = element.group;\r\n    this.artifact = element.artifact;\r\n  }\r\n\r\n  toDb(): ArtifactMappingEntry {\r\n    const pouchDb: ArtifactMappingEntry = {\r\n      artifact: this.artifact,\r\n      output: this.output,\r\n    };\r\n    if (!this.output) {\r\n      pouchDb.step = this.step;\r\n    } else {\r\n      pouchDb.group = this.group;\r\n    }\r\n    return pouchDb;\r\n  }\r\n\r\n  equals(other: ArtifactMapping): boolean {\r\n    if (other == null || this.output !== other.output) {\r\n      return false;\r\n    }\r\n    if (this.output) {\r\n      return this.group === other.group && this.artifact === other.artifact;\r\n    } else {\r\n      return this.step === other.step && this.artifact === other.artifact;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  DevelopmentMethod,\r\n  DevelopmentMethodEntry,\r\n  DevelopmentMethodInit,\r\n} from './development-method';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\nimport { Type } from '../method-elements/type/type';\r\nimport { DefaultElementService } from '../../database/default-element.service';\r\nimport { PouchdbService } from '../../database/pouchdb.service';\r\nimport { ModuleService } from '../module-api/module.service';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class DevelopmentMethodService extends DefaultElementService<\r\n  DevelopmentMethod,\r\n  DevelopmentMethodInit\r\n> {\r\n  protected readonly typeName = DevelopmentMethod.typeName;\r\n\r\n  protected readonly elementConstructor = DevelopmentMethod;\r\n\r\n  constructor(\r\n    private moduleService: ModuleService,\r\n    pouchdbService: PouchdbService\r\n  ) {\r\n    super(pouchdbService);\r\n  }\r\n\r\n  /**\r\n   * Get a list of development methods that have the needed types, but not the forbidden ones.\r\n   *\r\n   * @param needed needed types\r\n   * @param forbidden forbidden types\r\n   */\r\n  async getValidDevelopmentMethods(\r\n    needed: { list: string; element: { _id: string; name: string } }[],\r\n    forbidden: { list: string; element: { _id: string; name: string } }[]\r\n  ): Promise<DevelopmentMethodEntry[]> {\r\n    return (\r\n      await this.pouchdbService.find<DevelopmentMethodEntry>(\r\n        DevelopmentMethod.typeName,\r\n        {\r\n          selector: {},\r\n        }\r\n      )\r\n    ).filter((method) => Type.validTypes(method.types, needed, forbidden));\r\n  }\r\n\r\n  /**\r\n   * Update the development method.\r\n   *\r\n   * @param id id of the development method\r\n   * @param developmentMethod the new values of the object (values will be copied)\r\n   */\r\n  async update(\r\n    id: string,\r\n    developmentMethod: Partial<DevelopmentMethod>\r\n  ): Promise<void> {\r\n    const method = await this.get(id);\r\n    method.update(developmentMethod);\r\n    await this.save(method);\r\n  }\r\n\r\n  /**\r\n   * Checks whether the development method is correctly defined\r\n   *\r\n   * @param developmentMethod the development method to check\r\n   * @return true if the development method is correctly defined and can\r\n   * be used in processes\r\n   */\r\n  isCorrectlyDefined(developmentMethod: DevelopmentMethod): boolean {\r\n    return this.isExecutionStepsCorrectlyDefined(developmentMethod);\r\n  }\r\n\r\n  /**\r\n   * Checks whether the execution steps of the development method are\r\n   * correctly defined\r\n   *\r\n   * @param developmentMethod the development method to check\r\n   * @return true if the development method's execution steps are correctly\r\n   * defined\r\n   */\r\n  isExecutionStepsCorrectlyDefined(\r\n    developmentMethod: DevelopmentMethod\r\n  ): boolean {\r\n    return developmentMethod.executionSteps.every((executionStep, index) =>\r\n      this.isExecutionStepCorrectlyDefined(developmentMethod, index)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks whether a single execution step is correctly defined\r\n   *\r\n   * @param developmentMethod the development method to check\r\n   * @param step the step to check\r\n   * @return true if the execution step is correctly defined\r\n   */\r\n  isExecutionStepCorrectlyDefined(\r\n    developmentMethod: DevelopmentMethod,\r\n    step: number\r\n  ): boolean {\r\n    return (\r\n      this.hasInputArtifactForStep(developmentMethod, step) &&\r\n      this.isPredefinedInputDefined(developmentMethod, step)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks whether a single execution step has predefined input defined\r\n   * or does not need it\r\n   *\r\n   * @param developmentMethod the development method to check\r\n   * @param step the step to check\r\n   * @return true if the execution step has predefined input defined or does not\r\n   * need it\r\n   */\r\n  isPredefinedInputDefined(\r\n    developmentMethod: DevelopmentMethod,\r\n    step: number\r\n  ): boolean {\r\n    const executionStep = developmentMethod.executionSteps[step];\r\n    const method = this.moduleService.getModuleMethod(\r\n      executionStep.module,\r\n      executionStep.method\r\n    );\r\n    if (method.createConfigurationForm != null) {\r\n      const form = method.createConfigurationForm(\r\n        executionStep.predefinedInput\r\n      );\r\n      return form.valid;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Checks whether all input artifacts can be gathered through any input group\r\n   * or a previous step\r\n   *\r\n   * @param developmentMethod the development method to check\r\n   * @param step the step to check\r\n   * @return true if the execution step will have input artifacts available\r\n   */\r\n  hasInputArtifactForStep(\r\n    developmentMethod: DevelopmentMethod,\r\n    step: number\r\n  ): boolean {\r\n    const executionStep = developmentMethod.executionSteps[step];\r\n    const method = this.moduleService.getModuleMethod(\r\n      executionStep.module,\r\n      executionStep.method\r\n    );\r\n    const artifactInputs = developmentMethod.checkStepInputArtifacts(\r\n      step,\r\n      method.input.length\r\n    );\r\n    return artifactInputs.every((artifactInput) => {\r\n      if (artifactInput.length === 0) {\r\n        return false;\r\n      }\r\n      return (\r\n        artifactInput\r\n          .filter((input) => input.isStep)\r\n          .some((input) => input.index < step) ||\r\n        developmentMethod.inputArtifacts.every(\r\n          (group, index) =>\r\n            artifactInput.filter(\r\n              (input) => !input.isStep && input.index === index\r\n            ).length > 0\r\n        )\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { DatabaseModel } from '../../database/database-model';\r\nimport { Author, AuthorEntry, AuthorInit } from '../../model/author';\r\nimport {\r\n  SituationalFactor,\r\n  SituationalFactorEntry,\r\n  SituationalFactorInit,\r\n} from '../method-elements/situational-factor/situational-factor';\r\nimport {\r\n  Artifact,\r\n  ArtifactEntry,\r\n  ArtifactInit,\r\n} from '../method-elements/artifact/artifact';\r\nimport { Type, TypeEntry, TypeInit } from '../method-elements/type/type';\r\nimport {\r\n  Stakeholder,\r\n  StakeholderEntry,\r\n  StakeholderInit,\r\n} from '../method-elements/stakeholder/stakeholder';\r\nimport { Tool, ToolEntry, ToolInit } from '../method-elements/tool/tool';\r\nimport {\r\n  MultipleSelection,\r\n  MultipleSelectionEntry,\r\n  MultipleSelectionInit,\r\n} from './multiple-selection';\r\nimport {\r\n  ExecutionStep,\r\n  ExecutionStepEntry,\r\n  ExecutionStepInit,\r\n} from './execution-step';\r\nimport {\r\n  MultipleMappingSelection,\r\n  MultipleMappingSelectionEntry,\r\n  MultipleMappingSelectionInit,\r\n} from './multiple-mapping-selection';\r\nimport { Selection, SelectionEntry, SelectionInit } from './selection';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n} from '../../database/database-entry';\r\n\r\nexport interface DevelopmentMethodInit extends DatabaseRootInit {\r\n  name: string;\r\n  description?: string;\r\n  examples?: string[];\r\n  author: AuthorInit;\r\n\r\n  types?: SelectionInit<TypeInit>[];\r\n  situationalFactors?: SelectionInit<SituationalFactorInit>[];\r\n\r\n  inputArtifacts?: MultipleMappingSelectionInit<ArtifactInit>[][];\r\n  outputArtifacts?: MultipleSelectionInit<ArtifactInit>[][];\r\n  stakeholders?: MultipleSelectionInit<StakeholderInit>[][];\r\n  tools?: MultipleSelectionInit<ToolInit>[][];\r\n\r\n  executionSteps?: ExecutionStepInit[];\r\n}\r\n\r\nexport interface DevelopmentMethodEntry extends DatabaseRootEntry {\r\n  name: string;\r\n  description: string;\r\n  examples: string[];\r\n  author: AuthorEntry;\r\n\r\n  types: SelectionEntry<TypeEntry>[];\r\n  situationalFactors: SelectionEntry<SituationalFactorEntry>[];\r\n\r\n  inputArtifacts: MultipleMappingSelectionEntry<ArtifactEntry>[][];\r\n  outputArtifacts: MultipleSelectionEntry<ArtifactEntry>[][];\r\n  stakeholders: MultipleSelectionEntry<StakeholderEntry>[][];\r\n  tools: MultipleSelectionEntry<ToolEntry>[][];\r\n\r\n  executionSteps: ExecutionStepEntry[];\r\n}\r\n\r\nexport class DevelopmentMethod\r\n  extends DatabaseModel\r\n  implements DevelopmentMethodInit\r\n{\r\n  static readonly typeName = 'DevelopmentMethod';\r\n\r\n  name: string;\r\n  description: string;\r\n  examples: string[] = [];\r\n  author: Author;\r\n\r\n  types: Selection<Type>[] = [];\r\n  situationalFactors: Selection<SituationalFactor>[] = [];\r\n\r\n  inputArtifacts: MultipleMappingSelection<Artifact>[][] = [];\r\n  outputArtifacts: MultipleSelection<Artifact>[][] = [];\r\n  stakeholders: MultipleSelection<Stakeholder>[][] = [];\r\n  tools: MultipleSelection<Tool>[][] = [];\r\n\r\n  executionSteps: ExecutionStep[] = [];\r\n\r\n  constructor(\r\n    entry: DevelopmentMethodEntry | undefined,\r\n    init: DevelopmentMethodInit | undefined\r\n  ) {\r\n    super(entry, init, DevelopmentMethod.typeName);\r\n    const element = entry ?? init;\r\n    this.name = element.name;\r\n    this.description = element.description;\r\n    this.examples = element.examples ?? this.examples;\r\n    if (entry != null) {\r\n      this.author = new Author(entry.author, undefined);\r\n      this.types =\r\n        entry.types?.map(\r\n          (selection) => new Selection<Type>(selection, undefined, Type)\r\n        ) ?? this.types;\r\n      this.situationalFactors =\r\n        entry.situationalFactors?.map(\r\n          (selection) =>\r\n            new Selection<SituationalFactor>(\r\n              selection,\r\n              undefined,\r\n              SituationalFactor\r\n            )\r\n        ) ?? this.situationalFactors;\r\n      this.inputArtifacts =\r\n        entry.inputArtifacts?.map((group) =>\r\n          group.map(\r\n            (inputArtifact) =>\r\n              new MultipleMappingSelection(inputArtifact, undefined, Artifact)\r\n          )\r\n        ) ?? this.inputArtifacts;\r\n      this.outputArtifacts =\r\n        entry.outputArtifacts?.map((group) =>\r\n          group.map(\r\n            (outputArtifact) =>\r\n              new MultipleSelection(outputArtifact, undefined, Artifact)\r\n          )\r\n        ) ?? this.outputArtifacts;\r\n      this.stakeholders =\r\n        entry.stakeholders?.map((group) =>\r\n          group.map(\r\n            (stakeholder) =>\r\n              new MultipleSelection(stakeholder, undefined, Stakeholder)\r\n          )\r\n        ) ?? this.stakeholders;\r\n      this.tools =\r\n        entry.tools?.map((group) =>\r\n          group.map((tool) => new MultipleSelection(tool, undefined, Tool))\r\n        ) ?? this.tools;\r\n      this.executionSteps =\r\n        entry.executionSteps?.map(\r\n          (executionStep) => new ExecutionStep(executionStep, undefined)\r\n        ) ?? this.executionSteps;\r\n    } else {\r\n      this.author = new Author(undefined, init.author);\r\n      this.types =\r\n        init.types?.map(\r\n          (selection) => new Selection<Type>(undefined, selection, Type)\r\n        ) ?? this.types;\r\n      this.situationalFactors =\r\n        init.situationalFactors?.map(\r\n          (selection) =>\r\n            new Selection<SituationalFactor>(\r\n              undefined,\r\n              selection,\r\n              SituationalFactor\r\n            )\r\n        ) ?? this.situationalFactors;\r\n      this.inputArtifacts =\r\n        init.inputArtifacts?.map((group) =>\r\n          group.map(\r\n            (inputArtifact) =>\r\n              new MultipleMappingSelection(undefined, inputArtifact, Artifact)\r\n          )\r\n        ) ?? this.inputArtifacts;\r\n      this.outputArtifacts =\r\n        init.outputArtifacts?.map((group) =>\r\n          group.map(\r\n            (outputArtifact) =>\r\n              new MultipleSelection(undefined, outputArtifact, Artifact)\r\n          )\r\n        ) ?? this.outputArtifacts;\r\n      this.stakeholders =\r\n        init.stakeholders?.map((group) =>\r\n          group.map(\r\n            (stakeholder) =>\r\n              new MultipleSelection(undefined, stakeholder, Stakeholder)\r\n          )\r\n        ) ?? this.stakeholders;\r\n      this.tools =\r\n        init.tools?.map((group) =>\r\n          group.map((tool) => new MultipleSelection(undefined, tool, Tool))\r\n        ) ?? this.tools;\r\n      this.executionSteps =\r\n        init.executionSteps?.map(\r\n          (executionStep) => new ExecutionStep(undefined, executionStep)\r\n        ) ?? this.executionSteps;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update this development method with new values\r\n   *\r\n   * @param developmentMethod the new values of this development method (values will be copied to the current object)\r\n   */\r\n  update(developmentMethod: Partial<DevelopmentMethod>): void {\r\n    Object.assign(this, developmentMethod);\r\n    this.author = new Author(undefined, this.author);\r\n    this.types = this.types.map(\r\n      (selection) => new Selection(undefined, selection, Type)\r\n    );\r\n    this.situationalFactors = this.situationalFactors.map(\r\n      (selection) => new Selection(undefined, selection, SituationalFactor)\r\n    );\r\n    this.inputArtifacts = this.inputArtifacts.map((group) =>\r\n      group.map(\r\n        (artifact) =>\r\n          new MultipleMappingSelection<Artifact>(undefined, artifact, Artifact)\r\n      )\r\n    );\r\n    this.outputArtifacts = this.outputArtifacts.map((group) =>\r\n      group.map(\r\n        (artifact) =>\r\n          new MultipleSelection<Artifact>(undefined, artifact, Artifact)\r\n      )\r\n    );\r\n    this.stakeholders = this.stakeholders.map((group) =>\r\n      group.map(\r\n        (stakeholder) =>\r\n          new MultipleSelection<Stakeholder>(\r\n            undefined,\r\n            stakeholder,\r\n            Stakeholder\r\n          )\r\n      )\r\n    );\r\n    this.tools = this.tools.map((group) =>\r\n      group.map((tool) => new MultipleSelection<Tool>(undefined, tool, Tool))\r\n    );\r\n    this.executionSteps = this.executionSteps.map(\r\n      (step) => new ExecutionStep(undefined, step)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check whether this step has all input artifacts available\r\n   *\r\n   * @param step the step to check\r\n   * @param size the size of the input artifacts\r\n   */\r\n  checkStepInputArtifacts(\r\n    step: number,\r\n    size: number\r\n  ): { isStep: boolean; index: number; artifact: number }[][] {\r\n    const artifactDefined: {\r\n      isStep: boolean;\r\n      index: number;\r\n      artifact: number;\r\n    }[][] = [];\r\n    artifactDefined.length = size;\r\n    artifactDefined.fill([]);\r\n\r\n    // check step mappings\r\n    for (let i = 0; i < this.executionSteps.length; i++) {\r\n      const executionStep = this.executionSteps[i];\r\n      for (let j = 0; j < executionStep.outputMappings.length; j++) {\r\n        const outputArtifact = executionStep.outputMappings[j];\r\n        for (const mapping of outputArtifact) {\r\n          if (\r\n            mapping.output === false &&\r\n            mapping.step === step &&\r\n            mapping.artifact < artifactDefined.length\r\n          ) {\r\n            artifactDefined[mapping.artifact].push({\r\n              isStep: true,\r\n              index: i,\r\n              artifact: j,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // check input groups\r\n    for (let i = 0; i < this.inputArtifacts.length; i++) {\r\n      const inputGroup = this.inputArtifacts[i];\r\n      for (let j = 0; j < inputGroup.length; j++) {\r\n        const artifact = inputGroup[j];\r\n        for (const mapping of artifact.mapping) {\r\n          if (mapping.output === false && mapping.step === step) {\r\n            artifactDefined[mapping.artifact].push({\r\n              isStep: false,\r\n              index: i,\r\n              artifact: j,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return artifactDefined;\r\n  }\r\n\r\n  /**\r\n   * Get all tool names no matter in which group they are\r\n   */\r\n  getAllToolNames(): Set<string> {\r\n    const tools: Set<string> = new Set<string>();\r\n    this.tools.forEach((toolGroup) =>\r\n      toolGroup.forEach((tool) => {\r\n        if (tool.element != null) {\r\n          tools.add(tool.element.name);\r\n        }\r\n      })\r\n    );\r\n    return tools;\r\n  }\r\n\r\n  toDb(): DevelopmentMethodEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      name: this.name,\r\n      description: this.description,\r\n      examples: this.examples,\r\n      author: this.author.toDb(),\r\n      types: this.types.map((type) => type.toDb()),\r\n      situationalFactors: this.situationalFactors.map((factor) =>\r\n        factor.toDb()\r\n      ),\r\n      inputArtifacts: this.inputArtifacts.map((group) =>\r\n        group.map((artifact) => artifact.toDb())\r\n      ),\r\n      outputArtifacts: this.outputArtifacts.map((group) =>\r\n        group.map((artifact) => artifact.toDb())\r\n      ),\r\n      stakeholders: this.stakeholders.map((group) =>\r\n        group.map((element) => element.toDb())\r\n      ),\r\n      tools: this.tools.map((group) => group.map((tool) => tool.toDb())),\r\n      executionSteps: this.executionSteps.map((step) => step.toDb()),\r\n    };\r\n  }\r\n}\r\n","import {\r\n  ArtifactMapping,\r\n  ArtifactMappingEntry,\r\n  ArtifactMappingInit,\r\n} from './artifact-mapping';\r\nimport { Equality } from '../../shared/equality';\r\nimport { equalsListOfLists } from '../../shared/utils';\r\nimport { DatabaseModelPart } from '../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface ExecutionStepInit extends DatabaseInit {\r\n  module?: string;\r\n  method?: string;\r\n  predefinedInput?: any;\r\n  outputMappings?: ArtifactMappingInit[][];\r\n}\r\n\r\nexport interface ExecutionStepEntry extends DatabaseEntry {\r\n  module: string;\r\n  method: string;\r\n  predefinedInput: any;\r\n  outputMappings: ArtifactMappingEntry[][];\r\n}\r\n\r\nexport class ExecutionStep\r\n  implements ExecutionStepInit, Equality<ExecutionStep>, DatabaseModelPart\r\n{\r\n  module: string;\r\n  method: string;\r\n  predefinedInput: any;\r\n  outputMappings: ArtifactMapping[][] = [];\r\n\r\n  constructor(\r\n    entry: ExecutionStepEntry | undefined,\r\n    init: ExecutionStepInit | undefined\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.module = element.module;\r\n    this.method = element.method;\r\n    this.predefinedInput = element.predefinedInput;\r\n    if (entry != null) {\r\n      this.outputMappings =\r\n        entry.outputMappings?.map((mappings) =>\r\n          mappings.map((mapping) => new ArtifactMapping(mapping, undefined))\r\n        ) ?? this.outputMappings;\r\n    } else if (init != null) {\r\n      this.outputMappings =\r\n        init.outputMappings?.map((mappings) =>\r\n          mappings.map((mapping) => new ArtifactMapping(undefined, mapping))\r\n        ) ?? this.outputMappings;\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  toDb(): ExecutionStepEntry {\r\n    return {\r\n      module: this.module,\r\n      method: this.method,\r\n      predefinedInput: this.predefinedInput,\r\n      outputMappings: this.outputMappings.map((mappings) =>\r\n        mappings.map((mapping) => mapping.toDb())\r\n      ),\r\n    };\r\n  }\r\n\r\n  equals(other: ExecutionStep): boolean {\r\n    if (other == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      this.module === other.module &&\r\n      this.method === other.method &&\r\n      equalsListOfLists(this.outputMappings, other.outputMappings)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  MultipleSelection,\r\n  MultipleSelectionEntry,\r\n  MultipleSelectionInit,\r\n} from './multiple-selection';\r\nimport {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n} from '../method-elements/method-element';\r\nimport {\r\n  ArtifactMapping,\r\n  ArtifactMappingEntry,\r\n  ArtifactMappingInit,\r\n} from './artifact-mapping';\r\nimport { equalsList } from '../../shared/utils';\r\nimport { DatabaseInit } from '../../database/database-entry';\r\nimport {\r\n  DatabaseConstructor,\r\n  EntryType,\r\n  InitType,\r\n} from '../../database/database-model-part';\r\n\r\nexport interface MultipleMappingSelectionInit<T extends DatabaseInit>\r\n  extends MultipleSelectionInit<T> {\r\n  mapping?: ArtifactMappingInit[];\r\n}\r\n\r\nexport interface MultipleMappingSelectionEntry<T extends MethodElementEntry>\r\n  extends MultipleSelectionEntry<T> {\r\n  mapping: ArtifactMappingEntry[];\r\n}\r\n\r\nexport class MultipleMappingSelection<T extends MethodElement>\r\n  extends MultipleSelection<T>\r\n  implements MultipleMappingSelectionInit<T>\r\n{\r\n  mapping: ArtifactMapping[] = [];\r\n\r\n  constructor(\r\n    entry: MultipleMappingSelectionEntry<EntryType<T>> | undefined,\r\n    init: MultipleMappingSelectionInit<InitType<T>> | undefined,\r\n    databaseConstructor: DatabaseConstructor<T>\r\n  ) {\r\n    super(entry, init, databaseConstructor);\r\n    if (entry != null) {\r\n      this.mapping =\r\n        entry.mapping?.map(\r\n          (mapping) => new ArtifactMapping(mapping, undefined)\r\n        ) ?? this.mapping;\r\n    } else if (init != null) {\r\n      this.mapping =\r\n        init.mapping?.map(\r\n          (mapping) => new ArtifactMapping(undefined, mapping)\r\n        ) ?? this.mapping;\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  update(\r\n    selection: MultipleMappingSelection<T>,\r\n    createElement: (element: Partial<T>) => T\r\n  ): void {\r\n    this.mapping = [];\r\n    super.update(selection, createElement);\r\n    this.element = this.element ? createElement(this.element) : null;\r\n    this.mapping = this.mapping.map(\r\n      (mapping) => new ArtifactMapping(undefined, mapping)\r\n    );\r\n  }\r\n\r\n  toDb(): MultipleMappingSelectionEntry<ReturnType<T['toDb']>> {\r\n    return {\r\n      ...super.toDb(),\r\n      mapping: this.mapping.map((mapping) => mapping.toDb()),\r\n    };\r\n  }\r\n\r\n  equals(other: MultipleSelection<T>): boolean {\r\n    if (!('mapping' in other)) {\r\n      return false;\r\n    }\r\n    return (\r\n      super.equals(other) &&\r\n      equalsList(this.mapping, (other as MultipleMappingSelection<T>).mapping)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n} from '../method-elements/method-element';\r\nimport { Equality } from '../../shared/equality';\r\nimport {\r\n  DatabaseConstructor,\r\n  DatabaseModelPart,\r\n  EntryType,\r\n  InitType,\r\n} from '../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface MultipleSelectionInit<T extends DatabaseInit>\r\n  extends DatabaseInit {\r\n  list: string;\r\n  element?: T;\r\n  multiple?: boolean;\r\n  multipleElements?: boolean;\r\n}\r\n\r\nexport interface MultipleSelectionEntry<T extends MethodElementEntry>\r\n  extends DatabaseEntry {\r\n  list: string;\r\n  element?: T;\r\n  multiple: boolean;\r\n  multipleElements: boolean;\r\n}\r\n\r\nexport class MultipleSelection<T extends MethodElement>\r\n  implements\r\n    MultipleSelectionInit<T>,\r\n    Equality<MultipleSelection<T>>,\r\n    DatabaseModelPart\r\n{\r\n  list: string;\r\n  element?: T;\r\n  multiple = false;\r\n  multipleElements = false;\r\n\r\n  constructor(\r\n    entry: MultipleSelectionEntry<EntryType<T>> | undefined,\r\n    init: MultipleSelectionInit<InitType<T>> | undefined,\r\n    databaseConstructor: DatabaseConstructor<T>\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.list = element.list;\r\n    this.multiple = element.multiple ?? this.multiple;\r\n    this.multipleElements = element.multipleElements ?? this.multipleElements;\r\n    if (entry != null) {\r\n      this.element =\r\n        entry.element != null\r\n          ? new databaseConstructor(entry.element, undefined)\r\n          : undefined;\r\n    } else if (init != null) {\r\n      this.element =\r\n        init.element != null\r\n          ? new databaseConstructor(undefined, init.element)\r\n          : undefined;\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  update(\r\n    selection: MultipleSelection<T>,\r\n    createElement: (element: Partial<T>) => T\r\n  ): void {\r\n    Object.assign(this, selection);\r\n    this.element = this.element ? createElement(this.element) : null;\r\n  }\r\n\r\n  toDb(): MultipleSelectionEntry<ReturnType<T['toDb']>> {\r\n    return {\r\n      list: this.list,\r\n      element: this.element\r\n        ? (this.element.toDb() as ReturnType<T['toDb']>)\r\n        : null,\r\n      multiple: this.multiple,\r\n      multipleElements: this.multipleElements,\r\n    };\r\n  }\r\n\r\n  equals(other: MultipleSelection<T>): boolean {\r\n    if (other == null || this.list !== other.list) {\r\n      return false;\r\n    }\r\n    if (this.element == null && other.element == null) {\r\n      return true;\r\n    }\r\n    if (this.element == null || other.element == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      this.element.equals(other.element) &&\r\n      this.multiple === other.multiple &&\r\n      this.multipleElements === other.multipleElements\r\n    );\r\n  }\r\n}\r\n","import { Equality } from '../../shared/equality';\r\nimport {\r\n  DatabaseConstructor,\r\n  DatabaseModelPart,\r\n  EntryType,\r\n  InitType,\r\n} from '../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface SelectionInit<T extends DatabaseInit> extends DatabaseInit {\r\n  list: string;\r\n  element?: T;\r\n}\r\n\r\nexport interface SelectionEntry<T extends DatabaseEntry> extends DatabaseEntry {\r\n  list: string;\r\n  element?: T;\r\n}\r\n\r\n/**\r\n * Represents a selection of a situational factor or type.\r\n */\r\nexport class Selection<T extends DatabaseModelPart & Equality<T>>\r\n  implements SelectionInit<T>, Equality<Selection<T>>, DatabaseModelPart\r\n{\r\n  list: string;\r\n  element?: T;\r\n\r\n  constructor(\r\n    entry: SelectionEntry<EntryType<T>> | undefined,\r\n    init: SelectionInit<InitType<T>> | undefined,\r\n    databaseConstructor: DatabaseConstructor<T>\r\n  ) {\r\n    if (entry != null) {\r\n      this.list = entry.list;\r\n      this.element =\r\n        entry.element != null\r\n          ? new databaseConstructor(entry.element, undefined)\r\n          : undefined;\r\n    } else if (init != null) {\r\n      this.list = init.list;\r\n      this.element =\r\n        init.element != null\r\n          ? new databaseConstructor(undefined, init.element)\r\n          : undefined;\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  update(\r\n    selection: Selection<T>,\r\n    createElement: (element: Partial<T>) => T\r\n  ): void {\r\n    Object.assign(this, selection);\r\n    this.element = this.element ? createElement(this.element) : null;\r\n  }\r\n\r\n  toDb(): SelectionEntry<EntryType<T>> {\r\n    return {\r\n      list: this.list,\r\n      element: this.element ? (this.element.toDb() as EntryType<T>) : null,\r\n    };\r\n  }\r\n\r\n  equals(other: Selection<T>): boolean {\r\n    if (other == null || this.list !== other.list) {\r\n      return false;\r\n    }\r\n    if (this.element == null && other.element == null) {\r\n      return true;\r\n    }\r\n    if (this.element == null || other.element == null) {\r\n      return false;\r\n    }\r\n    return this.element.equals(other.element);\r\n  }\r\n}\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class DevelopmentProcessRegistryModule {\r\n  // see https://angular.io/guide/singleton-services#prevent-reimport-of-the-greetingmodule\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    developmentProcessRegistryModule: DevelopmentProcessRegistryModule\r\n  ) {\r\n    if (developmentProcessRegistryModule) {\r\n      throw new Error(\r\n        'DevelopmentProcessRegistryModule is already loaded. Import it in the AppModule only.'\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Domain, DomainInit } from './domain';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\nimport { DefaultElementService } from '../../database/default-element.service';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class DomainService extends DefaultElementService<Domain, DomainInit> {\r\n  protected readonly typeName = Domain.typeName;\r\n\r\n  protected readonly elementConstructor = Domain;\r\n\r\n  /**\r\n   * Update a domain.\r\n   *\r\n   * @param id id of the domain\r\n   * @param domain the new values of the object (values will be copied)\r\n   */\r\n  async update(id: string, domain: Partial<Domain>): Promise<void> {\r\n    const dbDomain = await this.get(id);\r\n    dbDomain.update(domain);\r\n    await this.save(dbDomain);\r\n  }\r\n}\r\n","import { DatabaseModel } from '../../database/database-model';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n} from '../../database/database-entry';\r\n\r\nexport interface DomainInit extends DatabaseRootInit {\r\n  name: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface DomainEntry extends DatabaseRootEntry {\r\n  name: string;\r\n  description?: string;\r\n}\r\n\r\nexport class Domain extends DatabaseModel implements DomainInit {\r\n  static readonly typeName = 'Domain';\r\n\r\n  name: string;\r\n  description?: string;\r\n\r\n  constructor(entry: DomainEntry | undefined, init: DomainInit | undefined) {\r\n    super(entry, init, Domain.typeName);\r\n    const element = entry ?? init;\r\n    this.name = element.name;\r\n    this.description = element.description;\r\n  }\r\n\r\n  /**\r\n   * Update this domain with new values\r\n   *\r\n   * @param domain the new values of this domain (values will be copied to the current object)\r\n   */\r\n  update(domain: Partial<Domain>): void {\r\n    this.name = domain.name ?? this.name;\r\n    this.description = domain.description ?? this.description;\r\n  }\r\n\r\n  toDb(): DomainEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      name: this.name,\r\n      description: this.description,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DevelopmentProcessRegistryModule } from './development-process-registry.module';\r\nimport {\r\n  MetaModelApi,\r\n  MetaModelDefinition,\r\n  MetaModelType,\r\n} from './meta-model-definition';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class MetaModelService {\r\n  metaModels: MetaModelDefinition[] = [];\r\n\r\n  registerMetaModel(definition: MetaModelDefinition): void {\r\n    this.metaModels.push(definition);\r\n  }\r\n\r\n  getMetaModelApi(metaModelType: MetaModelType): MetaModelApi {\r\n    return this.getMetaModelDefinition(metaModelType).api;\r\n  }\r\n\r\n  getMetaModelDefinition(metaModelType: MetaModelType): MetaModelDefinition {\r\n    return this.metaModels.find(\r\n      (metaModelDefinition) => metaModelDefinition.type === metaModelType\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MethodElementService } from '../method-element.service';\r\nimport { Artifact, ArtifactInit } from './artifact';\r\nimport { DevelopmentProcessRegistryModule } from '../../development-process-registry.module';\r\nimport { PouchdbService } from '../../../database/pouchdb.service';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class ArtifactService extends MethodElementService<\r\n  Artifact,\r\n  ArtifactInit\r\n> {\r\n  protected readonly typeName = Artifact.typeName;\r\n\r\n  constructor(pouchdbService: PouchdbService) {\r\n    super(pouchdbService);\r\n  }\r\n\r\n  protected readonly elementConstructor = Artifact;\r\n}\r\n","import {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n  MethodElementInit,\r\n} from '../method-element';\r\nimport { MetaModelIdentifier } from '../../meta-model-definition';\r\n\r\nexport interface ArtifactInit extends MethodElementInit {\r\n  internalArtifact?: boolean;\r\n  metaModel?: MetaModelIdentifier;\r\n}\r\n\r\nexport interface ArtifactEntry extends MethodElementEntry {\r\n  internalArtifact: boolean;\r\n  metaModel?: MetaModelIdentifier;\r\n}\r\n\r\nexport class Artifact extends MethodElement implements ArtifactInit {\r\n  static readonly typeName = 'Artifact';\r\n\r\n  internalArtifact = false;\r\n  metaModel?: MetaModelIdentifier = undefined;\r\n\r\n  constructor(\r\n    entry: ArtifactEntry | undefined,\r\n    init: ArtifactInit | undefined\r\n  ) {\r\n    super(entry, init, Artifact.typeName);\r\n    const element = entry ?? init;\r\n    this.internalArtifact = element.internalArtifact ?? this.internalArtifact;\r\n    this.metaModel = element.metaModel;\r\n  }\r\n\r\n  /**\r\n   * Update this artifact with new values\r\n   *\r\n   * @param artifact the new values of this artifact (values will be copied to the current object)\r\n   */\r\n  update(artifact: Partial<ArtifactInit>): void {\r\n    Object.assign(this, artifact);\r\n  }\r\n\r\n  toDb(): ArtifactEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      internalArtifact: this.internalArtifact,\r\n      metaModel: this.metaModel\r\n        ? {\r\n            name: this.metaModel.name,\r\n            type: this.metaModel.type,\r\n          }\r\n        : undefined,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MethodElement, MethodElementInit } from './method-element';\r\nimport { DefaultElementService } from '../../database/default-element.service';\r\nimport { EntryType } from '../../database/database-model-part';\r\n\r\n@Injectable()\r\nexport abstract class MethodElementService<\r\n  T extends MethodElement,\r\n  S extends MethodElementInit\r\n> extends DefaultElementService<T, S> {\r\n  /**\r\n   * Get all method elements in their lists\r\n   */\r\n  async getLists(): Promise<{ listName: string; elements: EntryType<T>[] }[]> {\r\n    const list = await this.getList();\r\n    const elementListMap: { [listName: string]: EntryType<T>[] } = {};\r\n    list.forEach((element) => {\r\n      if (element.list in elementListMap) {\r\n        elementListMap[element.list].push(element);\r\n      } else {\r\n        elementListMap[element.list] = [element];\r\n      }\r\n    });\r\n    const elementLists: { listName: string; elements: EntryType<T>[] }[] = [];\r\n    Object.entries(elementListMap).forEach(([listName, elements]) => {\r\n      elementLists.push({ listName, elements });\r\n    });\r\n    return elementLists;\r\n  }\r\n\r\n  /**\r\n   * Update a method element\r\n   *\r\n   * @param id the id of the method element to update\r\n   * @param element the new data of the element\r\n   */\r\n  async update(id: string, element: S): Promise<void> {\r\n    const currentElement = await this.get(id);\r\n    currentElement.update(element);\r\n    return this.save(currentElement);\r\n  }\r\n}\r\n","import { DatabaseModel } from '../../database/database-model';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n  DbType,\r\n} from '../../database/database-entry';\r\n\r\nexport interface MethodElementInit extends DatabaseRootInit {\r\n  list: string;\r\n  name: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface MethodElementEntry extends DatabaseRootEntry {\r\n  list: string;\r\n  name: string;\r\n  description?: string;\r\n}\r\n\r\nexport abstract class MethodElement\r\n  extends DatabaseModel\r\n  implements MethodElementInit\r\n{\r\n  list: string;\r\n  name: string;\r\n  description?: string;\r\n\r\n  protected constructor(\r\n    entry: MethodElementEntry | undefined,\r\n    init: MethodElementInit | undefined,\r\n    type: DbType\r\n  ) {\r\n    super(entry, init, type);\r\n    const element = entry ?? init;\r\n    this.list = element.list;\r\n    this.name = element.name;\r\n    this.description = element.description;\r\n  }\r\n\r\n  abstract update(element: MethodElementInit);\r\n\r\n  toDb(): MethodElementEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      list: this.list,\r\n      name: this.name,\r\n      description: this.description,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n  MethodElementInit,\r\n} from '../method-element';\r\n\r\nexport interface SituationalFactorDefinitionInit extends MethodElementInit {\r\n  values?: string[];\r\n  ordered?: boolean;\r\n}\r\n\r\nexport interface SituationalFactorDefinitionEntry extends MethodElementEntry {\r\n  values: string[];\r\n  ordered: boolean;\r\n}\r\n\r\nexport class SituationalFactorDefinition\r\n  extends MethodElement\r\n  implements SituationalFactorDefinitionInit\r\n{\r\n  static readonly typeName = 'SituationalFactorDefinition';\r\n\r\n  values: string[] = [];\r\n  ordered = false;\r\n\r\n  constructor(\r\n    entry: SituationalFactorDefinitionEntry | undefined,\r\n    init: SituationalFactorDefinitionInit | undefined\r\n  ) {\r\n    super(entry, init, SituationalFactorDefinition.typeName);\r\n    const element = entry ?? init;\r\n    this.values = element.values ?? this.values;\r\n    this.ordered = element.ordered ?? this.ordered;\r\n  }\r\n\r\n  toDb(): SituationalFactorDefinitionEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      values: this.values,\r\n      ordered: this.ordered,\r\n    };\r\n  }\r\n\r\n  update(\r\n    situationalFactorDefinition: Partial<SituationalFactorDefinition>\r\n  ): void {\r\n    Object.assign(this, situationalFactorDefinition);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  SituationalFactorDefinition,\r\n  SituationalFactorDefinitionInit,\r\n} from './situational-factor-definition';\r\nimport { DevelopmentProcessRegistryModule } from '../../development-process-registry.module';\r\nimport { MethodElementService } from '../method-element.service';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class SituationalFactorService extends MethodElementService<\r\n  SituationalFactorDefinition,\r\n  SituationalFactorDefinitionInit\r\n> {\r\n  protected readonly typeName = SituationalFactorDefinition.typeName;\r\n\r\n  protected readonly elementConstructor = SituationalFactorDefinition;\r\n}\r\n","import {\r\n  SituationalFactorDefinition,\r\n  SituationalFactorDefinitionEntry,\r\n  SituationalFactorDefinitionInit,\r\n} from './situational-factor-definition';\r\nimport { Equality } from '../../../shared/equality';\r\nimport { DatabaseModelPart } from '../../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../../database/database-entry';\r\n\r\nexport interface SituationalFactorInit extends DatabaseInit {\r\n  factor: SituationalFactorDefinitionInit;\r\n  value: string;\r\n}\r\n\r\nexport interface SituationalFactorEntry extends DatabaseEntry {\r\n  factor: SituationalFactorDefinitionEntry;\r\n  value: string;\r\n}\r\n\r\nexport class SituationalFactor\r\n  implements\r\n    SituationalFactorInit,\r\n    Equality<SituationalFactor>,\r\n    DatabaseModelPart\r\n{\r\n  factor: SituationalFactorDefinition;\r\n  value: string;\r\n\r\n  /**\r\n   * Create a map from situational factors\r\n   *\r\n   * @param situationalFactors the situational factors\r\n   * @returns the situational factors map factor list to name to factor value\r\n   */\r\n  static createMap(\r\n    situationalFactors: (SituationalFactor | SituationalFactorEntry)[]\r\n  ): {\r\n    [listName: string]: { [factorName: string]: string };\r\n  } {\r\n    const map = {};\r\n    situationalFactors.forEach((factor) => {\r\n      if (!(factor.factor.list in map)) {\r\n        map[factor.factor.list] = {};\r\n      }\r\n      map[factor.factor.list][factor.factor.name] = factor.value;\r\n    });\r\n    return map;\r\n  }\r\n\r\n  constructor(\r\n    entry: SituationalFactorEntry | undefined,\r\n    init: SituationalFactorInit | undefined\r\n  ) {\r\n    if (entry != null) {\r\n      this.factor = new SituationalFactorDefinition(entry.factor, undefined);\r\n      this.value = entry.value;\r\n    } else if (init != null) {\r\n      this.factor = new SituationalFactorDefinition(undefined, init.factor);\r\n      this.value = init.value;\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  toDb(): SituationalFactorEntry {\r\n    return {\r\n      factor: this.factor.toDb(),\r\n      value: this.value,\r\n    };\r\n  }\r\n\r\n  equals(other: SituationalFactor): boolean {\r\n    if (other == null) {\r\n      return false;\r\n    }\r\n    return other.value === this.value && this.factor.equals(other.factor);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MethodElementService } from '../method-element.service';\r\nimport { Stakeholder, StakeholderInit } from './stakeholder';\r\nimport { DevelopmentProcessRegistryModule } from '../../development-process-registry.module';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class StakeholderService extends MethodElementService<\r\n  Stakeholder,\r\n  StakeholderInit\r\n> {\r\n  protected readonly typeName = Stakeholder.typeName;\r\n\r\n  protected readonly elementConstructor = Stakeholder;\r\n}\r\n","import {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n  MethodElementInit,\r\n} from '../method-element';\r\n\r\nexport interface StakeholderInit extends MethodElementInit {}\r\n\r\nexport interface StakeholderEntry extends MethodElementEntry {}\r\n\r\nexport class Stakeholder extends MethodElement implements StakeholderInit {\r\n  static readonly typeName = 'Stakeholder';\r\n\r\n  constructor(\r\n    entry: StakeholderEntry | undefined,\r\n    init: StakeholderInit | undefined\r\n  ) {\r\n    super(entry, init, Stakeholder.typeName);\r\n  }\r\n\r\n  /**\r\n   * Update this stakeholder with new values\r\n   *\r\n   * @param stakeholder the new values of this stakeholder (values will be copied to the current object)\r\n   */\r\n  update(stakeholder: Partial<Stakeholder>): void {\r\n    Object.assign(this, stakeholder);\r\n  }\r\n\r\n  toDb(): StakeholderEntry {\r\n    return {\r\n      ...super.toDb(),\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MethodElementService } from '../method-element.service';\r\nimport { Tool, ToolInit } from './tool';\r\nimport { DevelopmentProcessRegistryModule } from '../../development-process-registry.module';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class ToolService extends MethodElementService<Tool, ToolInit> {\r\n  protected readonly typeName = Tool.typeName;\r\n\r\n  protected readonly elementConstructor = Tool;\r\n}\r\n","import {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n  MethodElementInit,\r\n} from '../method-element';\r\n\r\nexport interface ToolInit extends MethodElementInit {}\r\n\r\nexport interface ToolEntry extends MethodElementEntry {}\r\n\r\nexport class Tool extends MethodElement {\r\n  static readonly typeName = 'Tool';\r\n\r\n  constructor(entry: ToolEntry | undefined, init: ToolInit | undefined) {\r\n    super(entry, init, Tool.typeName);\r\n  }\r\n\r\n  /**\r\n   * Update this tool with new values\r\n   *\r\n   * @param tool the new values of this tool (values will be copied to the current object)\r\n   */\r\n  update(tool: Partial<Tool>): void {\r\n    Object.assign(this, tool);\r\n  }\r\n\r\n  toDb(): ToolEntry {\r\n    return {\r\n      ...super.toDb(),\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MethodElementService } from '../method-element.service';\r\nimport { Type, TypeInit } from './type';\r\nimport { DevelopmentProcessRegistryModule } from '../../development-process-registry.module';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class TypeService extends MethodElementService<Type, TypeInit> {\r\n  protected readonly typeName = Type.typeName;\r\n\r\n  protected readonly elementConstructor = Type;\r\n}\r\n","import {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n  MethodElementInit,\r\n} from '../method-element';\r\n\r\nexport interface TypeInit extends MethodElementInit {}\r\n\r\nexport interface TypeEntry extends MethodElementEntry {}\r\n\r\nexport class Type extends MethodElement {\r\n  static readonly typeName = 'Type';\r\n\r\n  static validTypes(\r\n    types: { list: string; element?: Type | TypeEntry }[],\r\n    needed: { list: string; element?: { _id: string; name: string } }[],\r\n    forbidden: { list: string; element?: { _id: string; name: string } }[]\r\n  ): boolean {\r\n    const hasType = (type: {\r\n      list: string;\r\n      element: { _id: string; name: string };\r\n    }): boolean => {\r\n      if (type.element) {\r\n        const ids = types\r\n          .map((t) => t.element)\r\n          .filter((t) => t)\r\n          .map((t) => t._id);\r\n        return ids.includes(type.element._id);\r\n      } else {\r\n        const listNames = types.map((t) => t.list).filter((l) => l);\r\n        return listNames.includes(type.list);\r\n      }\r\n    };\r\n    const hasNeeded = needed.some(hasType);\r\n    const hasForbidden = forbidden.some(hasType);\r\n    return hasNeeded && !hasForbidden;\r\n  }\r\n\r\n  constructor(entry: TypeEntry | undefined, init: TypeInit | undefined) {\r\n    super(entry, init, Type.typeName);\r\n  }\r\n\r\n  /**\r\n   * Update this type with new values\r\n   *\r\n   * @param type the new values of this type (values will be copied to the current object)\r\n   */\r\n  update(type: Partial<Type>): void {\r\n    Object.assign(this, type);\r\n  }\r\n\r\n  toDb(): TypeEntry {\r\n    return {\r\n      ...super.toDb(),\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\nimport { Module } from './module';\r\nimport { ModuleMethod } from './module-method';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class ModuleService {\r\n  modules: Module[] = [];\r\n\r\n  registerModule(module: Module): void {\r\n    this.modules.push(module);\r\n  }\r\n\r\n  getModule(module: string): Module {\r\n    return this.modules.find((m) => m.name === module);\r\n  }\r\n\r\n  /**\r\n   * Get all modules in their lists\r\n   */\r\n  getLists(): { listName: string; elements: Module[] }[] {\r\n    const moduleListMap: { [listName: string]: Module[] } = {};\r\n    this.modules.forEach((module) => {\r\n      if (module.list in moduleListMap) {\r\n        moduleListMap[module.list].push(module);\r\n      } else {\r\n        moduleListMap[module.list] = [module];\r\n      }\r\n    });\r\n    const moduleLists = [];\r\n    Object.entries(moduleListMap).forEach(([listName, elements]) => {\r\n      moduleLists.push({ listName, elements });\r\n    });\r\n    return moduleLists;\r\n  }\r\n\r\n  getModuleMethod(module: string, method: string): ModuleMethod {\r\n    const realModule = this.modules.find((m) => m.name === module);\r\n    if (!realModule) {\r\n      return null;\r\n    }\r\n    return realModule.methods[method];\r\n  }\r\n}\r\n","import { ModuleMethod } from './module-method';\r\nimport { ModuleApiService } from './module-api-service';\r\n\r\nexport class Module {\r\n  list: string;\r\n  name: string;\r\n  methods: { [name: string]: ModuleMethod } = {};\r\n  service: ModuleApiService;\r\n\r\n  addMethod(method: ModuleMethod): void {\r\n    this.methods[method.name] = method;\r\n  }\r\n\r\n  get methodNames(): string[] {\r\n    return Object.keys(this.methods);\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { RunningProcess } from '../running-process/running-process';\r\nimport { RunningMethod } from '../running-process/running-method';\r\nimport { StepInfo } from './step-info';\r\nimport { RunningProcessService } from '../running-process/running-process.service';\r\n\r\n/**\r\n * Helper for components to know which process is currently executed.\r\n * Should be included as provider in api components.\r\n */\r\n@Injectable()\r\nexport class ProcessApiService implements OnDestroy {\r\n  private _loadedObservable: Observable<void>;\r\n  private _loaded: Subject<void>;\r\n  get loaded(): Observable<void> {\r\n    return this._loadedObservable;\r\n  }\r\n\r\n  runningProcess: RunningProcess = null;\r\n  runningMethod: RunningMethod = null;\r\n  errorLoading = false;\r\n\r\n  stepInfo: StepInfo = null;\r\n\r\n  private querySubscription: Subscription = null;\r\n  private changesFeed: Subscription = null;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private runningProcessService: RunningProcessService\r\n  ) {\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    this._loaded = new Subject<void>();\r\n    this._loadedObservable = this._loaded.asObservable();\r\n    this.querySubscription = this.route.queryParamMap.subscribe((params) => {\r\n      this.stepInfo = {\r\n        step: params.has('step') ? +params.get('step') : undefined,\r\n        runningProcessId: params.has('runningProcessId')\r\n          ? params.get('runningProcessId')\r\n          : undefined,\r\n        executionId: params.has('executionId')\r\n          ? params.get('executionId')\r\n          : undefined,\r\n      };\r\n      this.checkUnsubscribeChangesFeed();\r\n      if (this.stepInfo.runningProcessId != null) {\r\n        this.changesFeed = this.runningProcessService\r\n          .getChangesFeed(this.stepInfo.runningProcessId)\r\n          .subscribe(() => this.loadProcessInfo());\r\n        void this.loadProcessInfo();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.checkUnsubscribeChangesFeed();\r\n    this.querySubscription.unsubscribe();\r\n    this._loaded.complete();\r\n  }\r\n\r\n  isInitialized(): boolean {\r\n    return this.runningProcess != null;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.runningMethod.currentStepNumber === this.stepInfo.step;\r\n  }\r\n\r\n  get queryParams(): {\r\n    step: number;\r\n    runningProcessId: string;\r\n    executionId: string;\r\n  } {\r\n    return {\r\n      step: this.stepInfo.step != null ? this.stepInfo.step : undefined,\r\n      runningProcessId: this.runningProcess\r\n        ? this.runningProcess._id\r\n        : undefined,\r\n      executionId:\r\n        this.runningMethod != null ? this.runningMethod.executionId : undefined,\r\n    };\r\n  }\r\n\r\n  private async loadProcessInfo(): Promise<void> {\r\n    try {\r\n      this.runningProcess = await this.runningProcessService.get(\r\n        this.stepInfo.runningProcessId\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.errorLoading = true;\r\n      this.runningProcess = null;\r\n      this.runningMethod = null;\r\n      return;\r\n    }\r\n    this.runningMethod = this.runningProcess.getRunningMethod(\r\n      this.stepInfo.executionId\r\n    );\r\n    if (this.runningMethod == null) {\r\n      this.errorLoading = true;\r\n      this.runningMethod = null;\r\n    } else {\r\n      this._loaded.next();\r\n    }\r\n  }\r\n\r\n  private checkUnsubscribeChangesFeed(): void {\r\n    if (this.changesFeed) {\r\n      this.changesFeed.unsubscribe();\r\n      this.changesFeed = null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ProcessPattern,\r\n  ProcessPatternEntry,\r\n  ProcessPatternInit,\r\n} from './process-pattern';\r\nimport { Type } from '../method-elements/type/type';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\nimport { DefaultElementService } from '../../database/default-element.service';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class ProcessPatternService extends DefaultElementService<\r\n  ProcessPattern,\r\n  ProcessPatternInit\r\n> {\r\n  protected readonly typeName = ProcessPattern.typeName;\r\n\r\n  protected readonly elementConstructor = ProcessPattern;\r\n\r\n  /**\r\n   * Get a list of process patterns that have the needed types, but not the forbidden ones.\r\n   *\r\n   * @param needed needed types\r\n   * @param forbidden forbidden types\r\n   */\r\n  async getValidProcessPatterns(\r\n    needed: { list: string; element: { _id: string; name: string } }[],\r\n    forbidden: { list: string; element: { _id: string; name: string } }[]\r\n  ): Promise<ProcessPatternEntry[]> {\r\n    return (\r\n      await this.pouchdbService.find<ProcessPatternEntry>(\r\n        ProcessPattern.typeName,\r\n        {\r\n          selector: {},\r\n        }\r\n      )\r\n    ).filter((pattern) => Type.validTypes(pattern.types, needed, forbidden));\r\n  }\r\n\r\n  /**\r\n   * Update the process pattern.\r\n   *\r\n   * @param id id of the process pattern\r\n   * @param processPattern the new values of the object (values will be copied)\r\n   */\r\n  async update(\r\n    id: string,\r\n    processPattern: Partial<ProcessPattern>\r\n  ): Promise<void> {\r\n    const dbProcessPattern = await this.get(id);\r\n    dbProcessPattern.update(processPattern);\r\n    await this.save(dbProcessPattern);\r\n  }\r\n\r\n  /**\r\n   * Get process patterns by their ids\r\n   *\r\n   * @param ids the ids to query\r\n   */\r\n  async getProcessPatterns(ids: string[]): Promise<ProcessPattern[]> {\r\n    return (\r\n      await this.pouchdbService.find<ProcessPatternEntry>(\r\n        ProcessPattern.typeName,\r\n        {\r\n          selector: {\r\n            _id: {\r\n              $in: ids,\r\n            },\r\n          },\r\n        }\r\n      )\r\n    ).map((pattern) => new ProcessPattern(pattern, undefined));\r\n  }\r\n}\r\n","import { DatabaseModel } from '../../database/database-model';\r\nimport { Author, AuthorEntry, AuthorInit } from '../../model/author';\r\nimport {\r\n  SituationalFactor,\r\n  SituationalFactorEntry,\r\n  SituationalFactorInit,\r\n} from '../method-elements/situational-factor/situational-factor';\r\nimport { Type, TypeEntry, TypeInit } from '../method-elements/type/type';\r\nimport {\r\n  Selection,\r\n  SelectionEntry,\r\n  SelectionInit,\r\n} from '../development-method/selection';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n} from '../../database/database-entry';\r\n\r\nexport interface ProcessPatternInit extends DatabaseRootInit {\r\n  name: string;\r\n  description?: string;\r\n  author?: AuthorInit;\r\n\r\n  pattern?: string;\r\n\r\n  types?: SelectionInit<TypeInit>[];\r\n  situationalFactors?: SelectionInit<SituationalFactorInit>[];\r\n}\r\n\r\nexport interface ProcessPatternEntry extends DatabaseRootEntry {\r\n  name: string;\r\n  description: string;\r\n  author: AuthorEntry;\r\n\r\n  pattern: string;\r\n\r\n  types: SelectionEntry<TypeEntry>[];\r\n  situationalFactors: SelectionEntry<SituationalFactorEntry>[];\r\n}\r\n\r\nexport class ProcessPattern\r\n  extends DatabaseModel\r\n  implements ProcessPatternInit\r\n{\r\n  static readonly typeName = 'ProcessPattern';\r\n\r\n  name: string;\r\n  description: string;\r\n  author: Author;\r\n\r\n  pattern: string;\r\n\r\n  types: Selection<Type>[] = [];\r\n  situationalFactors: Selection<SituationalFactor>[] = [];\r\n\r\n  constructor(\r\n    entry: ProcessPatternEntry | undefined,\r\n    init: ProcessPatternInit | undefined\r\n  ) {\r\n    super(entry, init, ProcessPattern.typeName);\r\n    const element = entry ?? init;\r\n    this.name = element.name;\r\n    this.description = element.description;\r\n    this.pattern = element.pattern;\r\n\r\n    if (entry != null) {\r\n      this.author = new Author(entry.author, undefined);\r\n      this.types =\r\n        entry.types?.map(\r\n          (selection) => new Selection<Type>(selection, undefined, Type)\r\n        ) ?? this.types;\r\n      this.situationalFactors =\r\n        entry.situationalFactors?.map(\r\n          (selection) =>\r\n            new Selection<SituationalFactor>(\r\n              selection,\r\n              undefined,\r\n              SituationalFactor\r\n            )\r\n        ) ?? this.situationalFactors;\r\n    } else {\r\n      this.author = new Author(undefined, init.author ?? {});\r\n      this.types =\r\n        init.types?.map(\r\n          (selection) => new Selection<Type>(undefined, selection, Type)\r\n        ) ?? this.types;\r\n      this.situationalFactors =\r\n        init.situationalFactors?.map(\r\n          (selection) =>\r\n            new Selection<SituationalFactor>(\r\n              undefined,\r\n              selection,\r\n              SituationalFactor\r\n            )\r\n        ) ?? this.situationalFactors;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update this process pattern with new values\r\n   *\r\n   * @param processPattern the new values of this process pattern (values will be copied to the current object)\r\n   */\r\n  update(processPattern: Partial<ProcessPattern>): void {\r\n    Object.assign(this, processPattern);\r\n    this.author = new Author(undefined, this.author);\r\n    this.types = this.types.map(\r\n      (selection) => new Selection(undefined, selection, Type)\r\n    );\r\n    this.situationalFactors = this.situationalFactors.map(\r\n      (selection) => new Selection(undefined, selection, SituationalFactor)\r\n    );\r\n  }\r\n\r\n  toDb(): ProcessPatternEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      name: this.name,\r\n      description: this.description,\r\n      author: this.author.toDb(),\r\n      pattern: this.pattern,\r\n      types: this.types.map((selection) => selection.toDb()),\r\n      situationalFactors: this.situationalFactors.map((selection) =>\r\n        selection.toDb()\r\n      ),\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\nimport {\r\n  ArtifactData,\r\n  ArtifactDataReference,\r\n  ArtifactDataType,\r\n} from './artifact-data';\r\nimport { MetaModelService } from '../meta-model.service';\r\n\r\nexport enum ArtifactDataErrors {\r\n  WRONG_ARTIFACT_TYPE = 'You can only delete reference artifacts',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class ArtifactDataService {\r\n  constructor(private metaModelService: MetaModelService) {}\r\n\r\n  /**\r\n   * Removes an artifact reference\r\n   *\r\n   * @param artifact the artifact to remove\r\n   */\r\n  async remove(artifact: ArtifactData): Promise<void> {\r\n    if (artifact.type !== ArtifactDataType.REFERENCE) {\r\n      throw new Error(ArtifactDataErrors.WRONG_ARTIFACT_TYPE);\r\n    }\r\n    const reference: ArtifactDataReference = artifact.data;\r\n    const api = this.metaModelService.getMetaModelApi(reference.type);\r\n    try {\r\n      await api.remove(reference);\r\n    } catch (error) {\r\n      if (\r\n        error.status === 404 &&\r\n        error.name === 'not_found' &&\r\n        error.reason === 'deleted'\r\n      ) {\r\n        console.log(reference.id + ' (' + reference.type + ') already deleted');\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy an artifact reference\r\n   *\r\n   * @param artifact the artifact to copy\r\n   * @return the copied artifact\r\n   */\r\n  async copy(artifact: ArtifactData): Promise<ArtifactData> {\r\n    if (artifact.type !== ArtifactDataType.REFERENCE) {\r\n      throw new Error(ArtifactDataErrors.WRONG_ARTIFACT_TYPE);\r\n    }\r\n    const reference: ArtifactDataReference = artifact.data;\r\n    const api = this.metaModelService.getMetaModelApi(reference.type);\r\n    return new ArtifactData(undefined, {\r\n      ...artifact,\r\n      data: await api.copy(reference),\r\n    });\r\n  }\r\n}\r\n","import { DatabaseModelPart } from '../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport enum ArtifactDataType {\r\n  CUSTOM,\r\n  STRING,\r\n  REFERENCE,\r\n}\r\n\r\nexport interface ArtifactDataReference {\r\n  id: string;\r\n  type: string;\r\n}\r\n\r\nexport interface ArtifactDataInit extends DatabaseInit {\r\n  type?: ArtifactDataType;\r\n  data?: any;\r\n}\r\n\r\nexport interface ArtifactDataEntry extends DatabaseEntry {\r\n  type: ArtifactDataType;\r\n  data: any;\r\n}\r\n\r\nexport class ArtifactData implements ArtifactDataInit, DatabaseModelPart {\r\n  type: ArtifactDataType = ArtifactDataType.STRING;\r\n  data: any;\r\n\r\n  constructor(\r\n    entry: ArtifactDataEntry | undefined,\r\n    init: ArtifactDataInit | undefined\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.type = element.type ?? this.type;\r\n    this.data = element.data;\r\n  }\r\n\r\n  toDb(): ArtifactDataEntry {\r\n    return {\r\n      type: this.type,\r\n      data: this.data,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  ArtifactData,\r\n  ArtifactDataEntry,\r\n  ArtifactDataInit,\r\n} from './artifact-data';\r\nimport { DatabaseModelPart } from '../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface ArtifactVersionInit extends DatabaseInit {\r\n  time?: number;\r\n  createdBy: 'manual' | 'imported' | string;\r\n  importName?: string;\r\n  executedBy: string;\r\n  data?: ArtifactDataInit;\r\n}\r\n\r\nexport interface ArtifactVersionEntry extends DatabaseEntry {\r\n  time: number;\r\n  createdBy: 'manual' | 'imported' | string;\r\n  importName?: string;\r\n  executedBy: string;\r\n  data: ArtifactDataEntry;\r\n}\r\n\r\nexport class ArtifactVersion implements DatabaseModelPart {\r\n  time: number;\r\n  createdBy: 'manual' | 'imported' | string;\r\n  importName?: string;\r\n  executedBy: string;\r\n  data: ArtifactData;\r\n\r\n  constructor(\r\n    entry: ArtifactVersionEntry | undefined,\r\n    init: ArtifactVersionInit | undefined\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.time = element.time ?? Date.now();\r\n    this.createdBy = element.createdBy;\r\n    this.importName = element.importName;\r\n    this.executedBy = element.executedBy;\r\n    if (entry != null) {\r\n      this.data = new ArtifactData(entry.data, undefined);\r\n    } else if (init != null) {\r\n      this.data = new ArtifactData(undefined, init.data ?? {});\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  toDb(): ArtifactVersionEntry {\r\n    return {\r\n      time: this.time,\r\n      createdBy: this.createdBy,\r\n      importName: this.importName,\r\n      executedBy: this.executedBy,\r\n      data: this.data.toDb(),\r\n    };\r\n  }\r\n}\r\n","import { DatabaseModelPart } from '../../database/database-model-part';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface CommentInit extends DatabaseInit {\r\n  id?: string;\r\n  time?: number;\r\n  userName: string;\r\n  title: string;\r\n  comment: string;\r\n}\r\n\r\nexport interface CommentEntry extends DatabaseEntry {\r\n  id: string;\r\n  time: number;\r\n  userName: string;\r\n  title: string;\r\n  comment: string;\r\n}\r\n\r\nexport class Comment implements CommentInit, DatabaseModelPart {\r\n  id: string;\r\n  time: number;\r\n  userName: string;\r\n  title: string;\r\n  comment: string;\r\n\r\n  constructor(entry: CommentEntry | undefined, init: CommentInit | undefined) {\r\n    const element = entry ?? init;\r\n    this.id = element.id ?? uuidv4();\r\n    this.time = element.time ?? Date.now();\r\n    this.userName = element.userName;\r\n    this.title = element.title;\r\n    this.comment = element.comment;\r\n  }\r\n\r\n  update(comment: Partial<Comment>): void {\r\n    Object.assign(this, comment);\r\n  }\r\n\r\n  toDb(): CommentEntry {\r\n    return {\r\n      id: this.id,\r\n      time: this.time,\r\n      userName: this.userName,\r\n      title: this.title,\r\n      comment: this.comment,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\nimport { PouchdbService } from '../../database/pouchdb.service';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  RunningArtifact,\r\n  RunningArtifactEntry,\r\n  RunningArtifactInit,\r\n} from './running-artifact';\r\nimport { ArtifactDataType } from './artifact-data';\r\nimport { ArtifactVersion } from './artifact-version';\r\nimport { ArtifactDataService } from './artifact-data.service';\r\nimport { ElementService } from '../../database/element.service';\r\nimport { DatabaseRevision, DbId } from '../../database/database-entry';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class ConcreteArtifactService\r\n  implements ElementService<RunningArtifact, RunningArtifactInit>\r\n{\r\n  constructor(\r\n    private artifactDataService: ArtifactDataService,\r\n    private pouchdbService: PouchdbService\r\n  ) {}\r\n\r\n  async add(artifact: RunningArtifactInit): Promise<void> {\r\n    await this.pouchdbService.post(new RunningArtifact(undefined, artifact));\r\n  }\r\n\r\n  /**\r\n   * Update the artifact identifier\r\n   *\r\n   * @param id the id of the artifact\r\n   * @param identifier the identifier of the artifact\r\n   */\r\n  async updateIdentifier(id: DbId, identifier: string): Promise<void> {\r\n    const artifact = await this.get(id);\r\n    artifact.identifier = identifier;\r\n    await this.save(artifact);\r\n  }\r\n\r\n  /**\r\n   * Exports an artifact from a running process.\r\n   * Copies it sets the identifier and sets created by to the import name.\r\n   *\r\n   * @param identifier the identifier\r\n   * @param artifact the artifact to export\r\n   * @param importName the import name for other processes\r\n   */\r\n  async export(\r\n    identifier: string,\r\n    artifact: RunningArtifact,\r\n    importName: string\r\n  ): Promise<RunningArtifact> {\r\n    artifact = await this.copy(artifact);\r\n    artifact.identifier = identifier;\r\n    artifact.versions.forEach((version) => {\r\n      version.createdBy = 'imported';\r\n      if (version.importName == null) {\r\n        version.importName = importName;\r\n      }\r\n    });\r\n    await this.add(artifact);\r\n    return artifact;\r\n  }\r\n\r\n  async getList(): Promise<RunningArtifactEntry[]> {\r\n    return this.pouchdbService.find<RunningArtifactEntry>(\r\n      RunningArtifact.typeName,\r\n      {\r\n        selector: {},\r\n      }\r\n    );\r\n  }\r\n\r\n  async get(id: string): Promise<RunningArtifact & DatabaseRevision> {\r\n    return new RunningArtifact(\r\n      await this.pouchdbService.get<RunningArtifactEntry>(id),\r\n      undefined\r\n    ) as RunningArtifact & DatabaseRevision;\r\n  }\r\n\r\n  /**\r\n   * Get the changes of a domain\r\n   *\r\n   * @param id the id of the domain\r\n   * @return the changes feed\r\n   */\r\n  getChangesFeed(id: string): Observable<void> {\r\n    return this.pouchdbService.getChangesFeed(id);\r\n  }\r\n\r\n  async delete(id: string): Promise<void> {\r\n    const result = await this.get(id);\r\n    for (const version of result.versions) {\r\n      if (version.data.type === ArtifactDataType.REFERENCE) {\r\n        await this.artifactDataService.remove(version.data);\r\n      }\r\n    }\r\n    await this.pouchdbService.remove(result);\r\n  }\r\n\r\n  async save(runningArtifact: RunningArtifact): Promise<void> {\r\n    await this.pouchdbService.put(runningArtifact);\r\n  }\r\n\r\n  /**\r\n   * Makes a deep copy of the running artifact by also copying the objects\r\n   * behind references.\r\n   *\r\n   * @param runningArtifact the artifact to copy\r\n   * @return the copy\r\n   */\r\n  async copy(runningArtifact: RunningArtifact): Promise<RunningArtifact> {\r\n    const artifact = new RunningArtifact(undefined, runningArtifact);\r\n    artifact.resetDatabaseState();\r\n    artifact.versions = await Promise.all(\r\n      artifact.versions.map(async (version) => {\r\n        if (version.data.type === ArtifactDataType.REFERENCE) {\r\n          return new ArtifactVersion(undefined, {\r\n            ...version,\r\n            data: await this.artifactDataService.copy(version.data),\r\n          });\r\n        }\r\n        return version;\r\n      })\r\n    );\r\n    return artifact;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RunningProcess } from './running-process';\r\nimport { StepArtifact } from './step-artifact';\r\nimport { ArtifactDataType } from './artifact-data';\r\nimport { ModuleService } from '../module-api/module.service';\r\nimport { Router } from '@angular/router';\r\nimport { RunningMethod } from './running-method';\r\nimport { StepInputArtifact } from './step-input-artifact';\r\nimport { Decision } from '../bm-process/decision';\r\nimport { MethodExecutionOutput } from '../module-api/method-execution-output';\r\nimport { MethodExecutionInput } from '../module-api/method-execution-input';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\nimport { ArtifactDataService } from './artifact-data.service';\r\nimport { OutputArtifactMapping } from './output-artifact-mapping';\r\n\r\nexport enum MethodExecutionErrors {\r\n  NO_METHOD = 'The node has no method defined',\r\n  NO_STEPS_LEFT = 'There are no steps left to be executed in the method',\r\n  NOT_DEFINED = 'A method with this execution id is not in the todo list',\r\n  NOT_EXECUTING = 'The execution id is currently not executed',\r\n  NOT_PREPARED = 'The execution of this step is not yet prepared',\r\n  ALREADY_EXECUTING = 'This node is currently already executed.',\r\n  ALREADY_PREPARED = 'The execution of this step is already prepared',\r\n  STEPS_LEFT = 'There are steps left in this method',\r\n  WRONG_STEP = 'Trying to finish the wrong step',\r\n  MISSING_OUTPUT = 'The output artifacts are not correctly mapped',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class MethodExecutionService {\r\n  constructor(\r\n    private artifactDataService: ArtifactDataService,\r\n    private moduleService: ModuleService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  /**\r\n   * Add a method to a running process that is executed out of the defined process\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param decision the method decisions\r\n   */\r\n  addMethod(runningProcess: RunningProcess, decision: Decision): void {\r\n    runningProcess.addTodoMethod(\r\n      new RunningMethod(undefined, {\r\n        decision,\r\n        steps: decision.method.executionSteps.map(() => {\r\n          return {};\r\n        }),\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove a method from a running process that is executed out of the defined process\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the method to remove\r\n   */\r\n  removeMethod(runningProcess: RunningProcess, executionId: string): void {\r\n    runningProcess.removeTodoMethod(executionId);\r\n  }\r\n\r\n  /**\r\n   * Start the execution of a method\r\n   * Does not check whether the node has enough tokens to be executed\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param nodeId the node id of the task which includes the method\r\n   * @return the added running method\r\n   */\r\n  startMethodExecution(\r\n    runningProcess: RunningProcess,\r\n    nodeId: string\r\n  ): RunningMethod {\r\n    if (runningProcess.getRunningMethodByNode(nodeId) != null) {\r\n      throw new Error(MethodExecutionErrors.ALREADY_EXECUTING);\r\n    }\r\n    if (!runningProcess.isExecutable(nodeId)) {\r\n      throw new Error(MethodExecutionErrors.NO_METHOD);\r\n    }\r\n    return runningProcess.addRunningMethodOfProcess(nodeId);\r\n  }\r\n\r\n  /**\r\n   * Start the execution of a todomethod\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the execution id of the todomethod\r\n   */\r\n  startTodoMethodExecution(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): void {\r\n    const method = runningProcess.getTodoMethod(executionId);\r\n    if (method == null) {\r\n      throw new Error(MethodExecutionErrors.NOT_DEFINED);\r\n    }\r\n    runningProcess.addRunningMethod(method);\r\n    runningProcess.removeTodoMethod(executionId);\r\n  }\r\n\r\n  /**\r\n   * Select the input artifacts\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   * @param inputArtifactMapping the input artifact mapping\r\n   */\r\n  selectInputArtifacts(\r\n    runningProcess: RunningProcess,\r\n    executionId: string,\r\n    inputArtifactMapping: { artifact: number; version: number }[]\r\n  ): void {\r\n    const method = runningProcess.getRunningMethod(executionId);\r\n    if (method == null) {\r\n      throw new Error(MethodExecutionErrors.NOT_EXECUTING);\r\n    }\r\n    method.inputArtifacts = inputArtifactMapping.map((mapping) => {\r\n      const artifact = runningProcess.artifacts[mapping.artifact];\r\n      const version = artifact.versions[mapping.version];\r\n      return new StepInputArtifact(undefined, {\r\n        identifier: artifact.identifier,\r\n        artifact: artifact.artifact,\r\n        data: version.data,\r\n        versionInfo: {\r\n          number: mapping.version,\r\n          createdBy: version.createdBy,\r\n          time: version.time,\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check whether the next execution step is already prepared\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   * @return true if the execution step is already prepared\r\n   */\r\n  isExecutionStepPrepared(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): boolean {\r\n    const method = runningProcess.getRunningMethod(executionId);\r\n    return this._isExecutionStepPrepared(method);\r\n  }\r\n\r\n  /**\r\n   * Check whether the next execution step is already prepared\r\n   *\r\n   * @param method the method to check\r\n   * @return true if the execution step is already prepared\r\n   */\r\n  private _isExecutionStepPrepared(method: RunningMethod): boolean {\r\n    if (method == null) {\r\n      throw new Error(MethodExecutionErrors.NOT_EXECUTING);\r\n    }\r\n    if (!method.hasStepsLeft()) {\r\n      throw new Error(MethodExecutionErrors.NO_STEPS_LEFT);\r\n    }\r\n    return method.isPrepared();\r\n  }\r\n\r\n  /**\r\n   * Prepare the execution of a step of the currently running method\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   */\r\n  async prepareExecuteStep(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): Promise<void> {\r\n    const method = runningProcess.getRunningMethod(executionId);\r\n    if (method == null) {\r\n      throw new Error(MethodExecutionErrors.NOT_EXECUTING);\r\n    }\r\n    if (!method.hasStepsLeft()) {\r\n      throw new Error(MethodExecutionErrors.NO_STEPS_LEFT);\r\n    }\r\n    const currentStep = method.currentStep;\r\n    const module = this.moduleService.getModule(currentStep.module);\r\n    const moduleMethod = module.methods[currentStep.method];\r\n    if (method.isPrepared()) {\r\n      throw new Error(MethodExecutionErrors.ALREADY_PREPARED);\r\n    }\r\n    const stepInput = method.getStepArtifacts(\r\n      method.currentStepNumber,\r\n      moduleMethod.input.length\r\n    );\r\n    const stepArtifacts: StepArtifact[] = await this.copyStepArtifacts(\r\n      stepInput\r\n    );\r\n    method.setInternalStepArtifacts(stepArtifacts);\r\n  }\r\n\r\n  /**\r\n   * Execute a step of the currently running method\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   */\r\n  async executeStep(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): Promise<void> {\r\n    const method = runningProcess.getRunningMethod(executionId);\r\n    if (!this._isExecutionStepPrepared(method)) {\r\n      throw new Error(MethodExecutionErrors.NOT_PREPARED);\r\n    }\r\n    const currentStep = method.currentStep;\r\n    const module = this.moduleService.getModule(currentStep.module);\r\n    const moduleMethodDefinition = module.methods[currentStep.method];\r\n    const moduleService = module.service;\r\n    const internalStepArtifacts = method.getInternalStepArtifacts();\r\n    const input: MethodExecutionInput = {\r\n      router: this.router,\r\n      runningProcess,\r\n      runningMethod: method,\r\n      predefinedInput: method.currentStep.predefinedInput,\r\n      inputStepArtifacts: internalStepArtifacts,\r\n    };\r\n    moduleService.executeMethod(moduleMethodDefinition.name, input);\r\n  }\r\n\r\n  /**\r\n   * Finish the execution of a step\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   * @param step the step in the method\r\n   * @param output the output of the method of the module\r\n   */\r\n  finishExecuteStep(\r\n    runningProcess: RunningProcess,\r\n    executionId: string,\r\n    step: number,\r\n    output: MethodExecutionOutput\r\n  ): void {\r\n    const method = runningProcess.getRunningMethod(executionId);\r\n    if (!this._isExecutionStepPrepared(method)) {\r\n      throw new Error(MethodExecutionErrors.NOT_PREPARED);\r\n    }\r\n    if (method.currentStepNumber !== step) {\r\n      throw new Error(MethodExecutionErrors.WRONG_STEP);\r\n    }\r\n    const currentStep = method.currentStep;\r\n    const module = this.moduleService.getModule(currentStep.module);\r\n    const moduleMethodDefinition = module.methods[currentStep.method];\r\n    const artifacts = output.outputArtifactData;\r\n    method.finishStepExecution(\r\n      artifacts.map(\r\n        (artifactData, index) =>\r\n          new StepArtifact(undefined, {\r\n            identifier: undefined,\r\n            artifact: {\r\n              name: undefined,\r\n              list: undefined,\r\n              metaModel: {\r\n                name: undefined,\r\n                type: moduleMethodDefinition.output[index].type,\r\n              },\r\n            },\r\n            data: artifactData,\r\n          })\r\n      )\r\n    );\r\n    void this.router.navigate([\r\n      'runningprocess',\r\n      'runningprocessview',\r\n      runningProcess._id,\r\n      'method',\r\n      executionId,\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Update the output artifact mapping of a method.\r\n   *\r\n   * @param runningProcess the running Process\r\n   * @param executionId the id of the executed method\r\n   * @param outputArtifacts the mapping of the artifacts\r\n   */\r\n  updateOutputArtifacts(\r\n    runningProcess: RunningProcess,\r\n    executionId: string,\r\n    outputArtifacts: OutputArtifactMapping[]\r\n  ): void {\r\n    const method = runningProcess.getRunningMethod(executionId);\r\n    if (method == null) {\r\n      throw new Error(MethodExecutionErrors.NOT_EXECUTING);\r\n    }\r\n    if (method.hasStepsLeft()) {\r\n      throw new Error(MethodExecutionErrors.STEPS_LEFT);\r\n    }\r\n    method.updateOutputArtifacts(outputArtifacts);\r\n  }\r\n\r\n  /**\r\n   * Add the output artifacts\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   * @param outputArtifactsMapping the mapping of the artifacts\r\n   */\r\n  private async addOutputArtifacts(\r\n    runningProcess: RunningProcess,\r\n    executionId: string,\r\n    outputArtifactsMapping: OutputArtifactMapping[]\r\n  ): Promise<void> {\r\n    const method = runningProcess.getRunningMethod(executionId);\r\n    if (method == null) {\r\n      throw new Error(MethodExecutionErrors.NOT_EXECUTING);\r\n    }\r\n    if (method.hasStepsLeft()) {\r\n      throw new Error(MethodExecutionErrors.STEPS_LEFT);\r\n    }\r\n    const artifacts = method.getProcessOutputArtifacts();\r\n    const methodOutputArtifacts = await this.copyStepArtifacts(\r\n      method.getOutputArtifacts()\r\n    );\r\n    for (let i = 0; i < methodOutputArtifacts.length; i++) {\r\n      if (methodOutputArtifacts[i] != null) {\r\n        outputArtifactsMapping[i].data = methodOutputArtifacts[i].data;\r\n      }\r\n    }\r\n    runningProcess.addOutputArtifacts(\r\n      executionId,\r\n      artifacts,\r\n      outputArtifactsMapping\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stop the execution of a method after it is finished\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   */\r\n  async stopMethodExecution(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): Promise<void> {\r\n    const method = runningProcess.getRunningMethod(executionId);\r\n    if (method == null) {\r\n      throw new Error(MethodExecutionErrors.NOT_EXECUTING);\r\n    }\r\n    if (method.hasStepsLeft()) {\r\n      throw new Error(MethodExecutionErrors.STEPS_LEFT);\r\n    }\r\n    if (!method.hasOutputArtifactsCorrectlyDefined()) {\r\n      throw new Error(MethodExecutionErrors.MISSING_OUTPUT);\r\n    }\r\n    await this.addOutputArtifacts(\r\n      runningProcess,\r\n      executionId,\r\n      method.outputArtifacts ?? []\r\n    );\r\n    await this.removeUnusedArtifacts(method);\r\n    runningProcess.addExecutedMethod({\r\n      nodeId: method.nodeId,\r\n      executionId: method.executionId,\r\n      methodName: method.methodName,\r\n      comments: method.comments,\r\n    });\r\n    runningProcess.removeRunningMethod(executionId);\r\n  }\r\n\r\n  /**\r\n   * Abort the execution of a method\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   */\r\n  async abortMethodExecution(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): Promise<void> {\r\n    const method = runningProcess.getRunningMethod(executionId);\r\n    if (method == null) {\r\n      throw new Error(MethodExecutionErrors.NOT_EXECUTING);\r\n    }\r\n    await this.removeUnusedArtifacts(method);\r\n    runningProcess.removeRunningMethod(executionId);\r\n  }\r\n\r\n  /**\r\n   * Copy the step artifacts\r\n   *\r\n   * @param stepArtifacts the step artifacts\r\n   * @return the copied step artifacts\r\n   */\r\n  private async copyStepArtifacts(\r\n    stepArtifacts: StepArtifact[]\r\n  ): Promise<StepArtifact[]> {\r\n    return Promise.all(\r\n      stepArtifacts.map(async (artifact) => {\r\n        if (artifact.data.type === ArtifactDataType.REFERENCE) {\r\n          return new StepArtifact(undefined, {\r\n            ...artifact,\r\n            data: await this.artifactDataService.copy(artifact.data),\r\n          });\r\n        }\r\n        return new StepArtifact(undefined, artifact);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove all step artifacts in steps\r\n   *\r\n   * @param method the running method\r\n   */\r\n  private async removeUnusedArtifacts(method: RunningMethod): Promise<void> {\r\n    const artifacts = method.getAllStepArtifacts();\r\n    const toRemove = artifacts.filter(\r\n      (artifact) => artifact.data.type === ArtifactDataType.REFERENCE\r\n    );\r\n    for (const artifact of toRemove) {\r\n      await this.artifactDataService.remove(artifact.data);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ArtifactData,\r\n  ArtifactDataEntry,\r\n  ArtifactDataInit,\r\n} from './artifact-data';\r\nimport { DatabaseModelPart } from '../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface OutputArtifactMappingInit extends DatabaseInit {\r\n  isDefinition: boolean;\r\n  artifact?: number;\r\n  artifactName?: string;\r\n  data: ArtifactDataInit;\r\n}\r\n\r\nexport interface OutputArtifactMappingEntry extends DatabaseEntry {\r\n  isDefinition: boolean;\r\n  artifact?: number;\r\n  artifactName?: string;\r\n  data: ArtifactDataEntry;\r\n}\r\n\r\nexport class OutputArtifactMapping\r\n  implements OutputArtifactMappingInit, DatabaseModelPart\r\n{\r\n  isDefinition: boolean;\r\n  artifact?: number;\r\n  artifactName?: string;\r\n  data: ArtifactData;\r\n\r\n  constructor(\r\n    entry: OutputArtifactMappingEntry | undefined,\r\n    init: OutputArtifactMappingInit | undefined\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.isDefinition = element.isDefinition;\r\n    this.artifact = element.artifact;\r\n    this.artifactName = element.artifactName;\r\n    if (entry != null) {\r\n      this.data = new ArtifactData(entry.data, undefined);\r\n    } else if (init != null) {\r\n      this.data = new ArtifactData(undefined, init.data);\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  toDb(): OutputArtifactMappingEntry {\r\n    return {\r\n      isDefinition: this.isDefinition,\r\n      artifact: this.artifact,\r\n      artifactName: this.artifactName,\r\n      data: this.data.toDb(),\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport bmdl from '../../../assets/bpmn_bmdl.json';\r\nimport rbmp from '../../../assets/bpmn_running_process.json';\r\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\r\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\r\nimport { isLabel } from 'bpmn-js/lib/util/LabelUtil';\r\nimport { RunningProcess } from './running-process';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class ProcessExecutionModelerService {\r\n  /**\r\n   * Get a BpmnModeler with the imported running process\r\n   *\r\n   * @param runningProcess the running process to import\r\n   * @return the bpmnModeler\r\n   */\r\n  async initModeling(runningProcess: RunningProcess): Promise<BpmnModeler> {\r\n    const processModeler = this.getRunningProcessModeler();\r\n    await processModeler.importXML(runningProcess.process.processDiagram);\r\n    return processModeler;\r\n  }\r\n\r\n  /**\r\n   * End the modeling and update the diagram of the running process\r\n   *\r\n   * @param runningProcess the running process to update\r\n   * @param modeler the modeler\r\n   */\r\n  async endModeling(\r\n    runningProcess: RunningProcess,\r\n    modeler: BpmnModeler\r\n  ): Promise<void> {\r\n    const result = await modeler.saveXML();\r\n    runningProcess.process.processDiagram = result.xml;\r\n    modeler.destroy();\r\n  }\r\n\r\n  /**\r\n   * Destroy the modeler\r\n   *\r\n   * @param modeler the modeler\r\n   */\r\n  abortModeling(modeler: BpmnModeler): void {\r\n    modeler.destroy();\r\n  }\r\n\r\n  /**\r\n   * Get a BpmnModeler with customizations to manage running processes\r\n   *\r\n   * @return a bpmnModeler\r\n   */\r\n  private getRunningProcessModeler(): BpmnModeler {\r\n    return new BpmnModeler({\r\n      additionalModules: [],\r\n      moddleExtensions: {\r\n        bmdl,\r\n        rbmp,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filter nodes of the modeler\r\n   *\r\n   * @param modeler the modeler\r\n   * @param filter the filter function\r\n   * @return the list of the filtered nodes\r\n   */\r\n  filterNodes(modeler: BpmnModeler, filter: (node) => boolean): any[] {\r\n    return modeler.get('elementRegistry').filter(filter);\r\n  }\r\n\r\n  /**\r\n   * Get a node from a node id\r\n   *\r\n   * @param modeler the modeler\r\n   * @param nodeId the id of the node\r\n   * @return the node\r\n   */\r\n  getNode(modeler: BpmnModeler, nodeId: string): any {\r\n    return modeler.get('elementRegistry').get(nodeId);\r\n  }\r\n\r\n  /**\r\n   * Get the start event that has the process as a parent\r\n   *\r\n   * @param modeler the modeler\r\n   * @return the start event node\r\n   */\r\n  getStartNode(modeler: BpmnModeler): any {\r\n    return modeler\r\n      .get('elementRegistry')\r\n      .find(\r\n        (node) =>\r\n          is(node, 'bpmn:StartEvent') &&\r\n          is(node.parent, 'bpmn:Process') &&\r\n          !isLabel(node)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get how many tokens this node stores\r\n   *\r\n   * @param node the node to check\r\n   * @return the token count\r\n   */\r\n  getTokens(node): number {\r\n    return node.businessObject.get('tokens');\r\n  }\r\n\r\n  /**\r\n   * Get all incoming flows of a node\r\n   *\r\n   * @param node the node\r\n   * @return the incoming flows\r\n   */\r\n  getIncomingFlows(node): any[] {\r\n    return node.incoming;\r\n  }\r\n\r\n  /**\r\n   * Get all target flows of a node, subprocess adjusted\r\n   *\r\n   * @param node the node\r\n   * @return the target flows\r\n   */\r\n  getTargetFlows(node): any[] {\r\n    let currentNode;\r\n    let outgoingFlows;\r\n    for (\r\n      currentNode = node, outgoingFlows = currentNode.outgoing;\r\n      outgoingFlows.length === 0;\r\n      currentNode = currentNode.parent, outgoingFlows = currentNode.outgoing\r\n    ) {\r\n      if (is(currentNode.parent, 'bpmn:Process')) {\r\n        return [];\r\n      }\r\n    }\r\n    return outgoingFlows;\r\n  }\r\n\r\n  /**\r\n   * Get the target node of a flow\r\n   *\r\n   * @param flow the flow to analyse\r\n   * @return the target node\r\n   */\r\n  getTargetNode(flow): any {\r\n    const target = flow.target;\r\n    if (is(target, 'bpmn:SubProcess')) {\r\n      return target.children.find((element) => is(element, 'bpmn:StartEvent'));\r\n    }\r\n    return target;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the node is a common node, i.e. a gateway or end or start event\r\n   *\r\n   * @param node the node to check\r\n   * @return true if the node is a common node\r\n   */\r\n  isCommonNode(node): boolean {\r\n    return (\r\n      (is(node, 'bpmn:StartEvent') ||\r\n        is(node, 'bpmn:EndEvent') ||\r\n        is(node, 'bpmn:ExclusiveGateway') ||\r\n        is(node, 'bpmn:ParallelGateway')) &&\r\n      !isLabel(node)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks whether the node is an exclusive gateway\r\n   *\r\n   * @param node the node to check\r\n   * @return true if the node is an exclusive gateway\r\n   */\r\n  isExclusiveGateway(node): boolean {\r\n    return is(node, 'bpmn:ExclusiveGateway') && !isLabel(node);\r\n  }\r\n\r\n  /**\r\n   * Checks whether the node is a parallel gateway\r\n   *\r\n   * @param node the node to check\r\n   * @return true if the node is a parallel gateway\r\n   */\r\n  isParallelGateway(node): boolean {\r\n    return is(node, 'bpmn:ParallelGateway') && !isLabel(node);\r\n  }\r\n\r\n  /**\r\n   * Checks whether the node is executable, i.e. a task or method\r\n   *\r\n   * @param node the node to check\r\n   * @return true if the node is executable\r\n   */\r\n  isExecutable(node): boolean {\r\n    return (\r\n      (is(node, 'bpmn:Task') || is(node, 'bpmn:CallActivity')) && !isLabel(node)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks whether the node is a sub process\r\n   *\r\n   * @param node the node to check\r\n   * @return true if the node is a sub process\r\n   */\r\n  isSubProcess(node): boolean {\r\n    return is(node, 'bpmn:SubProcess') && !isLabel(node);\r\n  }\r\n\r\n  /**\r\n   * Set the node to executed\r\n   *\r\n   * @param modeler the modeler\r\n   * @param node the node\r\n   * @param value whether the node is executed or not\r\n   */\r\n  setExecuted(modeler: BpmnModeler, node, value: boolean = true): void {\r\n    modeler.get('modeling').updateProperties(node, { executed: value });\r\n  }\r\n\r\n  /**\r\n   * Set the flow to used\r\n   *\r\n   * @param modeler the modeler\r\n   * @param flow the flow\r\n   * @param value whether the flow is used or not\r\n   */\r\n  setUsed(modeler: BpmnModeler, flow, value: boolean = true): void {\r\n    modeler.get('modeling').updateProperties(flow, { used: value });\r\n  }\r\n\r\n  /**\r\n   * Update the token number\r\n   *\r\n   * @param modeler the modeler\r\n   * @param node the node to update\r\n   * @param delta the delta of tokens\r\n   */\r\n  updateTokens(modeler: BpmnModeler, node, delta: number): void {\r\n    const modeling = modeler.get('modeling');\r\n    let current = node;\r\n    while (current && !is(current, 'bpmn:Process')) {\r\n      modeling.updateProperties(current, {\r\n        tokens: this.getTokens(current) + delta,\r\n      });\r\n      current = current.parent;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RunningProcess } from './running-process';\r\nimport { ProcessExecutionModelerService } from './process-execution-modeler.service';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\n\r\nexport enum ExecutionErrors {\r\n  MULTIPLE_OPTIONS = 'No outgoing flow selected for exclusive gateway.',\r\n  NOT_ENOUGH_TOKENS = 'Element has not enough tokens to be executed.',\r\n  NODE_NOT_FOUND = 'Node not found',\r\n  INCORRECT_NODE = 'Node can not be used with this method',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class ProcessExecutionService {\r\n  constructor(\r\n    private processExecutionModelerService: ProcessExecutionModelerService\r\n  ) {}\r\n\r\n  /**\r\n   * Initialize a running process and add the first token\r\n   *\r\n   * @param runningProcess the running process\r\n   */\r\n  async initRunningProcess(runningProcess: RunningProcess): Promise<void> {\r\n    const modeler = await this.processExecutionModelerService.initModeling(\r\n      runningProcess\r\n    );\r\n    const startNode = this.processExecutionModelerService.getStartNode(modeler);\r\n    this.processExecutionModelerService.updateTokens(modeler, startNode, 1);\r\n    await this.processExecutionModelerService.endModeling(\r\n      runningProcess,\r\n      modeler\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Move to the next node from current node\r\n   * Node has to be a common node, not a task or method\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param nodeId the id of the node\r\n   * @param flowId the id of the flow to take if the node is a XOR node with multiple outgoing nodes\r\n   */\r\n  async moveToNextStep(\r\n    runningProcess: RunningProcess,\r\n    nodeId: string,\r\n    flowId: string = null\r\n  ): Promise<void> {\r\n    const modeler = await this.processExecutionModelerService.initModeling(\r\n      runningProcess\r\n    );\r\n    const node = this.processExecutionModelerService.getNode(modeler, nodeId);\r\n    if (node == null) {\r\n      throw new Error(ExecutionErrors.NODE_NOT_FOUND);\r\n    }\r\n    if (\r\n      !this.processExecutionModelerService.isCommonNode(node) &&\r\n      runningProcess.isExecutable(nodeId)\r\n    ) {\r\n      throw new Error(ExecutionErrors.INCORRECT_NODE);\r\n    }\r\n    this._moveToNextStep(modeler, node, flowId);\r\n    await this.processExecutionModelerService.endModeling(\r\n      runningProcess,\r\n      modeler\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Move to the next node from current node\r\n   * Node has to be a common node, not a task or method\r\n   *\r\n   * @param modeler the modeler\r\n   * @param node the node\r\n   * @param flowId the id of the flow to take if the node is a XOR node with multiple outgoing nodes\r\n   */\r\n  private _moveToNextStep(\r\n    modeler: any,\r\n    node: any,\r\n    flowId: string = null\r\n  ): void {\r\n    if (!this.hasEnoughTokens(node)) {\r\n      throw new Error(ExecutionErrors.NOT_ENOUGH_TOKENS);\r\n    }\r\n    let targetFlows = this.processExecutionModelerService.getTargetFlows(node);\r\n    if (\r\n      this.processExecutionModelerService.isExclusiveGateway(node) &&\r\n      targetFlows.length > 1 &&\r\n      (flowId == null || !targetFlows.map((flow) => flow.id).includes(flowId))\r\n    ) {\r\n      throw new Error(ExecutionErrors.MULTIPLE_OPTIONS);\r\n    }\r\n    if (\r\n      this.processExecutionModelerService.isExclusiveGateway(node) &&\r\n      targetFlows.length > 1 &&\r\n      flowId != null\r\n    ) {\r\n      targetFlows = [targetFlows.find((flow) => flow.id === flowId)];\r\n    }\r\n    this.processExecutionModelerService.setExecuted(modeler, node);\r\n    this.followFlows(modeler, targetFlows);\r\n    this.processExecutionModelerService.updateTokens(\r\n      modeler,\r\n      node,\r\n      -this.getMinimumNeededTokens(node)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Move to the next node after the execution of a method\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param nodeId the id of the node\r\n   */\r\n  async moveToNextMethod(\r\n    runningProcess: RunningProcess,\r\n    nodeId: string\r\n  ): Promise<void> {\r\n    const modeler = await this.processExecutionModelerService.initModeling(\r\n      runningProcess\r\n    );\r\n    const node = this.processExecutionModelerService.getNode(modeler, nodeId);\r\n    if (node == null) {\r\n      throw new Error(ExecutionErrors.NODE_NOT_FOUND);\r\n    }\r\n    if (\r\n      !this.processExecutionModelerService.isExecutable(node) ||\r\n      !runningProcess.isExecutable(nodeId)\r\n    ) {\r\n      throw new Error(ExecutionErrors.INCORRECT_NODE);\r\n    }\r\n    this.processExecutionModelerService.setExecuted(modeler, node);\r\n    const targetFlows =\r\n      this.processExecutionModelerService.getTargetFlows(node);\r\n    this.followFlows(modeler, targetFlows);\r\n    this.processExecutionModelerService.updateTokens(\r\n      modeler,\r\n      node,\r\n      -this.getMinimumNeededTokens(node)\r\n    );\r\n    await this.processExecutionModelerService.endModeling(\r\n      runningProcess,\r\n      modeler\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Jump until there are only methods to be executed\r\n   *\r\n   * @param runningProcess the running process\r\n   */\r\n  async jumpToNextMethod(runningProcess: RunningProcess): Promise<void> {\r\n    const modeler = await this.processExecutionModelerService.initModeling(\r\n      runningProcess\r\n    );\r\n    const ignoredIds = new Set<string>();\r\n    const filterCommonNodes = (node): boolean =>\r\n      !ignoredIds.has(node.id) &&\r\n      (this.processExecutionModelerService.isCommonNode(node) ||\r\n        (!runningProcess.isExecutable(node.id) &&\r\n          this.processExecutionModelerService.isExecutable(node)));\r\n    for (\r\n      let nodes = this._getExecutableNodes(modeler).filter(filterCommonNodes);\r\n      nodes.length > 0;\r\n      nodes = this._getExecutableNodes(modeler).filter(filterCommonNodes)\r\n    ) {\r\n      for (const node of nodes) {\r\n        try {\r\n          this._moveToNextStep(modeler, node);\r\n        } catch (e) {\r\n          if (e.message === ExecutionErrors.MULTIPLE_OPTIONS) {\r\n            ignoredIds.add(node.id);\r\n          } else {\r\n            throw e;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    await this.processExecutionModelerService.endModeling(\r\n      runningProcess,\r\n      modeler\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Follow the flows to the next nodes\r\n   *\r\n   * @param modeler the current modeler\r\n   * @param targetFlows the target flows\r\n   */\r\n  private followFlows(modeler: any, targetFlows: any[]): void {\r\n    targetFlows.forEach((flow) =>\r\n      this.processExecutionModelerService.setUsed(modeler, flow)\r\n    );\r\n    const targets = targetFlows.map(\r\n      this.processExecutionModelerService.getTargetNode\r\n    );\r\n    targets.forEach((target) => {\r\n      this.processExecutionModelerService.setExecuted(modeler, target, false);\r\n      this.processExecutionModelerService.updateTokens(modeler, target, 1);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check whether it is possible to execute the node\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param nodeId the id of the node to execute\r\n   * @return true if the node can be executed\r\n   */\r\n  async canExecuteNode(\r\n    runningProcess: RunningProcess,\r\n    nodeId: string\r\n  ): Promise<boolean> {\r\n    const modeler = await this.processExecutionModelerService.initModeling(\r\n      runningProcess\r\n    );\r\n    const node = this.processExecutionModelerService.getNode(modeler, nodeId);\r\n    if (node == null) {\r\n      throw new Error(ExecutionErrors.NODE_NOT_FOUND);\r\n    }\r\n    if (\r\n      !this.processExecutionModelerService.isExecutable(node) ||\r\n      !runningProcess.isExecutable(nodeId)\r\n    ) {\r\n      throw new Error(ExecutionErrors.INCORRECT_NODE);\r\n    }\r\n    if (!this.hasEnoughTokens(node)) {\r\n      throw new Error(ExecutionErrors.NOT_ENOUGH_TOKENS);\r\n    }\r\n    this.processExecutionModelerService.abortModeling(modeler);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get all nodes that can be executed, i.e. have enough tokens and are not subprocesses\r\n   *\r\n   * @param runningProcess the running process\r\n   * @return the nodes that have enough tokens to be executed\r\n   */\r\n  async getExecutableNodes(runningProcess: RunningProcess): Promise<any[]> {\r\n    const modeler = await this.processExecutionModelerService.initModeling(\r\n      runningProcess\r\n    );\r\n    const nodes = this._getExecutableNodes(modeler);\r\n    this.processExecutionModelerService.abortModeling(modeler);\r\n    return nodes;\r\n  }\r\n\r\n  /**\r\n   * Get all decision nodes that are executable and need a decision\r\n   *\r\n   * @param runningProcess the running process\r\n   * @return the decision nodes\r\n   */\r\n  async getExecutableDecisionNodes(\r\n    runningProcess: RunningProcess\r\n  ): Promise<any[]> {\r\n    const modeler = await this.processExecutionModelerService.initModeling(\r\n      runningProcess\r\n    );\r\n    const nodes = this.processExecutionModelerService.filterNodes(\r\n      modeler,\r\n      (node) =>\r\n        this.hasEnoughTokens(node) &&\r\n        this.processExecutionModelerService.isExclusiveGateway(node) &&\r\n        this.processExecutionModelerService.getTargetFlows(node).length > 1\r\n    );\r\n    this.processExecutionModelerService.abortModeling(modeler);\r\n    return nodes;\r\n  }\r\n\r\n  /**\r\n   * Get all nodes that can be executed, i.e. have enough tokens and are not subprocesses\r\n   *\r\n   * @param modeler the modeler\r\n   * @return the nodes that have enough tokens to be executed\r\n   */\r\n  private _getExecutableNodes(modeler: any): any[] {\r\n    return this.processExecutionModelerService.filterNodes(\r\n      modeler,\r\n      (node) =>\r\n        !this.processExecutionModelerService.isSubProcess(node) &&\r\n        this.hasEnoughTokens(node)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the number of tokens needed to execute this node\r\n   *\r\n   * @param node the node to execute\r\n   * @return number of tokens needed to execute the node\r\n   */\r\n  private getMinimumNeededTokens(node): number {\r\n    if (\r\n      this.processExecutionModelerService.isParallelGateway(node) ||\r\n      this.processExecutionModelerService.isExecutable(node)\r\n    ) {\r\n      return this.processExecutionModelerService.getIncomingFlows(node).length;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  /**\r\n   * Checks whether a node has enough tokens to be executed\r\n   *\r\n   * @param node the node to execute\r\n   * @return true if the node has enough tokens to be executed\r\n   */\r\n  private hasEnoughTokens(node): boolean {\r\n    return (\r\n      this.getMinimumNeededTokens(node) <=\r\n      this.processExecutionModelerService.getTokens(node)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Artifact,\r\n  ArtifactEntry,\r\n  ArtifactInit,\r\n} from '../method-elements/artifact/artifact';\r\nimport {\r\n  ArtifactVersion,\r\n  ArtifactVersionEntry,\r\n  ArtifactVersionInit,\r\n} from './artifact-version';\r\nimport { DatabaseModel } from '../../database/database-model';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n} from '../../database/database-entry';\r\n\r\nexport interface RunningArtifactInit extends DatabaseRootInit {\r\n  identifier: string;\r\n  artifact: ArtifactInit;\r\n  versions?: ArtifactVersionInit[];\r\n}\r\n\r\nexport interface RunningArtifactEntry extends DatabaseRootEntry {\r\n  identifier: string;\r\n  artifact: ArtifactEntry;\r\n  versions: ArtifactVersionEntry[];\r\n}\r\n\r\nexport class RunningArtifact\r\n  extends DatabaseModel\r\n  implements RunningArtifactInit\r\n{\r\n  static readonly typeName = 'RunningArtifact';\r\n\r\n  identifier: string;\r\n  artifact: Artifact;\r\n  versions: ArtifactVersion[] = [];\r\n\r\n  constructor(\r\n    entry: RunningArtifactEntry | undefined,\r\n    init: RunningArtifactInit | undefined\r\n  ) {\r\n    super(entry, init, RunningArtifact.typeName);\r\n    const element = entry ?? init;\r\n    this.identifier = element.identifier;\r\n    if (entry != null) {\r\n      this.artifact = new Artifact(entry.artifact, undefined);\r\n      this.versions =\r\n        entry.versions?.map(\r\n          (version) => new ArtifactVersion(version, undefined)\r\n        ) ?? this.versions;\r\n    } else {\r\n      this.artifact = new Artifact(undefined, init.artifact);\r\n      this.versions =\r\n        init.versions?.map(\r\n          (version) => new ArtifactVersion(undefined, version)\r\n        ) ?? this.versions;\r\n    }\r\n  }\r\n\r\n  addVersion(version: ArtifactVersionInit): void {\r\n    this.versions.push(new ArtifactVersion(undefined, version));\r\n  }\r\n\r\n  toDb(): RunningArtifactEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      identifier: this.identifier,\r\n      artifact: this.artifact.toDb(),\r\n      versions: this.versions.map((version) => version.toDb()),\r\n    };\r\n  }\r\n}\r\n","import { Step, StepEntry, StepInit } from './step';\r\nimport { StepArtifact } from './step-artifact';\r\nimport { RunningMethodInfo } from './running-method-info';\r\nimport { Decision, DecisionEntry, DecisionInit } from '../bm-process/decision';\r\nimport { ExecutionStep } from '../development-method/execution-step';\r\nimport { ArtifactMapping } from '../development-method/artifact-mapping';\r\nimport { Artifact } from '../method-elements/artifact/artifact';\r\nimport {\r\n  StepInputArtifact,\r\n  StepInputArtifactEntry,\r\n  StepInputArtifactInit,\r\n} from './step-input-artifact';\r\nimport { Comment, CommentEntry, CommentInit } from './comment';\r\nimport { DatabaseModelPart } from '../../database/database-model-part';\r\nimport {\r\n  OutputArtifactMapping,\r\n  OutputArtifactMappingEntry,\r\n  OutputArtifactMappingInit,\r\n} from './output-artifact-mapping';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport interface RunningMethodInit extends DatabaseInit {\r\n  nodeId?: string;\r\n  executionId?: string;\r\n  comments?: CommentInit[];\r\n  decision: DecisionInit;\r\n\r\n  currentStepNumber?: number;\r\n  steps?: StepInit[];\r\n  inputArtifacts?: StepInputArtifactInit[];\r\n  outputArtifacts?: OutputArtifactMappingInit[];\r\n}\r\n\r\nexport interface RunningMethodEntry extends DatabaseEntry {\r\n  nodeId?: string;\r\n  executionId: string;\r\n  comments: CommentEntry[];\r\n  decision: DecisionEntry;\r\n\r\n  currentStepNumber: number;\r\n  steps: StepEntry[];\r\n  inputArtifacts: StepInputArtifactEntry[];\r\n  outputArtifacts?: OutputArtifactMappingEntry[];\r\n}\r\n\r\nexport class RunningMethod\r\n  implements RunningMethodInit, RunningMethodInfo, DatabaseModelPart\r\n{\r\n  nodeId?: string = null;\r\n  executionId: string;\r\n  comments: Comment[] = [];\r\n  decision: Decision;\r\n\r\n  currentStepNumber = 0;\r\n  steps: Step[] = [];\r\n\r\n  inputArtifacts: StepInputArtifact[] = null;\r\n  outputArtifacts?: OutputArtifactMapping[];\r\n\r\n  constructor(\r\n    entry: RunningMethodEntry | undefined,\r\n    init: RunningMethodInit | undefined\r\n  ) {\r\n    const element = entry ?? init;\r\n    this.nodeId = element.nodeId;\r\n    this.executionId = element.executionId ?? uuidv4();\r\n    this.currentStepNumber =\r\n      element.currentStepNumber ?? this.currentStepNumber;\r\n    if (entry != null) {\r\n      this.comments =\r\n        entry.comments?.map((comment) => new Comment(comment, undefined)) ??\r\n        this.comments;\r\n      this.decision = new Decision(entry.decision, undefined);\r\n      this.steps =\r\n        entry.steps?.map((step) => new Step(step, undefined)) ?? this.steps;\r\n      this.inputArtifacts =\r\n        entry.inputArtifacts?.map(\r\n          (artifact) => new StepInputArtifact(artifact, undefined)\r\n        ) ?? this.inputArtifacts;\r\n      this.outputArtifacts =\r\n        entry.outputArtifacts?.map(\r\n          (artifact) => new OutputArtifactMapping(artifact, undefined)\r\n        ) ?? this.outputArtifacts;\r\n    } else if (init != null) {\r\n      this.comments =\r\n        init.comments?.map((comment) => new Comment(undefined, comment)) ??\r\n        this.comments;\r\n      this.decision = new Decision(undefined, init.decision);\r\n      this.steps =\r\n        init.steps?.map((step) => new Step(undefined, step)) ?? this.steps;\r\n      this.inputArtifacts =\r\n        init.inputArtifacts?.map(\r\n          (artifact) => new StepInputArtifact(undefined, artifact)\r\n        ) ?? this.inputArtifacts;\r\n      this.outputArtifacts =\r\n        init.outputArtifacts?.map(\r\n          (artifact) => new OutputArtifactMapping(undefined, artifact)\r\n        ) ?? this.outputArtifacts;\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finish the step execution by setting the setp artifacts as output\r\n   *\r\n   * @param output the output of the module method\r\n   */\r\n  finishStepExecution(output: StepArtifact[]): void {\r\n    this.steps[this.currentStepNumber].finish(output);\r\n    this.currentStepNumber += 1;\r\n  }\r\n\r\n  /**\r\n   * Checks whether there are steps left to be executed\r\n   *\r\n   * @return true if the method has steps to execute left, false otherwise\r\n   */\r\n  hasStepsLeft(): boolean {\r\n    return this.currentStepNumber < this.steps.length;\r\n  }\r\n\r\n  /**\r\n   * Checks whether this method has steps that can be executed\r\n   *\r\n   * @return true if the method has steps, false otherwise\r\n   */\r\n  hasSteps(): boolean {\r\n    return this.steps.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the next execution step is prepared\r\n   *\r\n   * @return true if the next execution step is prepared\r\n   */\r\n  isPrepared(): boolean {\r\n    return this.steps[this.currentStepNumber].inputArtifacts != null;\r\n  }\r\n\r\n  /**\r\n   * Set the internal step artifacts for the next execution step and prepare the next step by doing this\r\n   *\r\n   * @param stepArtifacts the step artifacts\r\n   */\r\n  setInternalStepArtifacts(stepArtifacts: StepArtifact[]): void {\r\n    this.steps[this.currentStepNumber].inputArtifacts = stepArtifacts;\r\n  }\r\n\r\n  /**\r\n   * Get the internal step artifacts for the next execution step\r\n   *\r\n   * @return the step artifacts\r\n   */\r\n  getInternalStepArtifacts(): StepArtifact[] {\r\n    return this.steps[this.currentStepNumber].inputArtifacts;\r\n  }\r\n\r\n  /**\r\n   * Get the output artifacts of the process definition\r\n   *\r\n   * @return the output artifacts of the process\r\n   */\r\n  getProcessOutputArtifacts(): Artifact[] {\r\n    const currentDecision = this.decision;\r\n    const artifacts: Artifact[] = [];\r\n    currentDecision.outputArtifacts\r\n      .getList(currentDecision.method.outputArtifacts)\r\n      .elements.forEach((element) => artifacts.push(...element.elements));\r\n    return artifacts;\r\n  }\r\n\r\n  /**\r\n   * Get all input artifacts of all steps\r\n   *\r\n   * @return a list of all step artifacts\r\n   */\r\n  getAllStepArtifacts(): StepArtifact[] {\r\n    const artifacts: StepArtifact[] = [];\r\n    this.steps.forEach((step) => {\r\n      if (step.inputArtifacts != null) {\r\n        artifacts.push(...step.inputArtifacts);\r\n      }\r\n      if (step.outputArtifacts != null) {\r\n        artifacts.push(...step.outputArtifacts);\r\n      }\r\n    });\r\n    return artifacts;\r\n  }\r\n\r\n  /**\r\n   * Get all input artifacts for a specific step by iterating over all artifacts and selecting them based on their mapping\r\n   *\r\n   * @param step the step for which to get the artifacts\r\n   * @param size the number of artifacts for that step\r\n   * @return the list of artifacts\r\n   */\r\n  getStepArtifacts(step: number, size: number): StepArtifact[] {\r\n    return this.iterateMappings(\r\n      size,\r\n      (mapping) => mapping.output === false && mapping.step === step\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all output artifacts for this method by iterating over all artifacts and selecting them based on their mapping\r\n   *\r\n   * @return the list of artifacts\r\n   */\r\n  getOutputArtifacts(): StepArtifact[] {\r\n    const group = this.decision.outputArtifacts.selectedGroup;\r\n    if (group == null) {\r\n      return [];\r\n    }\r\n    return this.iterateMappings(\r\n      this.decision.method.outputArtifacts[group].length,\r\n      (mapping) => mapping.output === true && mapping.group === group\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Iterate over all artifacts and select them based on their mapping\r\n   *\r\n   * @param artifactLength the length of the resulting artifacts list\r\n   * @param filter the function to select the artifacts based on their mapping\r\n   * @return the artifacts list\r\n   */\r\n  private iterateMappings(\r\n    artifactLength: number,\r\n    filter: (mapping: ArtifactMapping) => boolean\r\n  ): StepArtifact[] {\r\n    const artifacts = [];\r\n    artifacts.length = artifactLength;\r\n    this.iterateInputMappings(artifacts, filter);\r\n    this.iterateExecutionStepMappings(artifacts, filter);\r\n    return artifacts;\r\n  }\r\n\r\n  /**\r\n   * Iterate over the input artifacts and add them to the artifacts list\r\n   *\r\n   * @param artifacts the artifacts list, will be changed\r\n   * @param filter the filter function to select input artifacts based on their mapping\r\n   */\r\n  private iterateInputMappings(\r\n    artifacts: StepArtifact[],\r\n    filter: (mapping: ArtifactMapping) => boolean\r\n  ): void {\r\n    const method = this.decision.method;\r\n    const inputGroup = this.decision.inputArtifacts.selectedGroup;\r\n    if (inputGroup != null) {\r\n      const artifactInputGroup = method.inputArtifacts[inputGroup];\r\n      for (let i = 0; i < artifactInputGroup.length; i++) {\r\n        const artifact = artifactInputGroup[i];\r\n        for (const mapping of artifact.mapping) {\r\n          if (filter(mapping)) {\r\n            artifacts[mapping.artifact] = this.inputArtifacts[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate over the execution step artifacts and add them to the artifacts list\r\n   *\r\n   * @param artifacts the artifacts list, will be changed\r\n   * @param filter the filter function to select step artifacts based on their mapping\r\n   */\r\n  private iterateExecutionStepMappings(\r\n    artifacts: StepArtifact[],\r\n    filter: (mapping: ArtifactMapping) => boolean\r\n  ): void {\r\n    const method = this.decision.method;\r\n    for (let i = 0; i < method.executionSteps.length; i++) {\r\n      const executionStep = method.executionSteps[i];\r\n      for (let j = 0; j < executionStep.outputMappings.length; j++) {\r\n        const outputArtifact = executionStep.outputMappings[j];\r\n        for (const mapping of outputArtifact) {\r\n          if (filter(mapping)) {\r\n            artifacts[mapping.artifact] = this.steps[i].outputArtifacts[j];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the output artifacts together with their data and mapping.\r\n   */\r\n  updateOutputArtifacts(outputArtifacts: OutputArtifactMapping[]): void {\r\n    this.outputArtifacts = outputArtifacts;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the output artifacts are defined or whether there are no output artifacts.\r\n   *\r\n   * @return true if the output artifacts are defined or if there are no output artifacts\r\n   */\r\n  hasOutputArtifactsCorrectlyDefined(): boolean {\r\n    const outputArtifacts = this.decision.outputArtifacts.getList(\r\n      this.decision.method.outputArtifacts\r\n    ).elements;\r\n    if (outputArtifacts.length === 0) {\r\n      return true;\r\n    }\r\n    if (this.outputArtifacts != null) {\r\n      return (\r\n        this.outputArtifacts.length ===\r\n        outputArtifacts.reduce((acc, summay) => acc + summay.elements.length, 0)\r\n      );\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Add a comment to this running method\r\n   *\r\n   * @param comment the comment to add\r\n   */\r\n  addComment(comment: Comment): void {\r\n    this.comments.push(comment);\r\n  }\r\n\r\n  /**\r\n   * Get a comment of this running method\r\n   *\r\n   * @param commentId the id of the comment\r\n   */\r\n  getComment(commentId: string): Comment {\r\n    return this.comments.find((comment) => comment.id === commentId);\r\n  }\r\n\r\n  /**\r\n   * Remove a comment from this running method\r\n   *\r\n   * @param commentId the id of the comment to remove\r\n   */\r\n  removeComment(commentId: string): void {\r\n    this.comments = this.comments.filter((comment) => comment.id !== commentId);\r\n  }\r\n\r\n  /**\r\n   * Get the name of the method\r\n   *\r\n   * @return the name of the method\r\n   */\r\n  get methodName(): string {\r\n    return this.decision.method.name;\r\n  }\r\n\r\n  /**\r\n   * Get the current step of the method definition\r\n   *\r\n   * @return the execution step\r\n   */\r\n  get currentStep(): ExecutionStep {\r\n    return this.decision.method.executionSteps[this.currentStepNumber];\r\n  }\r\n\r\n  toDb(): RunningMethodEntry {\r\n    return {\r\n      nodeId: this.nodeId,\r\n      executionId: this.executionId,\r\n      comments: this.comments.map((comment) => comment.toDb()),\r\n      decision: this.decision.toDb(),\r\n      currentStepNumber: this.currentStepNumber,\r\n      inputArtifacts: this.inputArtifacts\r\n        ? this.inputArtifacts.map((artifact) => artifact.toDb())\r\n        : null,\r\n      outputArtifacts: this.outputArtifacts\r\n        ? this.outputArtifacts.map((outputArtifact) => outputArtifact.toDb())\r\n        : undefined,\r\n      steps: this.steps.map((step) => step.toDb()),\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PouchdbService } from '../../database/pouchdb.service';\r\nimport {\r\n  RunningProcess,\r\n  RunningProcessEntry,\r\n  RunningProcessInit,\r\n} from './running-process';\r\nimport { DevelopmentProcessRegistryModule } from '../development-process-registry.module';\r\nimport { ArtifactDataType } from './artifact-data';\r\nimport { ProcessExecutionService } from './process-execution.service';\r\nimport { MethodExecutionService } from './method-execution.service';\r\nimport { Decision } from '../bm-process/decision';\r\nimport { MethodExecutionOutput } from '../module-api/method-execution-output';\r\nimport { StepInfo } from '../module-api/step-info';\r\nimport { Comment } from './comment';\r\nimport { ArtifactDataService } from './artifact-data.service';\r\nimport { RunningArtifact } from './running-artifact';\r\nimport { DefaultElementService } from '../../database/default-element.service';\r\nimport { OutputArtifactMapping } from './output-artifact-mapping';\r\n\r\n@Injectable({\r\n  providedIn: DevelopmentProcessRegistryModule,\r\n})\r\nexport class RunningProcessService extends DefaultElementService<\r\n  RunningProcess,\r\n  RunningProcessInit\r\n> {\r\n  protected readonly typeName = RunningProcess.typeName;\r\n\r\n  protected readonly elementConstructor = RunningProcess;\r\n\r\n  constructor(\r\n    private artifactDataService: ArtifactDataService,\r\n    private methodExecutionService: MethodExecutionService,\r\n    pouchdbService: PouchdbService,\r\n    private processExecutionService: ProcessExecutionService\r\n  ) {\r\n    super(pouchdbService);\r\n  }\r\n\r\n  /**\r\n   * Add new running process from a process.\r\n   *\r\n   * @param element the running process\r\n   */\r\n  async add(element: RunningProcessInit): Promise<void> {\r\n    const runningProcess = new RunningProcess(undefined, element);\r\n    await this.processExecutionService.initRunningProcess(runningProcess);\r\n    await this.processExecutionService.jumpToNextMethod(runningProcess);\r\n    await this.save(runningProcess);\r\n  }\r\n\r\n  /**\r\n   * Execute a single common node\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param nodeId the id of the node to execute\r\n   * @param flowId the flow id to take after the execution if it is an exclusive gateway\r\n   */\r\n  async executeStep(\r\n    runningProcess: RunningProcess,\r\n    nodeId: string = null,\r\n    flowId: string = null\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    await this.processExecutionService.moveToNextStep(\r\n      runningProcess,\r\n      nodeId,\r\n      flowId\r\n    );\r\n    await this.save(runningProcess);\r\n  }\r\n\r\n  /**\r\n   * Jump to next methods or decisions\r\n   *\r\n   * @param runningProcess the running process\r\n   */\r\n  async jumpSteps(runningProcess: RunningProcess): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    await this.processExecutionService.jumpToNextMethod(runningProcess);\r\n    await this.save(runningProcess);\r\n  }\r\n\r\n  /**\r\n   * Start the execution of a method\r\n   *\r\n   * @param runningProcessId the id of the running process\r\n   * @param nodeId the id of the node to execute\r\n   */\r\n  async startMethodExecution(\r\n    runningProcessId: string,\r\n    nodeId: string\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcessId);\r\n    if (\r\n      !(await this.processExecutionService.canExecuteNode(\r\n        databaseProcess,\r\n        nodeId\r\n      ))\r\n    ) {\r\n      throw new Error('Can not execute node');\r\n    }\r\n    this.methodExecutionService.startMethodExecution(databaseProcess, nodeId);\r\n    await this.save(databaseProcess);\r\n  }\r\n\r\n  /**\r\n   * Start the execution of a todomethod\r\n   *\r\n   * @param runningProcessId the id of the running process\r\n   * @param executionId the execution id of the todomethod\r\n   */\r\n  async startTodoMethodExecution(\r\n    runningProcessId: string,\r\n    executionId: string\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcessId);\r\n    this.methodExecutionService.startTodoMethodExecution(\r\n      databaseProcess,\r\n      executionId\r\n    );\r\n    await this.save(databaseProcess);\r\n  }\r\n\r\n  /**\r\n   * Execute a step of the running method\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   */\r\n  async executeMethodStep(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    if (\r\n      !this.methodExecutionService.isExecutionStepPrepared(\r\n        runningProcess,\r\n        executionId\r\n      )\r\n    ) {\r\n      await this.methodExecutionService.prepareExecuteStep(\r\n        runningProcess,\r\n        executionId\r\n      );\r\n      await this.save(runningProcess);\r\n      runningProcess = await this.get(runningProcess._id);\r\n    }\r\n    await this.methodExecutionService.executeStep(runningProcess, executionId);\r\n    await this.save(runningProcess);\r\n  }\r\n\r\n  /**\r\n   * Finish the execution of a step. Called by a method of a module after the execution is finished.\r\n   *\r\n   * @param stepInfo the info about the running step\r\n   * @param output the output of the method of the module\r\n   */\r\n  async finishExecuteStep(\r\n    stepInfo: StepInfo,\r\n    output: MethodExecutionOutput\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(stepInfo.runningProcessId);\r\n    this.methodExecutionService.finishExecuteStep(\r\n      databaseProcess,\r\n      stepInfo.executionId,\r\n      stepInfo.step,\r\n      output\r\n    );\r\n    await this.save(databaseProcess);\r\n  }\r\n\r\n  /**\r\n   * Stop the execution of the current method\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   */\r\n  async stopMethodExecution(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    const nodeId = runningProcess.getRunningMethod(executionId).nodeId;\r\n    await this.methodExecutionService.stopMethodExecution(\r\n      runningProcess,\r\n      executionId\r\n    );\r\n    if (nodeId != null) {\r\n      await this.processExecutionService.moveToNextMethod(\r\n        runningProcess,\r\n        nodeId\r\n      );\r\n    }\r\n    await this.save(runningProcess);\r\n  }\r\n\r\n  /**\r\n   * Abort the execution of the current method\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the executed method\r\n   */\r\n  async abortMethodExecution(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    await this.methodExecutionService.abortMethodExecution(\r\n      runningProcess,\r\n      executionId\r\n    );\r\n    await this.save(runningProcess);\r\n  }\r\n\r\n  async getExecutableElements(runningProcess: RunningProcess): Promise<any[]> {\r\n    return this.processExecutionService.getExecutableNodes(runningProcess);\r\n  }\r\n\r\n  /**\r\n   * Get all decision nodes that are executable and need a decision\r\n   *\r\n   * @param runningProcess the running process\r\n   * @return the decision nodes\r\n   */\r\n  async getExecutableDecisionNodes(\r\n    runningProcess: RunningProcess\r\n  ): Promise<any[]> {\r\n    return this.processExecutionService.getExecutableDecisionNodes(\r\n      runningProcess\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all executable method elements that are not already executed\r\n   *\r\n   * @param runningProcess the running process\r\n   * @return a list of nodes which have methods that can be executed\r\n   */\r\n  async getExecutableMethods(runningProcess: RunningProcess): Promise<any[]> {\r\n    const executableNodes =\r\n      await this.processExecutionService.getExecutableNodes(runningProcess);\r\n    const methods = executableNodes.filter((node) =>\r\n      runningProcess.isExecutable(node.id)\r\n    );\r\n    return methods.filter(\r\n      (node) => runningProcess.getRunningMethodByNode(node.id) == null\r\n    );\r\n  }\r\n\r\n  async setInputArtifacts(\r\n    runningProcess: RunningProcess,\r\n    executionId: string,\r\n    inputArtifactMapping: { artifact: number; version: number }[]\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    this.methodExecutionService.selectInputArtifacts(\r\n      databaseProcess,\r\n      executionId,\r\n      inputArtifactMapping\r\n    );\r\n    await this.save(databaseProcess);\r\n  }\r\n\r\n  async updateOutputArtifacts(\r\n    runningProcess: RunningProcess,\r\n    executionId: string,\r\n    outputArtifactsMapping: OutputArtifactMapping[]\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    this.methodExecutionService.updateOutputArtifacts(\r\n      databaseProcess,\r\n      executionId,\r\n      outputArtifactsMapping\r\n    );\r\n    await this.save(databaseProcess);\r\n  }\r\n\r\n  /**\r\n   * Import an artifact into a process\r\n   *\r\n   * @param runningProcessId the id of the running process\r\n   * @param artifact the artifact to import into the running process\r\n   */\r\n  async importArtifact(\r\n    runningProcessId: string,\r\n    artifact: RunningArtifact\r\n  ): Promise<void> {\r\n    const runningProcess = await this.get(runningProcessId);\r\n    runningProcess.importArtifact(artifact);\r\n    await this.save(runningProcess);\r\n  }\r\n\r\n  /**\r\n   * Add a method to a running process that is executed out of the defined process\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param decision the method decisions\r\n   */\r\n  async addMethod(\r\n    runningProcess: RunningProcess,\r\n    decision: Decision\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    this.methodExecutionService.addMethod(runningProcess, decision);\r\n    await this.save(runningProcess);\r\n  }\r\n\r\n  /**\r\n   * Remove a method from a running process that is executed out of the defined process\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param executionId the id of the method to remove\r\n   */\r\n  async removeMethod(\r\n    runningProcess: RunningProcess,\r\n    executionId: string\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    this.methodExecutionService.removeMethod(runningProcess, executionId);\r\n    await this.save(runningProcess);\r\n  }\r\n\r\n  /**\r\n   * Remove the running process.\r\n   *\r\n   * @param id id of the running process\r\n   */\r\n  async delete(id: string): Promise<void> {\r\n    const result = await this.pouchdbService.get<RunningProcessEntry>(id);\r\n    const runningProcess = new RunningProcess(result, undefined);\r\n    // abort all running methods\r\n    runningProcess.runningMethods.forEach((method) =>\r\n      this.methodExecutionService.abortMethodExecution(\r\n        runningProcess,\r\n        method.executionId\r\n      )\r\n    );\r\n    // delete all referenced artifacts\r\n    for (const artifact of runningProcess.artifacts) {\r\n      for (const version of artifact.versions) {\r\n        if (version.data.type === ArtifactDataType.REFERENCE) {\r\n          await this.artifactDataService.remove(version.data);\r\n        }\r\n      }\r\n    }\r\n    await this.pouchdbService.remove(result);\r\n  }\r\n\r\n  /**\r\n   * Add a comment to a running method\r\n   *\r\n   * @param id the id of the running process\r\n   * @param executionId the id of the method currently executed\r\n   * @param comment the comment to add\r\n   */\r\n  async addComment(\r\n    id: string,\r\n    executionId: string,\r\n    comment: Comment\r\n  ): Promise<void> {\r\n    const process = await this.get(id);\r\n    const method = process.getRunningMethod(executionId);\r\n    method.addComment(comment);\r\n    await this.save(process);\r\n  }\r\n\r\n  /**\r\n   * Update a comment of a running method\r\n   *\r\n   * @param id the id of the running process\r\n   * @param executionId the id of the method currently executed\r\n   * @param comment the comment to add\r\n   */\r\n  async updateComment(\r\n    id: string,\r\n    executionId: string,\r\n    comment: Comment\r\n  ): Promise<void> {\r\n    const process = await this.get(id);\r\n    const method = process.getRunningMethod(executionId);\r\n    const dbComment = method.getComment(comment.id);\r\n    dbComment.update(comment);\r\n    await this.save(process);\r\n  }\r\n\r\n  /**\r\n   * Add a comment from a running method\r\n   *\r\n   * @param id the id of the running process\r\n   * @param executionId the id of the method currently executed\r\n   * @param commentId the id of the comment to remove\r\n   */\r\n  async removeComment(\r\n    id: string,\r\n    executionId: string,\r\n    commentId: string\r\n  ): Promise<void> {\r\n    const process = await this.get(id);\r\n    const method = process.getRunningMethod(executionId);\r\n    method.removeComment(commentId);\r\n    await this.save(process);\r\n  }\r\n\r\n  /**\r\n   * Change a running artifact's identifier\r\n   *\r\n   * @param runningProcess the running process\r\n   * @param runningArtifact the running artifact to change\r\n   * @param identifier the new identifier\r\n   */\r\n  async renameArtifact(\r\n    runningProcess: RunningProcess,\r\n    runningArtifact: RunningArtifact,\r\n    identifier: string\r\n  ): Promise<void> {\r\n    const databaseProcess = await this.get(runningProcess._id);\r\n    if (databaseProcess._rev !== runningProcess._rev) {\r\n      throw new Error(\r\n        'Reload needed, process in database does not fit current process'\r\n      );\r\n    }\r\n    runningProcess.renameArtifact(runningArtifact, identifier);\r\n    await this.save(runningProcess);\r\n  }\r\n}\r\n","import {\r\n  BmProcess,\r\n  BmProcessEntry,\r\n  BmProcessInit,\r\n} from '../bm-process/bm-process';\r\nimport { DatabaseModel } from '../../database/database-model';\r\nimport {\r\n  RunningArtifact,\r\n  RunningArtifactEntry,\r\n  RunningArtifactInit,\r\n} from './running-artifact';\r\nimport {\r\n  RunningMethod,\r\n  RunningMethodEntry,\r\n  RunningMethodInit,\r\n} from './running-method';\r\nimport { Step } from './step';\r\nimport {\r\n  RunningMethodInfo,\r\n  RunningMethodInfoEntry,\r\n  RunningMethodInfoInit,\r\n} from './running-method-info';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Artifact } from '../method-elements/artifact/artifact';\r\nimport { ArtifactVersionInit } from './artifact-version';\r\nimport { OutputArtifactMapping } from './output-artifact-mapping';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n} from '../../database/database-entry';\r\nimport { Comment } from './comment';\r\n\r\nexport interface RunningProcessInit extends DatabaseRootInit {\r\n  name: string;\r\n  process: BmProcessInit;\r\n\r\n  todoMethods?: RunningMethodInit[];\r\n  runningMethods?: RunningMethodInit[];\r\n  executedMethods?: RunningMethodInfoInit[];\r\n\r\n  artifacts?: RunningArtifactInit[];\r\n}\r\n\r\nexport interface RunningProcessEntry extends DatabaseRootEntry {\r\n  name: string;\r\n  process: BmProcessEntry;\r\n\r\n  todoMethods: RunningMethodEntry[];\r\n  runningMethods: RunningMethodEntry[];\r\n  executedMethods: RunningMethodInfoEntry[];\r\n\r\n  artifacts: RunningArtifactEntry[];\r\n}\r\n\r\nexport class RunningProcess\r\n  extends DatabaseModel\r\n  implements RunningProcessInit\r\n{\r\n  static readonly typeName = 'RunningProcess';\r\n\r\n  name: string;\r\n  process: BmProcess;\r\n\r\n  todoMethods: RunningMethod[] = [];\r\n  runningMethods: RunningMethod[] = [];\r\n  executedMethods: RunningMethodInfo[] = [];\r\n\r\n  artifacts: RunningArtifact[] = [];\r\n\r\n  constructor(entry: RunningProcessEntry, init: RunningProcessInit) {\r\n    super(entry, init, RunningProcess.typeName);\r\n    this.name = (entry ?? init).name;\r\n    if (entry != null) {\r\n      this.process = new BmProcess(entry.process, undefined);\r\n      this.todoMethods =\r\n        entry.todoMethods?.map(\r\n          (method) => new RunningMethod(method, undefined)\r\n        ) ?? this.todoMethods;\r\n      this.runningMethods =\r\n        entry.runningMethods?.map(\r\n          (method) => new RunningMethod(method, undefined)\r\n        ) ?? this.runningMethods;\r\n      this.executedMethods =\r\n        entry.executedMethods.map((info) => {\r\n          return {\r\n            nodeId: info.nodeId,\r\n            executionId: info.executionId,\r\n            methodName: info.methodName,\r\n            comments:\r\n              info.comments?.map(\r\n                (comment) => new Comment(comment, undefined)\r\n              ) ?? [],\r\n          };\r\n        }) ?? this.executedMethods;\r\n      this.artifacts =\r\n        entry.artifacts?.map(\r\n          (element) => new RunningArtifact(element, undefined)\r\n        ) ?? this.artifacts;\r\n    } else {\r\n      this.process = new BmProcess(undefined, init.process);\r\n      this.todoMethods =\r\n        init.todoMethods?.map(\r\n          (method) => new RunningMethod(undefined, method)\r\n        ) ?? this.todoMethods;\r\n      this.runningMethods =\r\n        init.runningMethods?.map(\r\n          (method) => new RunningMethod(undefined, method)\r\n        ) ?? this.runningMethods;\r\n      this.executedMethods =\r\n        init.executedMethods?.map((info) => {\r\n          return {\r\n            nodeId: info.nodeId,\r\n            executionId: info.executionId,\r\n            methodName: info.methodName,\r\n            comments:\r\n              info.comments?.map(\r\n                (comment) => new Comment(undefined, comment)\r\n              ) ?? [],\r\n          };\r\n        }) ?? this.executedMethods;\r\n      this.artifacts =\r\n        init.artifacts?.map(\r\n          (element) => new RunningArtifact(undefined, element)\r\n        ) ?? this.artifacts;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a method to the list of manually added methods that can be executed later\r\n   *\r\n   * @param runningMethod the running method\r\n   */\r\n  addTodoMethod(runningMethod: RunningMethod): void {\r\n    if (runningMethod.executionId == null) {\r\n      runningMethod.executionId = uuidv4();\r\n    }\r\n    this.todoMethods.push(runningMethod);\r\n  }\r\n\r\n  /**\r\n   * Get a specific todomethod by its id\r\n   *\r\n   * @param executionId the id of the todomethod\r\n   * @return the todomethod\r\n   */\r\n  getTodoMethod(executionId: string): RunningMethod | undefined {\r\n    return this.todoMethods.find(\r\n      (method) => method.executionId === executionId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove a method from the list of manually added methods that can be executed later\r\n   *\r\n   * @param executionId the id of the method\r\n   */\r\n  removeTodoMethod(executionId: string): void {\r\n    this.todoMethods = this.todoMethods.filter(\r\n      (method) => method.executionId !== executionId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add a running method to the currently executed methods list\r\n   *\r\n   * @param runningMethod the running method\r\n   */\r\n  addRunningMethod(runningMethod: RunningMethod): void {\r\n    this.runningMethods.push(runningMethod);\r\n  }\r\n\r\n  /**\r\n   * Add a running method of the bm process to the currently executed methods list\r\n   *\r\n   * @param nodeId the id of the node\r\n   * @return the added running method\r\n   */\r\n  addRunningMethodOfProcess(nodeId: string): RunningMethod {\r\n    const method = new RunningMethod(undefined, {\r\n      nodeId,\r\n      decision: this.process.decisions[nodeId],\r\n      steps: this.process.decisions[nodeId].method.executionSteps.map(\r\n        () => new Step(undefined, {})\r\n      ),\r\n    });\r\n    this.addRunningMethod(method);\r\n    return method;\r\n  }\r\n\r\n  /**\r\n   * Get a specific running method by its id\r\n   *\r\n   * @param executionId the id of the running method\r\n   * @return the running method\r\n   */\r\n  getRunningMethod(executionId: string): RunningMethod | undefined {\r\n    return this.runningMethods.find(\r\n      (method) => method.executionId === executionId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a specific running method by the id of the corresponding node\r\n   *\r\n   * @param nodeId the id of the node\r\n   * @return the running method\r\n   */\r\n  getRunningMethodByNode(nodeId: string): RunningMethod | undefined {\r\n    return this.runningMethods.find((method) => method.nodeId === nodeId);\r\n  }\r\n\r\n  /**\r\n   * Remove a method from the currently executed methods list\r\n   *\r\n   * @param executionId the id of the method\r\n   */\r\n  removeRunningMethod(executionId: string): void {\r\n    this.runningMethods = this.runningMethods.filter(\r\n      (method) => method.executionId !== executionId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add a method to the executed methods list\r\n   *\r\n   * @param runningMethodInfo the info of the executed method\r\n   */\r\n  addExecutedMethod(runningMethodInfo: RunningMethodInfo): void {\r\n    this.executedMethods.push(runningMethodInfo);\r\n  }\r\n\r\n  /**\r\n   * Get an executed method\r\n   *\r\n   * @param executionId the id of the executed method\r\n   * @return the executed method\r\n   */\r\n  getExecutedMethod(executionId: string): RunningMethodInfo | undefined {\r\n    return this.executedMethods.find(\r\n      (method) => method.executionId === executionId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks whether a method to execute is defined for the node\r\n   *\r\n   * @param nodeId the id of the node\r\n   * @return true if a method is defined\r\n   */\r\n  isExecutable(nodeId: string): boolean {\r\n    return nodeId in this.process.decisions;\r\n  }\r\n\r\n  /**\r\n   * Get a method by its execution id\r\n   *\r\n   * @param executionId the id of the method\r\n   * @return the method\r\n   */\r\n  getMethod(executionId: string): RunningMethodInfo | undefined {\r\n    let result: RunningMethodInfo | undefined = this.todoMethods.find(\r\n      (method) => method.executionId === executionId\r\n    );\r\n    if (result == null) {\r\n      result = this.runningMethods.find(\r\n        (method) => method.executionId === executionId\r\n      );\r\n      if (result == null) {\r\n        result = this.executedMethods.find(\r\n          (method) => method.executionId === executionId\r\n        );\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Add the output artifacts of a method to the artifacts list of this process\r\n   *\r\n   * @param executionId the id of the executed method\r\n   * @param outputArtifacts the output artifacts\r\n   * @param outputArtifactsMapping the mapping of the output artifacts, whether to create a new artifact or merge with a current\r\n   */\r\n  addOutputArtifacts(\r\n    executionId: string,\r\n    outputArtifacts: Artifact[],\r\n    outputArtifactsMapping: OutputArtifactMapping[]\r\n  ): void {\r\n    const method = this.getRunningMethod(executionId);\r\n    outputArtifactsMapping.forEach((output, index) => {\r\n      const version: ArtifactVersionInit = {\r\n        createdBy: method.nodeId ? method.nodeId : 'manual',\r\n        executedBy: method.executionId,\r\n        data: output.data,\r\n      };\r\n      if (output.isDefinition) {\r\n        const artifact = new RunningArtifact(undefined, {\r\n          identifier: output.artifactName,\r\n          artifact: outputArtifacts[index],\r\n        });\r\n        artifact.addVersion(version);\r\n        this.artifacts.push(artifact);\r\n      } else {\r\n        this.artifacts[output.artifact].addVersion(version);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Import an artifact into this process\r\n   *\r\n   * @param artifact the artifact to import\r\n   */\r\n  importArtifact(artifact: RunningArtifact): void {\r\n    this.artifacts.push(artifact);\r\n  }\r\n\r\n  /**\r\n   * Change a running artifact's identifier\r\n   *\r\n   * @param artifact the running artifact to change\r\n   * @param identifier the new identifier\r\n   */\r\n  renameArtifact(artifact: RunningArtifact, identifier: string): void {\r\n    if (this.artifacts.indexOf(artifact) === -1) {\r\n      throw new Error('Artifact is not from this running process');\r\n    }\r\n    artifact.identifier = identifier;\r\n  }\r\n\r\n  toDb(): RunningProcessEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      name: this.name,\r\n      process: this.process.toDb(),\r\n      todoMethods: this.todoMethods.map((method) => method.toDb()),\r\n      runningMethods: this.runningMethods.map((method) => method.toDb()),\r\n      executedMethods: this.executedMethods.map((executedMethod) => {\r\n        return {\r\n          nodeId: executedMethod.nodeId,\r\n          executionId: executedMethod.executionId,\r\n          methodName: executedMethod.methodName,\r\n          comments: executedMethod.comments.map((comment) => comment.toDb()),\r\n        };\r\n      }),\r\n      artifacts: this.artifacts.map((element) => element.toDb()),\r\n    };\r\n  }\r\n}\r\n","import {\r\n  ArtifactData,\r\n  ArtifactDataEntry,\r\n  ArtifactDataInit,\r\n} from './artifact-data';\r\nimport {\r\n  Artifact,\r\n  ArtifactEntry,\r\n  ArtifactInit,\r\n} from '../method-elements/artifact/artifact';\r\nimport { DatabaseModelPart } from '../../database/database-model-part';\r\nimport { MetaModelType } from '../meta-model-definition';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface StepArtifactInit extends DatabaseInit {\r\n  identifier: string;\r\n  artifact: ArtifactInit;\r\n  data: ArtifactDataInit;\r\n}\r\n\r\nexport interface StepArtifactEntry extends DatabaseEntry {\r\n  identifier: string;\r\n  artifact: ArtifactEntry;\r\n  data: ArtifactDataEntry;\r\n}\r\n\r\nexport class StepArtifact implements StepArtifactInit, DatabaseModelPart {\r\n  identifier: string;\r\n  artifact: Artifact;\r\n  data: ArtifactData;\r\n\r\n  constructor(\r\n    entry: StepArtifactEntry | undefined,\r\n    init: StepArtifactInit | undefined\r\n  ) {\r\n    this.identifier = (entry ?? init).identifier;\r\n    if (entry != null) {\r\n      this.artifact = new Artifact(entry.artifact, undefined);\r\n      this.data = new ArtifactData(entry.data, undefined);\r\n    } else if (init != null) {\r\n      this.artifact = new Artifact(undefined, init.artifact);\r\n      this.data = new ArtifactData(undefined, init.data);\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  get metaModelType(): MetaModelType {\r\n    return this.artifact.metaModel.type;\r\n  }\r\n\r\n  toDb(): StepArtifactEntry {\r\n    return {\r\n      identifier: this.identifier,\r\n      artifact: this.artifact.toDb(),\r\n      data: this.data.toDb(),\r\n    };\r\n  }\r\n}\r\n","import {\r\n  StepArtifact,\r\n  StepArtifactEntry,\r\n  StepArtifactInit,\r\n} from './step-artifact';\r\n\r\nexport interface StepInputArtifactInit extends StepArtifactInit {\r\n  versionInfo: {\r\n    number: number;\r\n    time: number;\r\n    createdBy: string;\r\n  };\r\n}\r\n\r\nexport interface StepInputArtifactEntry extends StepArtifactEntry {\r\n  versionInfo: {\r\n    number: number;\r\n    time: number;\r\n    createdBy: string;\r\n  };\r\n}\r\n\r\nexport class StepInputArtifact\r\n  extends StepArtifact\r\n  implements StepInputArtifactInit\r\n{\r\n  versionInfo: {\r\n    number: number;\r\n    time: number;\r\n    createdBy: string;\r\n  };\r\n\r\n  constructor(\r\n    entry: StepInputArtifactEntry | undefined,\r\n    init: StepInputArtifactInit | undefined\r\n  ) {\r\n    super(entry, init);\r\n    this.versionInfo = (entry ?? init).versionInfo;\r\n  }\r\n\r\n  toDb(): StepInputArtifactEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      versionInfo: this.versionInfo,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  StepArtifact,\r\n  StepArtifactEntry,\r\n  StepArtifactInit,\r\n} from './step-artifact';\r\nimport { DatabaseModelPart } from '../../database/database-model-part';\r\nimport { DatabaseEntry, DatabaseInit } from '../../database/database-entry';\r\n\r\nexport interface StepInit extends DatabaseInit {\r\n  inputArtifacts?: StepArtifactInit[];\r\n  outputArtifacts?: StepArtifactInit[];\r\n}\r\n\r\nexport interface StepEntry extends DatabaseEntry {\r\n  inputArtifacts: StepArtifactEntry[];\r\n  outputArtifacts: StepArtifactEntry[];\r\n}\r\n\r\nexport class Step implements StepInit, DatabaseModelPart {\r\n  inputArtifacts: StepArtifact[] = null;\r\n  outputArtifacts: StepArtifact[] = null;\r\n\r\n  constructor(entry: StepEntry | undefined, init: StepInit | undefined) {\r\n    if (entry != null) {\r\n      this.inputArtifacts =\r\n        entry.inputArtifacts?.map(\r\n          (artifact) => new StepArtifact(artifact, undefined)\r\n        ) ?? this.inputArtifacts;\r\n      this.outputArtifacts =\r\n        entry.outputArtifacts?.map(\r\n          (artifact) => new StepArtifact(artifact, undefined)\r\n        ) ?? this.outputArtifacts;\r\n    } else if (init != null) {\r\n      this.inputArtifacts =\r\n        init.inputArtifacts?.map(\r\n          (artifact) => new StepArtifact(undefined, artifact)\r\n        ) ?? this.inputArtifacts;\r\n      this.outputArtifacts =\r\n        init.outputArtifacts?.map(\r\n          (artifact) => new StepArtifact(undefined, artifact)\r\n        ) ?? this.outputArtifacts;\r\n    } else {\r\n      throw new Error('Either entry or init must be provided.');\r\n    }\r\n  }\r\n\r\n  finish(output: StepArtifact[]): void {\r\n    this.outputArtifacts = output;\r\n  }\r\n\r\n  toDb(): StepEntry {\r\n    return {\r\n      inputArtifacts: this.inputArtifacts\r\n        ? this.inputArtifacts.map((artifact) => artifact.toDb())\r\n        : null,\r\n      outputArtifacts: this.outputArtifacts\r\n        ? this.outputArtifacts.map((artifact) => artifact.toDb())\r\n        : null,\r\n    };\r\n  }\r\n}\r\n","import BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\r\nimport BpmnRenderer from 'bpmn-js/lib/draw/BpmnRenderer';\r\nimport TextRenderer from 'bpmn-js/lib/draw/TextRenderer';\r\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\r\nimport { append, attr, remove, select } from 'tiny-svg';\r\n\r\nexport default class RunningProcessViewRenderer extends BaseRenderer {\r\n  static $inject = ['eventBus', 'bpmnRenderer', 'textRenderer'];\r\n\r\n  private static readonly HIGH_PRIORITY = 1500;\r\n\r\n  private bpmnRenderer: BpmnRenderer;\r\n  private textRenderer: TextRenderer;\r\n\r\n  constructor(eventBus, bpmnRenderer, textRenderer) {\r\n    super(eventBus, RunningProcessViewRenderer.HIGH_PRIORITY);\r\n\r\n    this.bpmnRenderer = bpmnRenderer;\r\n    this.textRenderer = textRenderer;\r\n  }\r\n\r\n  canRender(element) {\r\n    return is(element, 'bpmn:FlowNode') || is(element, 'bpmn:SequenceFlow');\r\n  }\r\n\r\n  drawShape(parentNode: SVGGElement, element) {\r\n    const shape: SVGRectElement = this.bpmnRenderer.drawShape(\r\n      parentNode,\r\n      element\r\n    );\r\n    const method = element.businessObject.get('method');\r\n    if (method) {\r\n      remove(select(parentNode, 'text'));\r\n      const methodName = this.textRenderer.createText(method.name, {\r\n        box: element,\r\n        align: 'center-middle',\r\n        padding: 5,\r\n      });\r\n      append(parentNode, methodName);\r\n      attr(shape, { rx: 0, ry: 0 });\r\n    }\r\n    if (element.businessObject.get('tokens') > 0) {\r\n      attr(shape, { stroke: 'red' });\r\n    } else if (element.businessObject.get('executed')) {\r\n      attr(shape, { stroke: 'green' });\r\n    }\r\n    return shape;\r\n  }\r\n\r\n  drawConnection(parentNode: SVGGElement, element) {\r\n    const connection: SVGPathElement = this.bpmnRenderer.drawConnection(\r\n      parentNode,\r\n      element\r\n    );\r\n    if (element.businessObject.get('used')) {\r\n      attr(connection, { stroke: 'green' });\r\n    }\r\n    return connection;\r\n  }\r\n\r\n  getShapePath(shape) {\r\n    return this.bpmnRenderer.getShapePath(shape);\r\n  }\r\n}\r\n","import CoreModule from 'bpmn-js/lib/core';\r\nimport RunningProcessViewRenderer from './RunningProcessViewRenderer';\r\n\r\nexport default {\r\n  __depends__: [CoreModule],\r\n  __init__: ['runningProcessViewRenderer'],\r\n  runningProcessViewRenderer: ['type', RunningProcessViewRenderer],\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RunningProcessViewerComponent } from './running-process-viewer/running-process-viewer.component';\r\nimport { KanbanBoardComponent } from './kanban-board/kanban-board.component';\r\nimport { RunningProcessKanbanBoardComponent } from './running-process-kanban-board/running-process-kanban-board.component';\r\nimport { RunningProcessMethodCommentsComponent } from './running-process-method-comments/running-process-method-comments.component';\r\nimport { RunningProcessMethodCommentFormComponent } from './running-process-method-comment-form/running-process-method-comment-form.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RunningProcessViewerComponent,\r\n    KanbanBoardComponent,\r\n    RunningProcessKanbanBoardComponent,\r\n    RunningProcessMethodCommentsComponent,\r\n    RunningProcessMethodCommentFormComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    QuillModule,\r\n    NgbPaginationModule,\r\n  ],\r\n  exports: [\r\n    RunningProcessViewerComponent,\r\n    KanbanBoardComponent,\r\n    RunningProcessKanbanBoardComponent,\r\n    RunningProcessMethodCommentsComponent,\r\n  ],\r\n})\r\nexport class DevelopmentProcessViewModule {}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { KanbanBoardMethodInfo } from './kanban-board-method-info';\r\n\r\n@Component({\r\n  selector: 'app-kanban-board',\r\n  templateUrl: './kanban-board.component.html',\r\n  styleUrls: ['./kanban-board.component.css'],\r\n})\r\nexport class KanbanBoardComponent {\r\n  @Input() todo: KanbanBoardMethodInfo[];\r\n  @Input() doing: KanbanBoardMethodInfo[];\r\n  @Input() done: KanbanBoardMethodInfo[];\r\n\r\n  @Output() addTodo = new EventEmitter<void>();\r\n  @Output() removeTodo = new EventEmitter<string>(); // emits the execution id\r\n  @Output() viewNode = new EventEmitter<string>(); // emits the node id\r\n  @Output() showNodeInfo = new EventEmitter<string>(); // emits the node id\r\n  @Output() showExecutionInfo = new EventEmitter<string>(); // emits the execution id\r\n  @Output() startNodeExecution = new EventEmitter<string>(); // emits the node id\r\n  @Output() startExecution = new EventEmitter<string>(); // emits the execution id\r\n  @Output() viewExecution = new EventEmitter<string>(); // emits execution id\r\n  @Output() viewComments = new EventEmitter<string>(); // emits execution id\r\n\r\n  donePage: number = 1;\r\n  donePageSize: number = 4;\r\n\r\n  _showInfo(info: KanbanBoardMethodInfo): void {\r\n    if (info.executionId) {\r\n      this.showExecutionInfo.emit(info.executionId);\r\n    } else if (info.nodeId) {\r\n      this.showNodeInfo.emit(info.nodeId);\r\n    }\r\n  }\r\n\r\n  _startExecution(info: KanbanBoardMethodInfo): void {\r\n    if (info.executionId) {\r\n      this.startExecution.emit(info.executionId);\r\n    } else if (info.nodeId) {\r\n      this.startNodeExecution.emit(info.nodeId);\r\n    }\r\n  }\r\n}\r\n","<div class=\"row min-height-200-px\">\r\n  <div class=\"col border-right\">\r\n    <div class=\"d-flex justify-content-center\">\r\n      <div class=\"flex-1\"></div>\r\n      <h6 class=\"text-center ml-auto mr-auto\">TODO</h6>\r\n      <div class=\"d-flex flex-1\">\r\n        <button class=\"btn btn-xs btn-primary ml-auto\" (click)=\"addTodo.emit()\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex flex-column align-items-center\">\r\n      <div *ngFor=\"let info of todo\" class=\"card text-center w-75 my-2\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-title font-weight-bold\">{{ info.methodName }}</div>\r\n          <button\r\n            *ngIf=\"info.nodeId\"\r\n            class=\"btn btn-xs btn-dark mr-1 mb-1\"\r\n            (click)=\"viewNode.emit(info.nodeId)\"\r\n          >\r\n            Show development step in process\r\n          </button>\r\n          <button\r\n            class=\"btn btn-xs btn-info mr-1 mb-1\"\r\n            (click)=\"_showInfo(info)\"\r\n          >\r\n            Info\r\n          </button>\r\n          <button\r\n            class=\"btn btn-xs btn-warning mr-1 mb-1\"\r\n            (click)=\"_startExecution(info)\"\r\n          >\r\n            Start\r\n          </button>\r\n          <button\r\n            *ngIf=\"info.nodeId == null\"\r\n            class=\"btn btn-xs btn-secondary mb-1\"\r\n            (click)=\"removeTodo.emit(info.executionId)\"\r\n          >\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col border-right\">\r\n    <h6 class=\"text-center\">Doing</h6>\r\n    <div class=\"d-flex flex-column align-items-center\">\r\n      <div *ngFor=\"let info of doing\" class=\"card text-center w-75 my-2\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-title font-weight-bold\">{{ info.methodName }}</div>\r\n          <button\r\n            *ngIf=\"info.nodeId\"\r\n            class=\"btn btn-xs btn-dark mr-1 mb-1\"\r\n            (click)=\"viewNode.emit(info.nodeId)\"\r\n          >\r\n            Show development step in process\r\n          </button>\r\n          <button\r\n            class=\"btn btn-xs btn-info mr-1 mb-1\"\r\n            (click)=\"_showInfo(info)\"\r\n          >\r\n            Info\r\n          </button>\r\n          <button\r\n            class=\"btn btn-xs btn-warning mb-1\"\r\n            (click)=\"viewExecution.emit(info.executionId)\"\r\n          >\r\n            View Execution\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col\">\r\n    <h6 class=\"text-center\">Done</h6>\r\n    <div class=\"d-flex flex-column align-items-center\">\r\n      <div\r\n        *ngFor=\"\r\n          let info of done\r\n            | slice: (donePage - 1) * donePageSize:donePage * donePageSize\r\n        \"\r\n        class=\"card text-center w-75 my-2\"\r\n      >\r\n        <div class=\"card-body\">\r\n          <div class=\"card-title font-weight-bold\">{{ info.methodName }}</div>\r\n          <button\r\n            *ngIf=\"info.nodeId\"\r\n            class=\"btn btn-xs btn-dark mr-1 mb-1\"\r\n            (click)=\"viewNode.emit(info.nodeId)\"\r\n          >\r\n            Show development step in process\r\n          </button>\r\n          <button\r\n            class=\"btn btn-xs btn-dark mr-1 mb-1\"\r\n            (click)=\"viewComments.emit(info.executionId)\"\r\n          >\r\n            View Comments\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <ngb-pagination\r\n        *ngIf=\"done.length > donePageSize\"\r\n        [collectionSize]=\"done.length\"\r\n        [(page)]=\"donePage\"\r\n        [pageSize]=\"donePageSize\"\r\n        class=\"mt-3\"\r\n      ></ngb-pagination>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { KanbanBoardMethodInfo } from '../kanban-board/kanban-board-method-info';\r\nimport { RunningProcess } from '../../development-process-registry/running-process/running-process';\r\nimport { RunningProcessService } from '../../development-process-registry/running-process/running-process.service';\r\nimport { Decision } from '../../development-process-registry/bm-process/decision';\r\n\r\n@Component({\r\n  selector: 'app-running-process-kanban-board',\r\n  templateUrl: './running-process-kanban-board.component.html',\r\n  styleUrls: ['./running-process-kanban-board.component.css'],\r\n})\r\nexport class RunningProcessKanbanBoardComponent implements OnChanges {\r\n  @Input() runningProcess: RunningProcess;\r\n\r\n  @Output() addTodo = new EventEmitter<void>();\r\n  @Output() removeTodo = new EventEmitter<string>(); // emits the execution id\r\n  @Output() viewNode = new EventEmitter<string>(); // emits the node id\r\n  @Output() showInfo = new EventEmitter<Decision>();\r\n  @Output() startNodeExecution = new EventEmitter<string>(); // emits the node id\r\n  @Output() startExecution = new EventEmitter<string>(); // emits the execution id\r\n  @Output() viewExecution = new EventEmitter<string>(); // emits execution id\r\n  @Output() viewComments = new EventEmitter<string>(); // emits execution id\r\n\r\n  todo: KanbanBoardMethodInfo[] = [];\r\n  doing: KanbanBoardMethodInfo[] = [];\r\n  done: KanbanBoardMethodInfo[] = [];\r\n\r\n  constructor(private runningProcessService: RunningProcessService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.runningProcess) {\r\n      void this.updateBoard(changes.runningProcess.currentValue);\r\n    }\r\n  }\r\n\r\n  _showNodeInfo(nodeId: string): void {\r\n    this.showInfo.emit(this.runningProcess.process.decisions[nodeId]);\r\n  }\r\n\r\n  _showExecutionInfo(executionId: string): void {\r\n    const todoMethod = this.runningProcess.getTodoMethod(executionId);\r\n    const runningMethod = this.runningProcess.getRunningMethod(executionId);\r\n    let decision;\r\n    if (todoMethod) {\r\n      decision = todoMethod.decision;\r\n    } else if (runningMethod) {\r\n      decision = runningMethod.decision;\r\n    }\r\n    this.showInfo.emit(decision);\r\n  }\r\n\r\n  private async updateBoard(runningProcess: RunningProcess): Promise<void> {\r\n    this.todo = await this.getTodoList(runningProcess);\r\n    this.doing = this.getDoingList(runningProcess);\r\n    this.done = this.getDoneList(runningProcess);\r\n  }\r\n\r\n  private async getTodoList(\r\n    runningProcess: RunningProcess\r\n  ): Promise<KanbanBoardMethodInfo[]> {\r\n    const todo: KanbanBoardMethodInfo[] = [];\r\n    todo.push(...runningProcess.todoMethods);\r\n    todo.push(\r\n      ...(\r\n        await this.runningProcessService.getExecutableMethods(runningProcess)\r\n      ).map((node) => {\r\n        return {\r\n          nodeId: node.id,\r\n          methodName: runningProcess.process.decisions[node.id].method.name,\r\n        };\r\n      })\r\n    );\r\n    return todo;\r\n  }\r\n\r\n  private getDoingList(\r\n    runningProcess: RunningProcess\r\n  ): KanbanBoardMethodInfo[] {\r\n    return runningProcess.runningMethods;\r\n  }\r\n\r\n  private getDoneList(runningProcess: RunningProcess): KanbanBoardMethodInfo[] {\r\n    return runningProcess.executedMethods.slice().reverse();\r\n  }\r\n}\r\n","<app-kanban-board\r\n  [todo]=\"todo\"\r\n  [doing]=\"doing\"\r\n  [done]=\"done\"\r\n  (addTodo)=\"addTodo.emit($event)\"\r\n  (removeTodo)=\"removeTodo.emit($event)\"\r\n  (viewNode)=\"viewNode.emit($event)\"\r\n  (showNodeInfo)=\"_showNodeInfo($event)\"\r\n  (showExecutionInfo)=\"_showExecutionInfo($event)\"\r\n  (startNodeExecution)=\"startNodeExecution.emit($event)\"\r\n  (startExecution)=\"startExecution.emit($event)\"\r\n  (viewExecution)=\"viewExecution.emit($event)\"\r\n  (viewComments)=\"viewComments.emit($event)\"\r\n></app-kanban-board>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Comment } from '../../development-process-registry/running-process/comment';\r\nimport { AuthService } from '../../database/auth.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-running-process-method-comment-form',\r\n  templateUrl: './running-process-method-comment-form.component.html',\r\n  styleUrls: ['./running-process-method-comment-form.component.css'],\r\n})\r\nexport class RunningProcessMethodCommentFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() comment: Comment = null;\r\n\r\n  @Output() submitCommentForm = new EventEmitter<FormGroup>();\r\n\r\n  commentForm: FormGroup = this.fb.group({\r\n    userName: ['', Validators.required],\r\n    title: ['', Validators.required],\r\n    comment: ['', Validators.required],\r\n  });\r\n\r\n  private userNameChangeSubscription: Subscription;\r\n\r\n  constructor(private authService: AuthService, private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.comment == null && this.authService.username != null) {\r\n      this.userNameControl.disable();\r\n      this.userNameControl.setValue(this.authService.username);\r\n      this.userNameChangeSubscription = this.commentForm\r\n        .get('userName')\r\n        .valueChanges.pipe(\r\n          filter(\r\n            (value) =>\r\n              (value == null || value === '') &&\r\n              this.authService.username != null\r\n          ),\r\n          tap(() => this.userNameControl.setValue(this.authService.username))\r\n        )\r\n        .subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.comment) {\r\n      this.commentForm.patchValue(changes.comment.currentValue);\r\n      this.userNameControl.disable();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.userNameChangeSubscription) {\r\n      this.userNameChangeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submit(): void {\r\n    this.submitCommentForm.emit(this.commentForm);\r\n  }\r\n\r\n  get userNameControl(): FormControl {\r\n    return this.commentForm.get('userName') as FormControl;\r\n  }\r\n}\r\n","<form [formGroup]=\"commentForm\" (ngSubmit)=\"submit()\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"userName\" class=\"col-sm-4 col-form-label\">User</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"userName\"\r\n        class=\"form-control\"\r\n        id=\"userName\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"title\" class=\"col-sm-4 col-form-label\">Title</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"title\"\r\n        class=\"form-control\"\r\n        id=\"title\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"comment\" class=\"col-sm-4\">Comment</label>\r\n    <div class=\"col-sm-8\">\r\n      <quill-editor\r\n        [styles]=\"{ 'min-height': '250px' }\"\r\n        formControlName=\"comment\"\r\n        id=\"comment\"\r\n      ></quill-editor>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        [disabled]=\"!commentForm.valid\"\r\n      >\r\n        <ng-container *ngIf=\"comment == null\">Add comment</ng-container>\r\n        <ng-container *ngIf=\"comment != null\">Edit comment</ng-container>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Comment } from '../../development-process-registry/running-process/comment';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-running-process-method-comments',\r\n  templateUrl: './running-process-method-comments.component.html',\r\n  styleUrls: ['./running-process-method-comments.component.css'],\r\n})\r\nexport class RunningProcessMethodCommentsComponent {\r\n  @Input() comments: Comment[];\r\n  @Input() editable = true;\r\n\r\n  @Output() addComment = new EventEmitter<Comment>();\r\n  @Output() updateComment = new EventEmitter<Comment>();\r\n  @Output() removeComment = new EventEmitter<string>();\r\n\r\n  modalComment: Comment;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('editCommentModal', { static: true }) editCommentModal: unknown;\r\n\r\n  constructor(private modalService: NgbModal) {}\r\n\r\n  _addComment(formGroup: FormGroup): void {\r\n    this.addComment.emit(new Comment(undefined, formGroup.getRawValue()));\r\n    formGroup.reset();\r\n  }\r\n\r\n  _editComment(comment: Comment): void {\r\n    this.modalComment = comment;\r\n    this.modalReference = this.modalService.open(this.editCommentModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  _updateComment(formGroup: FormGroup): void {\r\n    this.modalComment.update(formGroup.value);\r\n    this.updateComment.emit(this.modalComment);\r\n    this.modalReference.close();\r\n  }\r\n}\r\n","<ng-template #editCommentModal let-d=\"dismiss\" let-c=\"close\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Edit comment {{ modalComment.title }}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"text-muted\">\r\n      <app-running-process-method-comment-form\r\n        [comment]=\"modalComment\"\r\n        (submitCommentForm)=\"_updateComment($event)\"\r\n      ></app-running-process-method-comment-form>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">Comments</h6>\r\n  <div *ngIf=\"comments.length === 0\">No comments</div>\r\n  <ul class=\"list-group\" *ngIf=\"comments.length > 0\">\r\n    <li *ngFor=\"let comment of comments\" class=\"list-group-item\">\r\n      <div class=\"d-flex w-100 justify-content-between\">\r\n        <small>Created by {{ comment.userName }}</small>\r\n        <div *ngIf=\"editable\">\r\n          <button\r\n            (click)=\"_editComment(comment)\"\r\n            type=\"button\"\r\n            class=\"btn btn-warning btn-xs mr-1\"\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            (click)=\"removeComment.emit(comment.id)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <h5 class=\"border-bottom pb-2\">{{ comment.title }}</h5>\r\n      <p class=\"show-new-lines mb-1\">\r\n        <quill-view [content]=\"comment.comment\"></quill-view>\r\n      </p>\r\n      <small>{{ comment.time | date: 'short' }}</small>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"editable\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">Add comment</h6>\r\n  <div class=\"text-muted pt-3\">\r\n    <app-running-process-method-comment-form\r\n      (submitCommentForm)=\"_addComment($event)\"\r\n    ></app-running-process-method-comment-form>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport BpmnViewer from 'bpmn-js/lib/NavigatedViewer';\r\nimport { RunningProcess } from '../../development-process-registry/running-process/running-process';\r\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\r\nimport { RunningProcessViewerService } from '../shared/running-process-viewer.service';\r\n\r\n@Component({\r\n  selector: 'app-running-process-viewer',\r\n  templateUrl: './running-process-viewer.component.html',\r\n  styleUrls: ['./running-process-viewer.component.css'],\r\n})\r\nexport class RunningProcessViewerComponent\r\n  implements OnInit, OnChanges, AfterContentInit, OnDestroy\r\n{\r\n  @Input() runningProcess: RunningProcess;\r\n\r\n  private viewer: BpmnViewer;\r\n\r\n  @ViewChild('canvas', { static: true }) canvas: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private runningProcessViewerService: RunningProcessViewerService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.viewer = this.runningProcessViewerService.getBpmnViewer();\r\n    if (this.runningProcess) {\r\n      this.loadBmProcess(this.runningProcess, true);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.runningProcess && this.viewer) {\r\n      this.loadBmProcess(\r\n        changes.runningProcess.currentValue,\r\n        changes.runningProcess.firstChange\r\n      );\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.viewer.attachTo(this.canvas.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.viewer.destroy();\r\n  }\r\n\r\n  focus(id: string) {\r\n    this.runningProcessViewerService.focusElement(this.viewer, id);\r\n    this.canvas.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  getSelectedFlowNode() {\r\n    const selection = this.viewer.get('selection').get()[0];\r\n    if (is(selection, 'bpmn:FlowNode')) {\r\n      return selection;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getSelectedFlow() {\r\n    const selection = this.viewer.get('selection').get()[0];\r\n    if (is(selection, 'bpmn:SequenceFlow')) {\r\n      return selection;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private loadBmProcess(runningProcess: RunningProcess, firstLoad: boolean) {\r\n    this.viewer\r\n      .importXML(runningProcess.process.processDiagram)\r\n      .then(() => {\r\n        if (firstLoad) {\r\n          this.runningProcessViewerService.resizeView(this.viewer);\r\n        }\r\n      })\r\n      .catch((error) => console.log('LoadBmProcess: ' + error));\r\n  }\r\n}\r\n","<div #canvas class=\"border\" style=\"height: 500px\"></div>\r\n","import { Injectable } from '@angular/core';\r\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\r\nimport { getBBox } from 'diagram-js/lib/util/Elements';\r\n\r\n@Injectable()\r\nexport abstract class BpmnViewerService {\r\n  /**\r\n   * Resize the view to view the diagram correctly\r\n   *\r\n   * @param modeler the modeler that currently displays the process\r\n   */\r\n  resizeView(modeler: any) {\r\n    const bbox = getBBox(\r\n      modeler\r\n        .get('elementRegistry')\r\n        .filter((element) => !is(element, 'bpmn:Process'))\r\n    );\r\n    const canvas = modeler.get('canvas');\r\n    const view = canvas.viewbox();\r\n    canvas.viewbox({\r\n      x: bbox.x - 160,\r\n      y: bbox.y - 50,\r\n      width: view.outer.width,\r\n      height: view.outer.height,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Focus a specific element\r\n   *\r\n   * @param modeler the modeler that currently displays the process\r\n   * @param id the id of the element\r\n   */\r\n  focusElement(modeler: any, id: string) {\r\n    const element = modeler.get('elementRegistry').get(id);\r\n    modeler.get('selection').select(element);\r\n    const canvas = modeler.get('canvas');\r\n    const viewbox = canvas.viewbox();\r\n    let adjustRatio = false;\r\n    const ratio = viewbox.width / viewbox.height;\r\n    if (viewbox.width < element.width) {\r\n      viewbox.width = element.width + 600;\r\n      adjustRatio = true;\r\n    }\r\n    if (viewbox.height < element.height) {\r\n      viewbox.height = element.height + 600;\r\n      adjustRatio = true;\r\n    }\r\n    if (adjustRatio) {\r\n      if (viewbox.width < viewbox.height * ratio) {\r\n        viewbox.width = viewbox.height * ratio;\r\n      } else if (viewbox.height < 1 / (ratio / viewbox.width)) {\r\n        viewbox.height = 1 / (ratio / viewbox.width);\r\n      }\r\n    }\r\n    viewbox.x = element.x - viewbox.width / 2 + element.width / 2;\r\n    viewbox.y = element.y - viewbox.height / 2 + element.height / 2;\r\n    canvas.viewbox(viewbox);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport BpmnViewer from 'bpmn-js/lib/NavigatedViewer';\r\nimport runningProcessView from '../bpmn-extensions/running-process-view';\r\nimport bmdl from '../../../assets/bpmn_bmdl.json';\r\nimport rbmp from '../../../assets/bpmn_running_process.json';\r\nimport { BpmnViewerService } from './bpmn-viewer.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RunningProcessViewerService extends BpmnViewerService {\r\n  getBpmnViewer(): BpmnViewer {\r\n    return new BpmnViewer({\r\n      additionalModules: [runningProcessView],\r\n      moddleExtensions: {\r\n        bmdl,\r\n        rbmp,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\r\nimport { Artifact } from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { MetaModelService } from '../../development-process-registry/meta-model.service';\r\nimport { getTypeaheadInputPipe } from '../../shared/utils';\r\nimport { debounceTime, filter, map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-artifact-definition-form',\r\n  templateUrl: './artifact-definition-form.component.html',\r\n  styleUrls: ['./artifact-definition-form.component.css'],\r\n})\r\nexport class ArtifactDefinitionFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() artifact: Artifact;\r\n\r\n  @Output() submitArtifactForm = new EventEmitter<FormGroup>();\r\n\r\n  definitionForm = this.fb.group(\r\n    {\r\n      internalArtifact: this.fb.control(false, Validators.required),\r\n      metaModel: this.fb.control(null),\r\n    },\r\n    {\r\n      validators: (group) => {\r\n        if (\r\n          group.get('internalArtifact').value &&\r\n          !group.get('metaModel').value\r\n        ) {\r\n          return { requiredMetaModel: true };\r\n        }\r\n        return null;\r\n      },\r\n    }\r\n  );\r\n  changed = false;\r\n\r\n  openMetaModelInput = new Subject<string>();\r\n\r\n  private changeSubscription: Subscription;\r\n  private internalArtifactSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private metaModelService: MetaModelService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.changeSubscription = this.definitionForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap((value) => (this.changed = !this.equals(this.artifact, value)))\r\n      )\r\n      .subscribe();\r\n    this.internalArtifactSubscription =\r\n      this.internalArtifactControl.valueChanges\r\n        .pipe(\r\n          filter((value) => !value),\r\n          tap(() => this.metaModelControl.setValue(null))\r\n        )\r\n        .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.artifact) {\r\n      const oldArtifact: Artifact = changes.artifact.previousValue;\r\n      const newArtifact: Artifact = changes.artifact.currentValue;\r\n      if (!this.equals(newArtifact, oldArtifact)) {\r\n        this.definitionForm.patchValue(newArtifact);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.internalArtifactSubscription) {\r\n      this.internalArtifactSubscription.unsubscribe();\r\n    }\r\n    this.openMetaModelInput.complete();\r\n  }\r\n\r\n  searchMetaModel = (input: Observable<string>) => {\r\n    return merge(getTypeaheadInputPipe(input), this.openMetaModelInput).pipe(\r\n      map((term) =>\r\n        this.metaModels\r\n          .filter((metaModelItem) =>\r\n            metaModelItem.name.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 7)\r\n      )\r\n    );\r\n  };\r\n\r\n  formatter(x: { name: string }) {\r\n    return x.name;\r\n  }\r\n\r\n  private equals(artifactA: Artifact, artifactB: Artifact) {\r\n    if (artifactA == null && artifactB == null) {\r\n      return true;\r\n    }\r\n    if (artifactA == null || artifactB == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      artifactA.internalArtifact === artifactB.internalArtifact &&\r\n      this.equalsMetaModel(artifactA.metaModel, artifactB.metaModel)\r\n    );\r\n  }\r\n\r\n  private equalsMetaModel(\r\n    metaModelA: { name: string; type: any },\r\n    metaModelB: { name: string; type: any }\r\n  ) {\r\n    if (metaModelA == null && metaModelB == null) {\r\n      return true;\r\n    }\r\n    if (metaModelA == null || metaModelB == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      metaModelA.name === metaModelB.name && metaModelA.type === metaModelB.type\r\n    );\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitArtifactForm.emit(this.definitionForm);\r\n  }\r\n\r\n  get metaModels() {\r\n    return this.metaModelService.metaModels;\r\n  }\r\n\r\n  get internalArtifactControl() {\r\n    return this.definitionForm.get('internalArtifact') as FormControl;\r\n  }\r\n\r\n  get metaModelControl() {\r\n    return this.definitionForm.get('metaModel') as FormControl;\r\n  }\r\n}\r\n","<form [formGroup]=\"definitionForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group\">\r\n    <div\r\n      class=\"btn-group btn-group-toggle\"\r\n      ngbRadioGroup\r\n      name=\"internalArtifact\"\r\n      formControlName=\"internalArtifact\"\r\n    >\r\n      <label ngbButtonLabel class=\"btn-primary\">\r\n        <input ngbButton type=\"radio\" [value]=\"true\" /> Internal Artifact\r\n      </label>\r\n      <label ngbButtonLabel class=\"btn-primary\">\r\n        <input ngbButton type=\"radio\" [value]=\"false\" /> External Artifact\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <div\r\n    *ngIf=\"definitionForm.get('internalArtifact').value\"\r\n    class=\"form-group row\"\r\n  >\r\n    <label for=\"metaModel\" class=\"col-sm-4 col-form-label\">Meta Model</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"metaModel\"\r\n        class=\"form-control\"\r\n        [class.is-invalid]=\"metaModelControl.invalid\"\r\n        id=\"metaModel\"\r\n        [ngbTypeahead]=\"searchMetaModel\"\r\n        [editable]=\"false\"\r\n        [resultFormatter]=\"formatter\"\r\n        [inputFormatter]=\"formatter\"\r\n        (click)=\"openMetaModelInput.next($any($event.target).value)\"\r\n        (focus)=\"openMetaModelInput.next($any($event.target).value)\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!definitionForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport {\r\n  Artifact,\r\n  ArtifactInit,\r\n} from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { ArtifactService } from '../../development-process-registry/method-elements/artifact/artifact.service';\r\nimport { MethodElementLoaderService } from '../shared/method-element-loader.service';\r\nimport { MethodElementService } from '../../development-process-registry/method-elements/method-element.service';\r\n\r\n@Component({\r\n  selector: 'app-artifact',\r\n  templateUrl: './artifact.component.html',\r\n  styleUrls: ['./artifact.component.css'],\r\n  providers: [\r\n    MethodElementLoaderService,\r\n    { provide: MethodElementService, useExisting: ArtifactService },\r\n  ],\r\n})\r\nexport class ArtifactComponent {\r\n  constructor(\r\n    private artifactLoaderService: MethodElementLoaderService<\r\n      Artifact,\r\n      ArtifactInit\r\n    >,\r\n    private artifactService: ArtifactService\r\n  ) {}\r\n\r\n  async updateValue(value: any): Promise<void> {\r\n    await this.artifactService.update(this.artifact._id, value);\r\n  }\r\n\r\n  get artifact(): Artifact {\r\n    return this.artifactLoaderService.methodElement;\r\n  }\r\n\r\n  get listNames(): string[] {\r\n    return this.artifactLoaderService.listNames;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"artifact\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">{{ artifact.name }}</a>\r\n  </nav>\r\n</div>\r\n\r\n<main class=\"container\" *ngIf=\"artifact\">\r\n  <div class=\"alert alert-info mt-3\" role=\"alert\">\r\n    Update an Artifact and define its values.\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Artifact</h6>\r\n    <div class=\"text-muted\">\r\n      <app-method-element-form\r\n        [methodElement]=\"artifact\"\r\n        [listNames]=\"listNames\"\r\n        (submitMethodElementForm)=\"updateValue($event.value)\"\r\n      ></app-method-element-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Definition</h6>\r\n    <div class=\"text-muted\">\r\n      <app-artifact-definition-form\r\n        [artifact]=\"artifact\"\r\n        (submitArtifactForm)=\"updateValue($event.value)\"\r\n      ></app-artifact-definition-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n  Artifact,\r\n  ArtifactEntry,\r\n} from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { ArtifactService } from '../../development-process-registry/method-elements/artifact/artifact.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GroupSelection } from '../../development-process-registry/bm-process/decision';\r\nimport { MultipleSelection } from '../../development-process-registry/development-method/multiple-selection';\r\n\r\n@Component({\r\n  selector: 'app-artifacts-group-info',\r\n  templateUrl: './artifacts-group-info.component.html',\r\n  styleUrls: ['./artifacts-group-info.component.css'],\r\n})\r\nexport class ArtifactsGroupInfoComponent implements OnInit {\r\n  @Input() groups: MultipleSelection<Artifact>[][];\r\n  @Input() selection: GroupSelection<Artifact>;\r\n\r\n  @Output() submitGroupsForm = new EventEmitter<FormGroup>();\r\n\r\n  methodElements: ArtifactEntry[] = [];\r\n\r\n  constructor(private artifactService: ArtifactService) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadMethodElements();\r\n  }\r\n\r\n  private async loadMethodElements(): Promise<void> {\r\n    this.methodElements = await this.artifactService.getList();\r\n  }\r\n}\r\n","<app-method-element-group-info\r\n  [groups]=\"groups\"\r\n  [selection]=\"selection\"\r\n  [methodElements]=\"methodElements\"\r\n  methodElementName=\"Artifact\"\r\n  (submitGroupsForm)=\"submitGroupsForm.emit($event)\"\r\n></app-method-element-group-info>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Artifact,\r\n  ArtifactEntry,\r\n} from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { ArtifactService } from '../../development-process-registry/method-elements/artifact/artifact.service';\r\nimport { MultipleSelection } from '../../development-process-registry/development-method/multiple-selection';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport { MultipleMappingSelection } from '../../development-process-registry/development-method/multiple-mapping-selection';\r\nimport { ArtifactMappingFormService } from '../shared/artifact-mapping-form.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { equalsListOfLists } from '../../shared/utils';\r\n\r\n@Component({\r\n  selector: 'app-artifacts-selection-form',\r\n  templateUrl: './artifacts-selection-form.component.html',\r\n  styleUrls: ['./artifacts-selection-form.component.css'],\r\n})\r\nexport class ArtifactsSelectionFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() artifacts: MultipleSelection<Artifact>[][];\r\n  @Input() developmentMethod: DevelopmentMethod = null;\r\n\r\n  @Output() submitArtifactsForm = new EventEmitter<FormArray>();\r\n\r\n  artifactsForm: FormGroup = this.fb.group({\r\n    allowNone: this.fb.control(false),\r\n    artifacts: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  methodElements: ArtifactEntry[] = [];\r\n  listNames: string[] = [];\r\n\r\n  private allowNoneSubscription: Subscription;\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private artifactMappingFormService: ArtifactMappingFormService,\r\n    private artifactService: ArtifactService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadMethodElements();\r\n\r\n    this.allowNoneSubscription = this.artifactsForm\r\n      .get('allowNone')\r\n      .valueChanges.subscribe((value) => {\r\n        if (value) {\r\n          if (this.formArray.controls.length > 0) {\r\n            if ((this.formArray.at(0) as FormArray).controls.length > 0) {\r\n              this.formArray.insert(0, this.fb.array([]));\r\n            }\r\n          }\r\n        } else {\r\n          if (this.formArray.controls.length > 0) {\r\n            if ((this.formArray.at(0) as FormArray).controls.length === 0) {\r\n              this.formArray.removeAt(0);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    this.changeSubscription = this.artifactsForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !equalsListOfLists(this.artifacts, value.artifacts))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.artifacts) {\r\n      const oldArtifactGroups: MultipleSelection<Artifact>[][] =\r\n        changes.artifacts.previousValue;\r\n      const newArtifactGroups: MultipleSelection<Artifact>[][] =\r\n        changes.artifacts.currentValue;\r\n      if (!equalsListOfLists(oldArtifactGroups, newArtifactGroups)) {\r\n        this.loadForm(newArtifactGroups);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.allowNoneSubscription) {\r\n      this.allowNoneSubscription.unsubscribe();\r\n    }\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  add(): void {\r\n    this.formArray.push(this.fb.array([]));\r\n  }\r\n\r\n  remove(index: number): void {\r\n    this.formArray.removeAt(index);\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitArtifactsForm.emit(\r\n      this.artifactsForm.get('artifacts') as FormArray\r\n    );\r\n  }\r\n\r\n  private loadForm(artifacts: MultipleSelection<Artifact>[][]): void {\r\n    const formArrays = artifacts.map((group) =>\r\n      this.fb.array(\r\n        group.map((element) => {\r\n          if (element instanceof MultipleMappingSelection) {\r\n            return this.fb.group({\r\n              list: [element.list, Validators.required],\r\n              element: { value: element.element, disabled: element.multiple },\r\n              multiple: element.multiple,\r\n              multipleElements: {\r\n                value: element.multipleElements,\r\n                disabled: element.multiple,\r\n              },\r\n              mapping: this.artifactMappingFormService.createMappingsForm(\r\n                element.mapping\r\n              ),\r\n            });\r\n          } else {\r\n            return this.fb.group({\r\n              list: [element.list, Validators.required],\r\n              element: { value: element.element, disabled: element.multiple },\r\n              multiple: element.multiple,\r\n              multipleElements: {\r\n                value: element.multipleElements,\r\n                disabled: element.multiple,\r\n              },\r\n              mapping: this.fb.array([]),\r\n            });\r\n          }\r\n        })\r\n      )\r\n    );\r\n    this.artifactsForm.setControl('artifacts', this.fb.array(formArrays));\r\n    if (artifacts.length > 0) {\r\n      this.artifactsForm.get('allowNone').setValue(artifacts[0].length === 0);\r\n    } else {\r\n      this.artifactsForm.get('allowNone').setValue(false);\r\n    }\r\n  }\r\n\r\n  private async loadMethodElements(): Promise<void> {\r\n    this.methodElements = await this.artifactService.getList();\r\n    this.listNames = [\r\n      ...new Set(this.methodElements.map((element) => element.list)),\r\n    ];\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.artifactsForm.get('artifacts') as FormArray;\r\n  }\r\n\r\n  createFormGroupFactory = (): FormGroup =>\r\n    this.fb.group({\r\n      list: ['', Validators.required],\r\n      element: null,\r\n      multiple: false,\r\n      multipleElements: false,\r\n      mapping: this.fb.array([]),\r\n    });\r\n}\r\n","<ng-template\r\n  #artifactMethodElementSelectionForm\r\n  let-remove=\"remove\"\r\n  let-formGroup=\"formGroup\"\r\n  let-index=\"index\"\r\n>\r\n  <app-method-element-selection-form\r\n    [formGroup]=\"formGroup\"\r\n    [listNames]=\"listNames\"\r\n    [methodElements]=\"methodElements\"\r\n    methodElementName=\"Artifact\"\r\n    [multipleAllowed]=\"true\"\r\n    (remove)=\"remove(index)\"\r\n  ></app-method-element-selection-form>\r\n  <ng-container [formGroup]=\"formGroup\">\r\n    <app-development-method-artifact-mappings\r\n      *ngIf=\"\r\n        developmentMethod &&\r\n        formGroup.get('element').value &&\r\n        formGroup.get('element').value.metaModel\r\n      \"\r\n      [developmentMethod]=\"developmentMethod\"\r\n      formArrayName=\"mapping\"\r\n      [metaModel]=\"{\r\n        name: formGroup.get('element').value.metaModel.name,\r\n        type: formGroup.get('element').value.metaModel.type\r\n      }\"\r\n    ></app-development-method-artifact-mappings>\r\n  </ng-container>\r\n</ng-template>\r\n\r\n<form [formGroup]=\"artifactsForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-check\" *ngIf=\"formArray.controls.length > 0\">\r\n    <input\r\n      class=\"form-check-input\"\r\n      type=\"checkbox\"\r\n      formControlName=\"allowNone\"\r\n      id=\"checkboxAllowNone\"\r\n    />\r\n    <label class=\"form-check-label\" for=\"checkboxAllowNone\"> Allow None </label>\r\n  </div>\r\n  <div class=\"form-group\" formGroupName=\"artifacts\">\r\n    <ng-container\r\n      *ngFor=\"\r\n        let control of formArray.controls;\r\n        let index = index;\r\n        let first = first\r\n      \"\r\n    >\r\n      <div\r\n        *ngIf=\"index !== 0 || !artifactsForm.get('allowNone').value\"\r\n        [class.mt-3]=\"\r\n          index > 1 || (!artifactsForm.get('allowNone').value && !first)\r\n        \"\r\n        class=\"p-3 mb-3 bg-white rounded shadow-sm\"\r\n      >\r\n        <h6 class=\"border-bottom border-gray pb-2\">Group</h6>\r\n        <app-method-elements-selection-form\r\n          class=\"form-group\"\r\n          formArrayName=\"{{ index }}\"\r\n          [createFormGroupFactory]=\"createFormGroupFactory\"\r\n          [methodElementFormTemplate]=\"artifactMethodElementSelectionForm\"\r\n        ></app-method-elements-selection-form>\r\n        <div class=\"form-group d-flex\">\r\n          <button\r\n            (click)=\"remove(index)\"\r\n            type=\"button\"\r\n            class=\"btn btn-secondary ml-auto\"\r\n          >\r\n            Remove OR Group\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"form-group d-flex\">\r\n    <button (click)=\"add()\" type=\"button\" class=\"btn btn-secondary ml-auto\">\r\n      Add OR Group\r\n    </button>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!artifactsForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ArtifactService } from '../../development-process-registry/method-elements/artifact/artifact.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  Artifact,\r\n  ArtifactEntry,\r\n} from '../../development-process-registry/method-elements/artifact/artifact';\r\n\r\n@Component({\r\n  selector: 'app-artifacts',\r\n  templateUrl: './artifacts.component.html',\r\n  styleUrls: ['./artifacts.component.css'],\r\n})\r\nexport class ArtifactsComponent implements OnInit {\r\n  elementLists: { listName: string; elements: ArtifactEntry[] }[] = null;\r\n  listNames: string[] = [];\r\n\r\n  modalArtifact: Artifact;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteArtifactModal', { static: true })\r\n  deleteArtifactModal: unknown;\r\n\r\n  constructor(\r\n    private artifactService: ArtifactService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.load();\r\n  }\r\n\r\n  private async load(): Promise<void> {\r\n    this.elementLists = await this.artifactService.getLists();\r\n    this.listNames = this.elementLists.map((list) => list.listName);\r\n  }\r\n\r\n  openDeleteArtifactModal(artifact: Artifact): void {\r\n    this.modalArtifact = artifact;\r\n    this.modalReference = this.modalService.open(this.deleteArtifactModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async delete(id: string): Promise<void> {\r\n    await this.artifactService.delete(id);\r\n    await this.load();\r\n  }\r\n\r\n  async add(form: FormGroup): Promise<void> {\r\n    await this.artifactService.add(form.value);\r\n    await this.load();\r\n  }\r\n}\r\n","<ng-template #deleteArtifactModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal (dismiss)=\"d()\" (delete)=\"delete(modalArtifact._id); c()\">\r\n    <div modalTitle>Delete Artifact {{ modalArtifact.name }}</div>\r\n    You are deleting the artifact {{ modalArtifact.name }}. This can not be\r\n    undone. This action will not delete the artifact from method building blocks\r\n    that are using it.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Artifacts</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create Artifacts to use them for the definition of Method Fragments\r\n  </div>\r\n\r\n  <app-method-element-list\r\n    listTitle=\"Artifacts\"\r\n    [elementLists]=\"elementLists\"\r\n    (deleteElement)=\"openDeleteArtifactModal($event)\"\r\n  ></app-method-element-list>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Add Artifact</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-method-element-form\r\n        [listNames]=\"listNames\"\r\n        (submitMethodElementForm)=\"add($event)\"\r\n      ></app-method-element-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { BmProcess } from '../../development-process-registry/bm-process/bm-process';\r\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\r\nimport { BpmnService } from '../shared/bpmn.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProcessPatternService } from '../../development-process-registry/process-pattern/process-pattern.service';\r\nimport {\r\n  DevelopmentMethod,\r\n  DevelopmentMethodEntry,\r\n} from '../../development-process-registry/development-method/development-method';\r\nimport { DevelopmentMethodService } from '../../development-process-registry/development-method/development-method.service';\r\nimport {\r\n  ProcessPattern,\r\n  ProcessPatternEntry,\r\n} from '../../development-process-registry/process-pattern/process-pattern';\r\nimport { DiagramComponentInterface } from '../shared/diagram-component-interface';\r\nimport {\r\n  SituationalFactor,\r\n  SituationalFactorEntry,\r\n} from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\nimport { Artifact } from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { BmProcessService } from '../../development-process-registry/bm-process/bm-process.service';\r\nimport { DevelopmentMethodIncompleteModalComponent } from '../development-method-incomplete-modal/development-method-incomplete-modal.component';\r\nimport { Decision } from '../../development-process-registry/bm-process/decision';\r\n\r\n@Component({\r\n  selector: 'app-bm-process-diagram',\r\n  templateUrl: './bm-process-diagram.component.html',\r\n  styleUrls: ['./bm-process-diagram.component.css'],\r\n})\r\nexport class BmProcessDiagramComponent\r\n  implements\r\n    DiagramComponentInterface,\r\n    OnInit,\r\n    OnChanges,\r\n    AfterContentInit,\r\n    OnDestroy\r\n{\r\n  @Input() bmProcess: BmProcess;\r\n\r\n  @Output() saveBmProcess = new EventEmitter<{\r\n    decisions?: { [elementId: string]: Decision };\r\n    processDiagram: string;\r\n  }>();\r\n\r\n  private modeler: BpmnModeler;\r\n\r\n  validDevelopmentMethods: DevelopmentMethodEntry[] = null;\r\n\r\n  lowWarnings: {\r\n    elementName: string;\r\n    name: string;\r\n    elementId: string;\r\n    situationalFactors: string[];\r\n  }[] = [];\r\n  incorrectWarnings: {\r\n    elementName: string;\r\n    name: string;\r\n    elementId: string;\r\n    situationalFactors: string[];\r\n  }[] = [];\r\n  isGeneratingWarnings = false;\r\n  private wantsToGenerateWarnings = false;\r\n\r\n  missingArtifacts: {\r\n    elementId: string;\r\n    elementName: string;\r\n    name: string;\r\n    artifacts: Artifact[];\r\n  }[] = [];\r\n  unreachableActivities: {\r\n    elementId: string;\r\n    elementName: string;\r\n    name: string;\r\n  }[] = [];\r\n\r\n  modalElement;\r\n  modalDevelopmentMethod: DevelopmentMethod;\r\n  modalProcessPattern: ProcessPattern;\r\n  modalProcessPatterns: ProcessPatternEntry[];\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('canvas', { static: true }) canvas: ElementRef<HTMLDivElement>;\r\n  @ViewChild('addProcessPatternModal', { static: true })\r\n  addProcessPatternModal: unknown;\r\n  @ViewChild('deleteProcessPatternModal', { static: true })\r\n  deleteProcessPatternModal: unknown;\r\n  @ViewChild('methodInfoModal', { static: true }) methodInfoModal: unknown;\r\n  @ViewChild('patternInfoModal', { static: true }) patternInfoModal: unknown;\r\n  @ViewChild('selectDevelopmentMethodModal', { static: true })\r\n  selectDevelopmentMethodModal: unknown;\r\n  @ViewChild('selectProcessPatternModal', { static: true })\r\n  selectProcessPatternModal: unknown;\r\n  @ViewChild('showTypesModal', { static: true }) showTypesModal: unknown;\r\n  @ViewChild('developmentMethodSummaryModal', { static: true })\r\n  developmentMethodSummaryModal: unknown;\r\n\r\n  constructor(\r\n    private bmProcessService: BmProcessService,\r\n    private bpmnService: BpmnService,\r\n    private developmentMethodService: DevelopmentMethodService,\r\n    private modalService: NgbModal,\r\n    private processPatternService: ProcessPatternService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.modeler = this.bpmnService.getBmProcessModeler();\r\n    const eventBus = this.modeler.get('eventBus');\r\n    eventBus.on('bmp.deletePattern', (event, subProcessElement) =>\r\n      this.openDeleteProcessPatternModal(subProcessElement)\r\n    );\r\n    eventBus.on('bmp.processPatterns', (event, businessObject) =>\r\n      this.openAddProcessPatternModal(businessObject)\r\n    );\r\n    eventBus.on('bmp.removeMethod', (event, methodElement) =>\r\n      this.removeMethodFromTask(methodElement)\r\n    );\r\n    eventBus.on('bmp.selectMethod', (event, taskElement) =>\r\n      this.openSelectDevelopmentMethodModal(taskElement)\r\n    );\r\n    eventBus.on('bmp.selectPattern', (event, callActivityElement) =>\r\n      this.openSelectProcessPatternModal(callActivityElement)\r\n    );\r\n    eventBus.on('bmp.showTypes', (event, taskElement) =>\r\n      this.openShowTypesModal(taskElement)\r\n    );\r\n    eventBus.on('bmp.showMethod', (event, methodElement) =>\r\n      this.openMethodInfoModal(methodElement)\r\n    );\r\n    eventBus.on('bmp.showPattern', (event, processPatternElement) =>\r\n      this.openProcessPatternInfoModal(processPatternElement)\r\n    );\r\n    eventBus.on('bmp.summary', (event, methodElement) =>\r\n      this.openDevelopmentMethodSummary(methodElement)\r\n    );\r\n    if (this.bmProcess) {\r\n      void this.loadBmProcess(this.bmProcess, true);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.bmProcess && this.modeler) {\r\n      void this.loadBmProcess(\r\n        changes.bmProcess.currentValue,\r\n        changes.bmProcess.firstChange\r\n      );\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.modeler.attachTo(this.canvas.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.modeler.destroy();\r\n  }\r\n\r\n  private async loadBmProcess(\r\n    bmProcess: BmProcess,\r\n    firstLoad: boolean\r\n  ): Promise<void> {\r\n    if (bmProcess.processDiagram) {\r\n      this.modeler.get('taskRenderer').process = bmProcess;\r\n      this.modeler.get('taskRenderer').bmProcessService = this.bmProcessService;\r\n      await this.modeler.importXML(bmProcess.processDiagram);\r\n      if (firstLoad) {\r\n        this.bpmnService.resizeView(this.modeler);\r\n      }\r\n      this.checkWarnings();\r\n      this.checkArtifacts();\r\n    } else {\r\n      this.modeler.createDiagram();\r\n    }\r\n  }\r\n\r\n  async openAddProcessPatternModal(startingElement): Promise<void> {\r\n    this.modalProcessPatterns = null;\r\n    this.modalElement = startingElement;\r\n    const processPatterns: ProcessPatternEntry[] =\r\n      await this.processPatternService.getValidProcessPatterns(\r\n        [{ list: 'initialisation', element: null }],\r\n        []\r\n      );\r\n    this.modalProcessPatterns = this.sortByDistance(processPatterns);\r\n    this.modalReference = this.modalService.open(this.addProcessPatternModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async addProcessPattern(processPattern: ProcessPatternEntry): Promise<void> {\r\n    const pattern = await this.processPatternService.get(processPattern._id);\r\n    await this.bpmnService.appendBpmn(this.modeler, pattern, this.modalElement);\r\n    this.modeler.get('selection').deselect(this.modalElement);\r\n    await this.saveDiagram();\r\n  }\r\n\r\n  openShowTypesModal(taskElement): void {\r\n    this.modalElement = taskElement;\r\n    this.modalReference = this.modalService.open(this.showTypesModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  openDeleteProcessPatternModal(subProcessElement): void {\r\n    this.modalElement = subProcessElement;\r\n    this.modalReference = this.modalService.open(\r\n      this.deleteProcessPatternModal,\r\n      { size: 'lg' }\r\n    );\r\n  }\r\n\r\n  async deleteProcessPattern(subProcessElement): Promise<void> {\r\n    const removeDecision = (event, element): void => {\r\n      if (\r\n        element.element.businessObject &&\r\n        element.element.businessObject.method\r\n      ) {\r\n        this.bmProcess.removeDecision(element.element.id);\r\n      }\r\n    };\r\n    const eventBus = this.modeler.get('eventBus');\r\n    eventBus.on('shape.remove', removeDecision);\r\n    this.bpmnService.removeProcessPattern(this.modeler, subProcessElement);\r\n    eventBus.off('shape.remove', removeDecision);\r\n    await this.saveDiagram(this.bmProcess.decisions);\r\n  }\r\n\r\n  async openSelectDevelopmentMethodModal(taskElement): Promise<void> {\r\n    this.modalElement = taskElement;\r\n    const types = this.bpmnService.getTypesOfActivity(\r\n      this.modeler,\r\n      taskElement.id\r\n    );\r\n    const methods: DevelopmentMethodEntry[] =\r\n      await this.developmentMethodService.getValidDevelopmentMethods(\r\n        types.neededType,\r\n        types.forbiddenType\r\n      );\r\n    this.validDevelopmentMethods = this.sortByDistance(methods);\r\n    this.modalReference = this.modalService.open(\r\n      this.selectDevelopmentMethodModal,\r\n      {\r\n        size: 'lg',\r\n        beforeDismiss: () => {\r\n          this.validDevelopmentMethods = null;\r\n          return true;\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  resetSelectDevelopmentMethodModal(): void {\r\n    this.validDevelopmentMethods = null;\r\n    this.modalReference.close();\r\n  }\r\n\r\n  async selectDevelopmentMethod(\r\n    taskElement,\r\n    developmentMethod: DevelopmentMethod\r\n  ): Promise<void> {\r\n    const method = await this.developmentMethodService.get(\r\n      developmentMethod._id\r\n    );\r\n    if (!this.developmentMethodService.isCorrectlyDefined(method)) {\r\n      const modal = this.modalService.open(\r\n        DevelopmentMethodIncompleteModalComponent\r\n      );\r\n      const component: DevelopmentMethodIncompleteModalComponent =\r\n        modal.componentInstance;\r\n      component.developmentMethod = method;\r\n      return;\r\n    }\r\n    this.resetSelectDevelopmentMethodModal();\r\n    this.bmProcess.addDecision(taskElement.id, method);\r\n    this.bpmnService.selectDevelopmentMethodForProcessTask(\r\n      this.modeler,\r\n      taskElement,\r\n      method\r\n    );\r\n    await this.saveDiagram(this.bmProcess.decisions);\r\n  }\r\n\r\n  openMethodInfoModal(methodElement): void {\r\n    this.modalElement = methodElement;\r\n    this.modalDevelopmentMethod =\r\n      this.bmProcess.decisions[methodElement.id].method;\r\n    this.modalReference = this.modalService.open(this.methodInfoModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  private openDevelopmentMethodSummary(methodElement): void {\r\n    this.modalElement = methodElement;\r\n    this.modalReference = this.modalService.open(\r\n      this.developmentMethodSummaryModal,\r\n      { size: 'lg' }\r\n    );\r\n  }\r\n\r\n  async openProcessPatternInfoModal(processPatternElement): Promise<void> {\r\n    this.modalElement = processPatternElement;\r\n    this.modalProcessPattern = await this.processPatternService.get(\r\n      processPatternElement.businessObject.get('processPatternId')\r\n    );\r\n    this.modalReference = this.modalService.open(this.patternInfoModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async openSelectProcessPatternModal(callActivityElement): Promise<void> {\r\n    this.modalProcessPatterns = null;\r\n    this.modalElement = callActivityElement;\r\n    const types = this.bpmnService.getTypesOfActivity(\r\n      this.modeler,\r\n      callActivityElement.id\r\n    );\r\n    const processPatterns: ProcessPatternEntry[] =\r\n      await this.processPatternService.getValidProcessPatterns(\r\n        [...types.neededType, { list: 'generic', element: null }],\r\n        types.forbiddenType\r\n      );\r\n    this.modalProcessPatterns = this.sortByDistance(processPatterns);\r\n    this.modalReference = this.modalService.open(\r\n      this.selectProcessPatternModal,\r\n      { size: 'lg' }\r\n    );\r\n  }\r\n\r\n  async selectProcessPattern(\r\n    callActivityElement,\r\n    processPattern: ProcessPatternEntry\r\n  ): Promise<void> {\r\n    const pattern = await this.processPatternService.get(processPattern._id);\r\n    await this.bpmnService.insertProcessPatternIntoCallActivity(\r\n      this.modeler,\r\n      callActivityElement,\r\n      pattern\r\n    );\r\n    if (callActivityElement.businessObject.method) {\r\n      this.bmProcess.removeDecision(callActivityElement.id);\r\n      await this.saveDiagram(this.bmProcess.decisions);\r\n    } else {\r\n      await this.saveDiagram();\r\n    }\r\n  }\r\n\r\n  async removeMethodFromTask(methodElement): Promise<void> {\r\n    this.bpmnService.removeDevelopmentMethodFromProcessTask(\r\n      this.modeler,\r\n      methodElement\r\n    );\r\n    this.bmProcess.removeDecision(methodElement.id);\r\n    await this.saveDiagram(this.bmProcess.decisions);\r\n  }\r\n\r\n  checkWarnings(): void {\r\n    if (this.isGeneratingWarnings) {\r\n      this.wantsToGenerateWarnings = true;\r\n      return;\r\n    }\r\n    this.isGeneratingWarnings = true;\r\n\r\n    const lowWarnings: {\r\n      elementName: string;\r\n      name: string;\r\n      elementId: string;\r\n      situationalFactors: string[];\r\n    }[] = [];\r\n    const incorrectWarnings: {\r\n      elementName: string;\r\n      name: string;\r\n      elementId: string;\r\n      situationalFactors: string[];\r\n    }[] = [];\r\n\r\n    const generateWarnings = (\r\n      id: string,\r\n      elementName: 'Method' | 'Pattern',\r\n      name: string,\r\n      factors: SituationalFactor[]\r\n    ): void => {\r\n      const factorMap = SituationalFactor.createMap(factors);\r\n      const { low, incorrect } = this.bmProcess.checkMatch(factorMap);\r\n      if (low.length > 0) {\r\n        lowWarnings.push({\r\n          elementName,\r\n          name,\r\n          elementId: id,\r\n          situationalFactors: low,\r\n        });\r\n      }\r\n      if (incorrect.length > 0) {\r\n        incorrectWarnings.push({\r\n          elementName,\r\n          name,\r\n          elementId: id,\r\n          situationalFactors: incorrect,\r\n        });\r\n      }\r\n    };\r\n\r\n    const generateMethodWarnings = (element: any): void => {\r\n      const method = this.bmProcess.decisions[element.id].method;\r\n      generateWarnings(\r\n        element.id,\r\n        'Method',\r\n        method.name,\r\n        method.situationalFactors.map((factor) => factor.element)\r\n      );\r\n    };\r\n\r\n    const generatePatternWarnings = (\r\n      element: any,\r\n      pattern: ProcessPattern\r\n    ): void => {\r\n      generateWarnings(\r\n        element.id,\r\n        'Pattern',\r\n        pattern.name,\r\n        pattern.situationalFactors.map((factor) => factor.element)\r\n      );\r\n    };\r\n\r\n    const activities = this.bpmnService.getActivitiesWithMethod(this.modeler);\r\n    activities.forEach((activity) => generateMethodWarnings(activity));\r\n\r\n    const patternElements = this.bpmnService.getPatterns(this.modeler);\r\n    this.processPatternService\r\n      .getProcessPatterns(\r\n        patternElements.map((element) =>\r\n          element.businessObject.get('processPatternId')\r\n        )\r\n      )\r\n      .then((dbPatterns) => {\r\n        const dbPatternsMap: { [id: string]: ProcessPattern } = {};\r\n        dbPatterns.forEach(\r\n          (dbPattern) => (dbPatternsMap[dbPattern._id] = dbPattern)\r\n        );\r\n        patternElements.forEach((patternElement) =>\r\n          generatePatternWarnings(\r\n            patternElement,\r\n            dbPatternsMap[patternElement.businessObject.get('processPatternId')]\r\n          )\r\n        );\r\n        if (!this.wantsToGenerateWarnings) {\r\n          this.lowWarnings = lowWarnings;\r\n          this.incorrectWarnings = incorrectWarnings;\r\n        }\r\n      })\r\n      .finally(() => {\r\n        this.isGeneratingWarnings = false;\r\n        if (this.wantsToGenerateWarnings) {\r\n          this.wantsToGenerateWarnings = false;\r\n          this.checkWarnings();\r\n        }\r\n      });\r\n  }\r\n\r\n  selectElement(id: string): void {\r\n    this.bpmnService.focusElement(this.modeler, id);\r\n    this.canvas.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  async updateDecisions(value: any): Promise<void> {\r\n    this.bmProcess.decisions[this.modalElement.id].update(value);\r\n    await this.saveDiagram(this.bmProcess.decisions);\r\n  }\r\n\r\n  saveDiagram(\r\n    decisions: { [elementId: string]: Decision } = undefined\r\n  ): Promise<void> {\r\n    return this.modeler.saveXML().then((result) => {\r\n      if (decisions != null) {\r\n        this.saveBmProcess.emit({\r\n          decisions,\r\n          processDiagram: result.xml,\r\n        });\r\n      } else {\r\n        this.saveBmProcess.emit({\r\n          processDiagram: result.xml,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  diagramChanged(): Promise<boolean> {\r\n    return this.modeler\r\n      .saveXML()\r\n      .then((result) => result.xml !== this.bmProcess.processDiagram);\r\n  }\r\n\r\n  sortByDistance<\r\n    T extends {\r\n      _id: string;\r\n      situationalFactors: { list: string; element?: SituationalFactorEntry }[];\r\n    }[]\r\n  >(elements: T): T {\r\n    const distanceMap: { [id: string]: number } = {};\r\n    elements.forEach(\r\n      (element) =>\r\n        (distanceMap[element._id] = this.bmProcessService.distanceToContext(\r\n          this.bmProcess,\r\n          element.situationalFactors.map((factor) => factor.element)\r\n        ))\r\n    );\r\n    return elements.sort(\r\n      (elementA, elementB) =>\r\n        distanceMap[elementA._id] - distanceMap[elementB._id]\r\n    );\r\n  }\r\n\r\n  checkArtifacts(): void {\r\n    const missingMap = this.bpmnService.checkArtifacts(\r\n      this.modeler,\r\n      this.bmProcess.decisions\r\n    );\r\n    const decisions = this.bmProcess.decisions;\r\n    const elementRegistry = this.modeler.get('elementRegistry');\r\n    const missing = Object.entries(missingMap).map(([key, value]) => {\r\n      const element = elementRegistry.get(key);\r\n      let elementName;\r\n      let name;\r\n      if (key in decisions) {\r\n        elementName = 'Method';\r\n        name = decisions[key].method.name;\r\n      } else if (element.businessObject.name) {\r\n        elementName = 'Activity';\r\n        name = element.businessObject.name;\r\n      } else {\r\n        elementName = 'Node';\r\n        name = element.type;\r\n      }\r\n      return {\r\n        artifacts: value,\r\n        elementId: key,\r\n        elementName,\r\n        name,\r\n      };\r\n    });\r\n    this.missingArtifacts = missing.filter((element) => element.artifacts);\r\n    this.unreachableActivities = missing.filter(\r\n      (element) => !element.artifacts\r\n    );\r\n  }\r\n}\r\n","<ng-template #addProcessPatternModal let-d=\"dismiss\" let-c=\"close\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Add Method Pattern</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-process-patterns-selection-form\r\n      [processPatterns]=\"modalProcessPatterns\"\r\n      [contextSituationalFactors]=\"bmProcess.situationalFactors\"\r\n      (selectProcessPattern)=\"addProcessPattern($event); c()\"\r\n    ></app-process-patterns-selection-form>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #selectProcessPatternModal let-d=\"dismiss\" let-c=\"close\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Select Method Pattern</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-process-patterns-selection-form\r\n      [processPatterns]=\"modalProcessPatterns\"\r\n      [contextSituationalFactors]=\"bmProcess.situationalFactors\"\r\n      (selectProcessPattern)=\"selectProcessPattern(modalElement, $event); c()\"\r\n    ></app-process-patterns-selection-form>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #showTypesModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Show types of {{ modalElement.businessObject.name }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"alert alert-info\">\r\n      Types that are defined for this activity.\r\n    </div>\r\n    <div class=\"alert alert-info\" *ngIf=\"modalElement.businessObject.inherit\">\r\n      Types are inherited from parent element.\r\n    </div>\r\n    <ng-container *ngIf=\"!modalElement.businessObject.inherit\">\r\n      <h5>Needed</h5>\r\n      <ul\r\n        class=\"list-group\"\r\n        *ngIf=\"modalElement.businessObject.get('neededType').length > 0\"\r\n      >\r\n        <li\r\n          class=\"list-group-item\"\r\n          *ngFor=\"let element of modalElement.businessObject.get('neededType')\"\r\n        >\r\n          <span *ngIf=\"element.element\"\r\n            >{{ element.element.name }} ({{ $any(element.list) | list }})</span\r\n          >\r\n          <span *ngIf=\"!element.element\">{{ $any(element.list) | list }}</span>\r\n        </li>\r\n      </ul>\r\n      <div\r\n        class=\"alert alert-info\"\r\n        *ngIf=\"modalElement.businessObject.get('neededType').length === 0\"\r\n      >\r\n        No needed types defined for this activity.\r\n      </div>\r\n      <h5 class=\"mt-3\">Forbidden</h5>\r\n      <ul\r\n        class=\"list-group\"\r\n        *ngIf=\"modalElement.businessObject.get('forbiddenType').length > 0\"\r\n      >\r\n        <li\r\n          class=\"list-group-item\"\r\n          *ngFor=\"\r\n            let element of modalElement.businessObject.get('forbiddenType')\r\n          \"\r\n        >\r\n          <span *ngIf=\"element.element\"\r\n            >{{ $any(element.list) | list }} {{ element.element.name }}</span\r\n          >\r\n          <span *ngIf=\"!element.element\">{{ $any(element.list) | list }}</span>\r\n        </li>\r\n      </ul>\r\n      <div\r\n        class=\"alert alert-info\"\r\n        *ngIf=\"modalElement.businessObject.get('forbiddenType').length === 0\"\r\n      >\r\n        No forbidden types defined for this activity.\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #deleteProcessPatternModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Delete Method Pattern {{ modalElement.businessObject.name }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"alert alert-warning\">\r\n      Deleting the Method Pattern {{ modalElement.businessObject.name }}.\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      class=\"btn btn-danger btn-block\"\r\n      (click)=\"deleteProcessPattern(modalElement); d()\"\r\n    >\r\n      Delete Method Pattern\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #selectDevelopmentMethodModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Select Method Building Block for {{ modalElement.businessObject.name }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-development-methods-selection-form\r\n      [contextSituationalFactors]=\"bmProcess.situationalFactors\"\r\n      [developmentMethods]=\"validDevelopmentMethods\"\r\n      (selectDevelopmentMethod)=\"selectDevelopmentMethod(modalElement, $event)\"\r\n    ></app-development-methods-selection-form>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #methodInfoModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Overview of Activity {{ modalElement.businessObject.name }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-method-info\r\n      [bmProcess]=\"bmProcess\"\r\n      [contextDomains]=\"bmProcess.domains\"\r\n      [contextSituationalFactors]=\"bmProcess.situationalFactors\"\r\n      [developmentMethod]=\"modalDevelopmentMethod\"\r\n      [decision]=\"bmProcess.decisions[modalElement.id]\"\r\n      (updateDecisions)=\"updateDecisions($event)\"\r\n    ></app-method-info>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #developmentMethodSummaryModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Summary of Activity {{ modalElement.businessObject.name }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-development-method-summary\r\n      [decision]=\"bmProcess.decisions[modalElement.id]\"\r\n    ></app-development-method-summary>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #patternInfoModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 *ngIf=\"modalElement.businessObject.taskName\" class=\"modal-title\">\r\n      Overview of Activity {{ modalElement.businessObject.taskName }}\r\n    </h4>\r\n    <h4 *ngIf=\"!modalElement.businessObject.taskName\" class=\"modal-title\">\r\n      Overview of Pattern {{ modalProcessPattern.name }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-pattern-info\r\n      [contextSituationalFactors]=\"bmProcess.situationalFactors\"\r\n      [processPattern]=\"modalProcessPattern\"\r\n    ></app-pattern-info>\r\n  </div>\r\n</ng-template>\r\n\r\n<div #canvas class=\"border\" style=\"height: 500px\"></div>\r\n<div class=\"container\">\r\n  <div class=\"p-3 bg-white rounded shadow-sm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-4\"><strong>Legend:</strong></div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <i class=\"fas fa-list bpmn-legend-icon\"></i> Show types\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"fas fa-clipboard-check bpmn-legend-icon\"></i> Show Method\r\n        Building Block summary\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"fas fa-info-circle bpmn-legend-icon\"></i> Show Method Pattern\r\n        details\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <i class=\"fas fa-database bpmn-legend-icon\"></i> Select Method Building\r\n        Block\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"fas fa-clipboard-list bpmn-legend-icon\"></i> Edit Method\r\n        Building Block details\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"far fa-trash-alt bpmn-legend-icon\"></i> Remove Method Building\r\n        Block from task / Delete Method Pattern\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <i class=\"fas fa-sign-in-alt bpmn-legend-icon\"></i> Insert Method\r\n        Pattern\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"far fa-plus-square bpmn-legend-icon\"></i> Add Method Pattern\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Controls</h6>\r\n    <button class=\"btn btn-primary\" (click)=\"saveDiagram()\">\r\n      Save Diagram\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Warnings</h6>\r\n    <div *ngIf=\"isGeneratingWarnings\" class=\"alert alert-info mb-0\">\r\n      Loading warnings\r\n    </div>\r\n    <ngb-accordion *ngIf=\"!isGeneratingWarnings\">\r\n      <ngb-panel title=\"Low value Warnings\">\r\n        <ng-template ngbPanelContent>\r\n          <div *ngIf=\"lowWarnings.length === 0\" class=\"alert alert-success\">\r\n            There are no warnings about situational factors with a too low value\r\n          </div>\r\n          <ul *ngIf=\"lowWarnings.length > 0\">\r\n            <li *ngFor=\"let warning of lowWarnings\">\r\n              {{ warning.elementName }}\r\n              <a [routerLink]=\"[]\" (click)=\"selectElement(warning.elementId)\">{{\r\n                warning.name\r\n              }}</a>\r\n              has a too low value for the following factors\r\n              <ul>\r\n                <li *ngFor=\"let factor of warning.situationalFactors\">\r\n                  {{ factor }}\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </ng-template>\r\n      </ngb-panel>\r\n      <ngb-panel title=\"Incorrect value Warnings\">\r\n        <ng-template ngbPanelContent>\r\n          <div\r\n            *ngIf=\"incorrectWarnings.length === 0\"\r\n            class=\"alert alert-success mb-0\"\r\n          >\r\n            There are no warnings about situational factors with an incorrect\r\n            value\r\n          </div>\r\n          <ul *ngIf=\"incorrectWarnings.length > 0\">\r\n            <li *ngFor=\"let warning of incorrectWarnings\">\r\n              {{ warning.elementName }}\r\n              <a [routerLink]=\"[]\" (click)=\"selectElement(warning.elementId)\">{{\r\n                warning.name\r\n              }}</a>\r\n              has an incorrect value for the following factors\r\n              <ul>\r\n                <li *ngFor=\"let factor of warning.situationalFactors\">\r\n                  {{ factor }}\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </ng-template>\r\n      </ngb-panel>\r\n      <ngb-panel title=\"Missing Artifacts\">\r\n        <ng-template ngbPanelContent>\r\n          <div\r\n            *ngIf=\"missingArtifacts.length === 0\"\r\n            class=\"alert alert-success mb-0\"\r\n          >\r\n            There are no warnings about missing artifacts\r\n          </div>\r\n          <ul *ngIf=\"missingArtifacts.length > 0\">\r\n            <li *ngFor=\"let warning of missingArtifacts\">\r\n              {{ warning.elementName }}\r\n              <a [routerLink]=\"[]\" (click)=\"selectElement(warning.elementId)\">{{\r\n                warning.name\r\n              }}</a>\r\n              is missing the following Artifacts\r\n              <ul>\r\n                <li *ngFor=\"let artifact of warning.artifacts\">\r\n                  {{ artifact.name }}\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </ng-template>\r\n      </ngb-panel>\r\n      <ngb-panel title=\"Unreachable\">\r\n        <ng-template ngbPanelContent>\r\n          <div\r\n            *ngIf=\"unreachableActivities.length === 0\"\r\n            class=\"alert alert-success mb-0\"\r\n          >\r\n            There are no warnings about unreachable methods or activities\r\n          </div>\r\n          <ul *ngIf=\"unreachableActivities.length > 0\">\r\n            <li *ngFor=\"let warning of unreachableActivities\">\r\n              {{ warning.elementName }}\r\n              <a [routerLink]=\"[]\" (click)=\"selectElement(warning.elementId)\">{{\r\n                warning.name\r\n              }}</a>\r\n              can not be reached.\r\n            </li>\r\n          </ul>\r\n        </ng-template>\r\n      </ngb-panel>\r\n    </ngb-accordion>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { BmProcessService } from '../../development-process-registry/bm-process/bm-process.service';\r\nimport { DiagramComponentInterface } from '../shared/diagram-component-interface';\r\nimport { BmProcessDiagramComponent } from '../bm-process-diagram/bm-process-diagram.component';\r\nimport { BmProcessLoaderService } from '../shared/bm-process-loader.service';\r\nimport { BmProcess } from '../../development-process-registry/bm-process/bm-process';\r\nimport { Domain } from '../../development-process-registry/knowledge/domain';\r\nimport { SelectionInit } from '../../development-process-registry/development-method/selection';\r\nimport { SituationalFactorInit } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\nimport { Decision } from '../../development-process-registry/bm-process/decision';\r\n\r\n@Component({\r\n  selector: 'app-bm-process',\r\n  templateUrl: './bm-process.component.html',\r\n  styleUrls: ['./bm-process.component.css'],\r\n  providers: [BmProcessLoaderService],\r\n})\r\nexport class BmProcessComponent implements OnInit, DiagramComponentInterface {\r\n  @ViewChild(BmProcessDiagramComponent)\r\n  diagramComponent: BmProcessDiagramComponent;\r\n\r\n  private previousInitial = null;\r\n\r\n  constructor(\r\n    private bmProcessLoaderService: BmProcessLoaderService,\r\n    private bmProcessService: BmProcessService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.bmProcessLoaderService.loaded.subscribe(() => {\r\n      if (this.previousInitial === true && this.bmProcess.initial === false) {\r\n        document.body.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n      this.previousInitial = this.bmProcess.initial;\r\n    });\r\n  }\r\n\r\n  async finishInitialization(): Promise<void> {\r\n    await this.bmProcessService.finishInitialization(this.bmProcess._id);\r\n  }\r\n\r\n  async updateDomains(domains: Domain[]): Promise<void> {\r\n    await this.bmProcessService.updateDomains(this.bmProcess._id, domains);\r\n  }\r\n\r\n  async updateSituationalFactors(\r\n    situationalFactors: SelectionInit<SituationalFactorInit>[]\r\n  ): Promise<void> {\r\n    await this.bmProcessService.updateSituationalFactors(\r\n      this.bmProcess._id,\r\n      situationalFactors\r\n    );\r\n  }\r\n\r\n  async saveBmProcess(\r\n    processDiagram: string,\r\n    decisions?: { [elementId: string]: Decision }\r\n  ): Promise<void> {\r\n    await this.bmProcessService.saveBmProcessDiagram(\r\n      this.bmProcess._id,\r\n      processDiagram,\r\n      decisions\r\n    );\r\n  }\r\n\r\n  async diagramChanged(): Promise<boolean> {\r\n    if (this.diagramComponent == null) {\r\n      return false;\r\n    }\r\n    return this.diagramComponent.diagramChanged();\r\n  }\r\n\r\n  saveDiagram(): Promise<void> {\r\n    return this.diagramComponent.saveDiagram();\r\n  }\r\n\r\n  get bmProcess(): BmProcess {\r\n    return this.bmProcessLoaderService.bmProcess;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"bmProcess\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">{{ bmProcess.name }}</a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"bmProcess\" role=\"main\">\r\n  <div\r\n    class=\"alert alert-info container mt-3\"\r\n    role=\"alert\"\r\n    *ngIf=\"!bmProcess.initial\"\r\n  >\r\n    <p>\r\n      On this page it is possible to create a Business Model Development Method.\r\n      You already defined the development context on the bottom of the page,\r\n      which will later be used to check situational factors. Now start with the\r\n      definition of the Method by clicking on the start event and then, on the\r\n      add button to select a Method Pattern as a starting point.\r\n    </p>\r\n\r\n    <p>\r\n      After that, you can append more patterns when selecting the added Method\r\n      Pattern or insert Method Patterns into activities by selecting the\r\n      activity and then selecting the insert icon. This is only possible if the\r\n      corresponding activity has a plus symbol and is thus a call activity.\r\n      Otherwise it is only possible to insert Method Building Blocks into the\r\n      activity by selecting the database icon when an activity is selected.\r\n    </p>\r\n\r\n    <p class=\"mb-0\">\r\n      Additionally, it is possible to get an overview of an inserted Method\r\n      Building Block by selecting the corresponding activity and selecting the\r\n      info icon. There it is also possible to select which groups of artifacts\r\n      and stakeholders to use and which concrete Method Elements to use.\r\n    </p>\r\n  </div>\r\n\r\n  <app-bm-process-diagram\r\n    *ngIf=\"!bmProcess.initial\"\r\n    [bmProcess]=\"bmProcess\"\r\n    (saveBmProcess)=\"saveBmProcess($event.processDiagram, $event.decisions)\"\r\n  ></app-bm-process-diagram>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"my-3 alert alert-info\" *ngIf=\"bmProcess.initial\">\r\n      Start by defining the context of your business model.\r\n    </div>\r\n\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <h6 class=\"border-bottom border-gray pb-2 mb-0\">Context</h6>\r\n      <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n        <h6 class=\"border-bottom border-gray pb-2\">Domain</h6>\r\n        <div class=\"alert alert-info\">\r\n          Select the domains that are related to your business model. They are\r\n          later used to select fitting canvas building blocks.\r\n        </div>\r\n        <div class=\"text-muted\">\r\n          <app-domains-selection-form\r\n            [domains]=\"bmProcess.domains\"\r\n            (submitDomainsForm)=\"updateDomains($event.value)\"\r\n          ></app-domains-selection-form>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-3 p-3 bg-white rounded shadow-sm\">\r\n        <h6 class=\"border-bottom border-gray pb-2\">Situational Factors</h6>\r\n        <div class=\"alert alert-info\">\r\n          Select situational factors to describe the current situation of your\r\n          company, problem, market, etc. They are later used to help you to\r\n          select fitting method patterns and building blocks.\r\n        </div>\r\n        <div class=\"text-muted\">\r\n          <app-situational-factors-selection-form\r\n            [situationalFactors]=\"bmProcess.situationalFactors\"\r\n            (submitSituationalFactorsForm)=\"\r\n              updateSituationalFactors($event.value)\r\n            \"\r\n          ></app-situational-factors-selection-form>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        *ngIf=\"bmProcess.initial\"\r\n        (click)=\"finishInitialization()\"\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block btn-primary mt-3\"\r\n      >\r\n        Finish definition of the context\r\n      </button>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  BmProcess,\r\n  BmProcessEntry,\r\n  BmProcessInit,\r\n} from '../../development-process-registry/bm-process/bm-process';\r\nimport { BmProcessService } from '../../development-process-registry/bm-process/bm-process.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ELEMENT_SERVICE, ListService } from '../../shared/list.service';\r\n\r\n@Component({\r\n  selector: 'app-bm-processes',\r\n  templateUrl: './bm-processes.component.html',\r\n  styleUrls: ['./bm-processes.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: BmProcessService },\r\n  ],\r\n})\r\nexport class BmProcessesComponent {\r\n  bmProcessForm = this.fb.group({\r\n    name: this.fb.control('', Validators.required),\r\n  });\r\n\r\n  modalBmProcess: BmProcessEntry;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteBmProcessModal', { static: true })\r\n  deleteBmProcessModal: unknown;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private listService: ListService<BmProcess, BmProcessInit>,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  openDeleteBmProcessModal(bmProcess: BmProcessEntry): void {\r\n    this.modalBmProcess = bmProcess;\r\n    this.modalReference = this.modalService.open(this.deleteBmProcessModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async deleteBmProcess(id: string): Promise<void> {\r\n    await this.listService.delete(id);\r\n  }\r\n\r\n  async addBmProcess(bmProcessForm: FormGroup): Promise<void> {\r\n    await this.listService.add({ name: bmProcessForm.value.name });\r\n    this.bmProcessForm.reset();\r\n  }\r\n\r\n  get bmProcessesList(): BmProcessEntry[] {\r\n    return this.listService.elements;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.listService.noResults;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.listService.loading;\r\n  }\r\n\r\n  get reloading(): boolean {\r\n    return this.listService.reloading;\r\n  }\r\n}\r\n","<ng-template #deleteBmProcessModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"deleteBmProcess(modalBmProcess._id); c()\"\r\n  >\r\n    <div modalTitle>\r\n      Delete Business Model Development Method {{ modalBmProcess.name }}\r\n    </div>\r\n    You are deleting the business model development method\r\n    {{ modalBmProcess.name }}. This can not be undone. This action has no effect\r\n    on running methods.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\"\r\n      >Business Model Development Methods</a\r\n    >\r\n    <a\r\n      *ngFor=\"let bmProcess of bmProcessesList\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['bmprocessview', bmProcess._id]\"\r\n      >{{ bmProcess.name }}</a\r\n    >\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create Business Model Development Methods from Method Patterns and Method\r\n    Building Blocks.\r\n  </div>\r\n\r\n  <app-list-wrapper\r\n    listTitle=\"Business Model Development Methods\"\r\n    [loading]=\"loading\"\r\n    [reloading]=\"reloading\"\r\n    [noResults]=\"noResults\"\r\n  >\r\n    <div noResults>No Business Model Development Methods defined.</div>\r\n    <ul results class=\"list-group\">\r\n      <li\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-baseline\r\n        \"\r\n        *ngFor=\"let bmProcess of bmProcessesList\"\r\n      >\r\n        <div>\r\n          <span>{{ bmProcess.name }}</span>\r\n        </div>\r\n        <div>\r\n          <a\r\n            [routerLink]=\"['bmprocessview', bmProcess._id]\"\r\n            type=\"button\"\r\n            class=\"btn btn-dark btn-xs mr-1\"\r\n            >View</a\r\n          >\r\n          <button\r\n            (click)=\"openDeleteBmProcessModal(bmProcess)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </app-list-wrapper>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Add Business Model Development Method\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"bmProcessForm\"\r\n        (ngSubmit)=\"addBmProcess(bmProcessForm)\"\r\n      >\r\n        <div class=\"form-group row\">\r\n          <label for=\"name\" class=\"col-sm-4 col-form-label\"\r\n            >Business Model Development Method Name</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!bmProcessForm.valid\"\r\n            >\r\n              Add Business Model Development Method\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { is } from 'bpmn-js/lib/util/ModelUtil';\r\n\r\nexport default class BmProcessPatternsContextPad {\r\n  static $inject = ['contextPad', 'eventBus'];\r\n\r\n  constructor(contextPad, private eventBus) {\r\n    contextPad.registerProvider(this);\r\n  }\r\n\r\n  getContextPadEntries(element) {\r\n    if (is(element, 'bpmn:Activity')) {\r\n      return {\r\n        'bmdl.types': {\r\n          group: 'edit',\r\n          className:\r\n            'bpmn-icon-service ' +\r\n            (element.businessObject.get('neededType').length > 0 ||\r\n            element.businessObject.inherit\r\n              ? 'text-success'\r\n              : 'text-danger'),\r\n          title: 'Manage types',\r\n          action: {\r\n            click: () =>\r\n              this.eventBus.fire('bmdl.types', element.businessObject),\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n","import ContextPadProvider from 'bpmn-js/lib/features/context-pad/ContextPadProvider';\r\n\r\nexport default class BmProcessPatternsOverrideContextPadProvider extends ContextPadProvider {\r\n  getContextPadEntries(element) {\r\n    const actions = super.getContextPadEntries(element);\r\n    delete actions['append.intermediate-event'];\r\n    return actions;\r\n  }\r\n}\r\n","import PaletteProvider from 'bpmn-js/lib/features/palette/PaletteProvider';\r\n\r\nexport default class BmProcessPatternsPaletteProvider extends PaletteProvider {\r\n  getPaletteEntries(element) {\r\n    const actionNames = [\r\n      'hand-tool',\r\n      'lasso-tool',\r\n      'space-tool',\r\n      'global-connect-tool',\r\n      'create.start-event',\r\n      'create.end-event',\r\n      'create.exclusive-gateway',\r\n      'create.task',\r\n      'tool-separator',\r\n    ];\r\n    const actions = super.getPaletteEntries(element);\r\n    const newActions = {};\r\n    for (const name of actionNames) {\r\n      newActions[name] = actions[name];\r\n    }\r\n    return newActions;\r\n  }\r\n}\r\n","import ReplaceMenuProvider from 'bpmn-js/lib/features/popup-menu/ReplaceMenuProvider';\r\n\r\nexport default class BmProcessPatternsReplaceMenuProvider extends ReplaceMenuProvider {\r\n  _createEntries(element, replaceOptions) {\r\n    const allowedTargetTypes = new Set<string>([\r\n      'bpmn:StartEvent',\r\n      'bpmn:EndEvent',\r\n      'bpmn:ExclusiveGateway',\r\n      'bpmn:ParallelGateway',\r\n      'bpmn:Task',\r\n      'bpmn:CallActivity',\r\n    ]);\r\n    replaceOptions = replaceOptions.filter((option) => {\r\n      if (option.target.eventDefinitionType) {\r\n        return allowedTargetTypes.has(option.target.eventDefinitionType);\r\n      }\r\n      return allowedTargetTypes.has(option.target.type);\r\n    });\r\n    return super._createEntries(element, replaceOptions);\r\n  }\r\n\r\n  _createSequenceFlowEntries() {\r\n    return [];\r\n  }\r\n\r\n  _getLoopEntries() {\r\n    return [];\r\n  }\r\n}\r\n","import BmProcessPatternsContextPad from './BmProcessPatternsContextPad';\r\nimport BmProcessPatternsOverrideContextPadProvider from './BmProcessPatternsOverrideContextPadProvider';\r\nimport BmProcessPatternsPaletteProvider from './BmProcessPatternsPaletteProvider';\r\nimport BmProcessPatternsReplaceMenuProvider from './BmProcessPatternsReplaceMenuProvider';\r\nimport ContextPadModule from 'diagram-js/lib/features/context-pad';\r\nimport CoreModule from 'bpmn-js/lib/core';\r\nimport ModelingModule from 'bpmn-js/lib/features/modeling';\r\nimport PaletteModule from 'bpmn-js/lib/features/palette';\r\n\r\nexport default {\r\n  __depends__: [ContextPadModule, CoreModule, ModelingModule, PaletteModule],\r\n  __init__: [\r\n    'bmProcessPatternsContextPad',\r\n    'paletteProvider',\r\n    'replaceMenuProvider',\r\n  ],\r\n  bmProcessPatternsContextPad: ['type', BmProcessPatternsContextPad],\r\n  contextPadProvider: ['type', BmProcessPatternsOverrideContextPadProvider],\r\n  paletteProvider: ['type', BmProcessPatternsPaletteProvider],\r\n  replaceMenuProvider: ['type', BmProcessPatternsReplaceMenuProvider],\r\n};\r\n","import { is } from 'bpmn-js/lib/util/ModelUtil';\r\n\r\nexport default class BmProcessContextPadProvider {\r\n  static $inject = ['contextPad', 'eventBus'];\r\n\r\n  constructor(contextPad, private eventBus) {\r\n    contextPad.registerProvider(this);\r\n  }\r\n\r\n  getContextPadEntries(element) {\r\n    const controls = {};\r\n    if (\r\n      (is(element, 'bpmn:SubProcess') &&\r\n        is(element.parent, 'bpmn:SubProcess')) ||\r\n      is(element, 'bpmn:Task') ||\r\n      is(element, 'bpmn:CallActivity')\r\n    ) {\r\n      controls['bmp.showTypes'] = {\r\n        group: 'info',\r\n        className: 'fas fa-list font-bpmn-adaption',\r\n        title: 'Show types',\r\n        action: {\r\n          click: () => this.eventBus.fire('bmp.showTypes', element),\r\n        },\r\n      };\r\n    }\r\n    if (is(element, 'bpmn:SubProcess')) {\r\n      controls['bmp.showPattern'] = {\r\n        group: 'info',\r\n        className: 'fas fa-info-circle font-bpmn-adaption',\r\n        title: 'Show Method Pattern details',\r\n        action: {\r\n          click: () => this.eventBus.fire('bmp.showPattern', element),\r\n        },\r\n      };\r\n      controls['bmp.deletePattern'] = {\r\n        group: 'edit',\r\n        className: 'far fa-trash-alt font-bpmn-adaption',\r\n        title: 'Delete Method Pattern',\r\n        action: {\r\n          click: () => this.eventBus.fire('bmp.deletePattern', element),\r\n        },\r\n      };\r\n    }\r\n    if (\r\n      (is(element, 'bpmn:StartEvent') || is(element, 'bpmn:SubProcess')) &&\r\n      element.businessObject.get('outgoing').length === 0\r\n    ) {\r\n      controls['bmp.processPatterns'] = {\r\n        group: 'edit',\r\n        className: 'far fa-plus-square font-bpmn-adaption',\r\n        title: 'Add Method Pattern',\r\n        action: {\r\n          click: () => this.eventBus.fire('bmp.processPatterns', element),\r\n        },\r\n      };\r\n    }\r\n    if (is(element, 'bpmn:Task') || is(element, 'bpmn:CallActivity')) {\r\n      controls['bmp.selectMethod'] = {\r\n        group: 'edit',\r\n        className: 'fas fa-database font-bpmn-adaption',\r\n        title: 'Select Method Building Block',\r\n        action: {\r\n          click: () => this.eventBus.fire('bmp.selectMethod', element),\r\n        },\r\n      };\r\n      if (element.businessObject.method) {\r\n        controls['bmp.showMethod'] = {\r\n          group: 'edit',\r\n          className: 'fas fa-clipboard-list font-bpmn-adaption',\r\n          title: 'Edit Method Building Block details',\r\n          action: {\r\n            click: () => this.eventBus.fire('bmp.showMethod', element),\r\n          },\r\n        };\r\n        controls['bmp.summary'] = {\r\n          group: 'info',\r\n          className: 'fas fa-clipboard-check font-bpmn-adaption',\r\n          title: 'Show Method Building Block summary',\r\n          action: {\r\n            click: () => this.eventBus.fire('bmp.summary', element),\r\n          },\r\n        };\r\n        controls['bmp.removeMethod'] = {\r\n          group: 'edit',\r\n          className: 'far fa-trash-alt font-bpmn-adaption',\r\n          title: 'Remove Method Building Block from task',\r\n          action: {\r\n            click: () => this.eventBus.fire('bmp.removeMethod', element),\r\n          },\r\n        };\r\n      }\r\n    }\r\n    if (is(element, 'bpmn:CallActivity')) {\r\n      controls['bmp.selectPattern'] = {\r\n        group: 'edit',\r\n        className: 'fas fa-sign-in-alt font-bpmn-adaption',\r\n        title: 'Insert Method Pattern',\r\n        action: {\r\n          click: () => this.eventBus.fire('bmp.selectPattern', element),\r\n        },\r\n      };\r\n    }\r\n    return controls;\r\n  }\r\n}\r\n","export default class BmProcessLabelEditing {\r\n  private static readonly PRIORITY = 1500;\r\n\r\n  static $inject = ['eventBus'];\r\n\r\n  constructor(private eventBus) {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.eventBus.on(\r\n      'element.dblclick',\r\n      BmProcessLabelEditing.PRIORITY,\r\n      () => false\r\n    );\r\n  }\r\n}\r\n","import PaletteProvider from 'bpmn-js/lib/features/palette/PaletteProvider';\r\n\r\nexport default class BmProcessPaletteProvider extends PaletteProvider {\r\n  getPaletteEntries(element) {\r\n    const actions = super.getPaletteEntries(element);\r\n    return {\r\n      'hand-tool': actions['hand-tool'],\r\n      'space-tool': actions['space-tool'],\r\n      'lasso-tool': actions['lasso-tool'],\r\n    };\r\n  }\r\n}\r\n","import RuleProvider from 'diagram-js/lib/features/rules/RuleProvider';\r\n\r\nexport default class BmProcessRuleProvider extends RuleProvider {\r\n  private static readonly PRIORITY = 1500;\r\n\r\n  init() {\r\n    this.addRule('connection.reconnect', (context): false | undefined => {\r\n      const currentSource = context.connection.businessObject.sourceRef;\r\n      const currentTarget = context.connection.businessObject.targetRef;\r\n      const newSource = context.source.businessObject;\r\n      const newTarget = context.target.businessObject;\r\n      if (currentSource !== newSource || currentTarget !== newTarget) {\r\n        return false;\r\n      }\r\n      return undefined;\r\n    });\r\n    this.addRule('elements.move', (context): false | undefined => {\r\n      if (context.shapes.length > 0) {\r\n        const shape = context.shapes[0];\r\n        if (context.target && context.target !== shape.parent) {\r\n          return false;\r\n        }\r\n      }\r\n      return undefined;\r\n    });\r\n  }\r\n\r\n  addRule(actions, fn) {\r\n    super.addRule(actions, BmProcessRuleProvider.PRIORITY, fn);\r\n  }\r\n}\r\n","import BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\r\nimport BpmnRenderer from 'bpmn-js/lib/draw/BpmnRenderer';\r\nimport TextRenderer from 'bpmn-js/lib/draw/TextRenderer';\r\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\r\nimport { append, attr, remove, select } from 'tiny-svg';\r\nimport { BmProcess } from '../../../development-process-registry/bm-process/bm-process';\r\nimport { BmProcessService } from '../../../development-process-registry/bm-process/bm-process.service';\r\n\r\nexport default class BmProcessTaskRenderer extends BaseRenderer {\r\n  static $inject = ['eventBus', 'bpmnRenderer', 'textRenderer'];\r\n\r\n  private static readonly HIGH_PRIORITY = 1500;\r\n\r\n  private bpmnRenderer: BpmnRenderer;\r\n  private textRenderer: TextRenderer;\r\n\r\n  private process: BmProcess = null;\r\n  private bmProcessService: BmProcessService;\r\n\r\n  constructor(eventBus, bpmnRenderer, textRenderer) {\r\n    super(eventBus, BmProcessTaskRenderer.HIGH_PRIORITY);\r\n\r\n    this.bpmnRenderer = bpmnRenderer;\r\n    this.textRenderer = textRenderer;\r\n  }\r\n\r\n  canRender(element) {\r\n    return is(element, 'bpmn:Task') || is(element, 'bpmn:CallActivity');\r\n  }\r\n\r\n  drawShape(parentNode: SVGGElement, element) {\r\n    const shape: SVGRectElement = this.bpmnRenderer.drawShape(\r\n      parentNode,\r\n      element\r\n    );\r\n    const method = element.businessObject.get('method');\r\n    if (method) {\r\n      remove(select(parentNode, 'text'));\r\n      const methodName = this.textRenderer.createText(method.name, {\r\n        box: element,\r\n        align: 'center-middle',\r\n        padding: 5,\r\n      });\r\n      append(parentNode, methodName);\r\n      if (this.process && element.id in this.process.decisions) {\r\n        const decision = this.process.decisions[element.id];\r\n        if (!this.bmProcessService.checkDecisionStepArtifacts(decision)) {\r\n          attr(shape, { stroke: 'orange', rx: 2, ry: 2 });\r\n        } else if (!decision.isComplete()) {\r\n          attr(shape, { stroke: 'gray', rx: 2, ry: 2 });\r\n        } else {\r\n          attr(shape, { stroke: 'green', rx: 0, ry: 0 });\r\n        }\r\n      } else {\r\n        attr(shape, { stroke: 'green', rx: 0, ry: 0 });\r\n      }\r\n    } else {\r\n      attr(shape, { stroke: 'red' });\r\n    }\r\n    return shape;\r\n  }\r\n\r\n  getShapePath(shape) {\r\n    return this.bpmnRenderer.getShapePath(shape);\r\n  }\r\n}\r\n","import BmProcessContextPadProvider from './BmProcessContextPadProvider';\r\nimport BmProcessLabelEditing from './BmProcessLabelEditing';\r\nimport BmProcessPaletteProvider from './BmProcessPaletteProvider';\r\nimport BmProcessRuleProvider from './BmProcessRuleProvider';\r\nimport BmProcessTaskRenderer from './BmProcessTaskRenderer';\r\nimport ContextPadModule from 'diagram-js/lib/features/context-pad';\r\nimport CoreModule from 'bpmn-js/lib/core';\r\nimport ModelingModule from 'bpmn-js/lib/features/modeling';\r\nimport PaletteModule from 'bpmn-js/lib/features/palette';\r\n\r\nexport default {\r\n  __depends__: [ContextPadModule, CoreModule, ModelingModule, PaletteModule],\r\n  __init__: [\r\n    'bmProcessLabelEditing',\r\n    'bmProcessRuleProvider',\r\n    'contextPadProvider',\r\n    'dropOnFlowBehavior',\r\n    'paletteProvider',\r\n    'taskRenderer',\r\n  ],\r\n  bmProcessLabelEditing: ['type', BmProcessLabelEditing],\r\n  bmProcessRuleProvider: ['type', BmProcessRuleProvider],\r\n  contextPadProvider: ['type', BmProcessContextPadProvider],\r\n  dropOnFlowBehavior: ['value', null],\r\n  paletteProvider: ['type', BmProcessPaletteProvider],\r\n  taskRenderer: ['type', BmProcessTaskRenderer],\r\n};\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RunningArtifact } from '../../development-process-registry/running-process/running-artifact';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-concrete-artifact-form',\r\n  templateUrl: './concrete-artifact-form.component.html',\r\n  styleUrls: ['./concrete-artifact-form.component.css'],\r\n})\r\nexport class ConcreteArtifactFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() artifact: RunningArtifact;\r\n\r\n  @Output() submitArtifactForm = new EventEmitter<FormGroup>();\r\n\r\n  artifactForm: FormGroup = this.fb.group({\r\n    identifier: ['', Validators.required],\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.changeSubscription = this.artifactForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = this.artifact.identifier !== value.identifier)\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.artifact) {\r\n      const newArtifact = changes.artifact.currentValue;\r\n      const oldArtifact = changes.artifact.previousValue;\r\n      if (!this.equalArtifacts(oldArtifact, newArtifact)) {\r\n        this.loadForm(newArtifact);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitArtifactForm.emit(this.artifactForm);\r\n  }\r\n\r\n  private loadForm(artifact: RunningArtifact): void {\r\n    if (artifact) {\r\n      this.artifactForm.setValue({ identifier: artifact.identifier });\r\n    } else {\r\n      this.artifactForm.setValue({ identifier: '' });\r\n    }\r\n  }\r\n\r\n  private equalArtifacts(\r\n    artifactA: RunningArtifact,\r\n    artifactB: RunningArtifact\r\n  ): boolean {\r\n    if (artifactA == null && artifactB == null) {\r\n      return true;\r\n    }\r\n    if (artifactA == null || artifactB == null) {\r\n      return false;\r\n    }\r\n    return artifactA.identifier === artifactB.identifier;\r\n  }\r\n}\r\n","<form [formGroup]=\"artifactForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"identifier\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"identifier\"\r\n        formControlName=\"identifier\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"artifactName\" class=\"col-sm-4 col-form-label\"\r\n      >Artifact Type</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        readonly\r\n        class=\"form-control-plaintext\"\r\n        id=\"artifactName\"\r\n        value=\"{{ artifact.artifact.name }}\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group form-row\" *ngIf=\"artifact.artifact.internalArtifact\">\r\n    <label for=\"artifactMetaModel\" class=\"col-sm-4 col-form-label\"\r\n      >Artifact Meta Model</label\r\n    >\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        readonly\r\n        class=\"form-control-plaintext\"\r\n        id=\"artifactMetaModel\"\r\n        value=\"{{ artifact.artifact.metaModel.name }}\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!artifactForm.valid\"\r\n      >\r\n        Update Artifact<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { ConcreteArtifactLoaderService } from '../shared/concrete-artifact-loader.service';\r\nimport { ConcreteArtifactService } from '../../development-process-registry/running-process/concrete-artifact.service';\r\nimport { RunningArtifact } from '../../development-process-registry/running-process/running-artifact';\r\nimport { ArtifactVersion } from '../../development-process-registry/running-process/artifact-version';\r\nimport {\r\n  ArtifactDataReference,\r\n  ArtifactDataType,\r\n} from '../../development-process-registry/running-process/artifact-data';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MetaModelService } from '../../development-process-registry/meta-model.service';\r\nimport { Router } from '@angular/router';\r\nimport { Artifact } from '../../development-process-registry/method-elements/artifact/artifact';\r\n\r\n@Component({\r\n  selector: 'app-concrete-artifact',\r\n  templateUrl: './concrete-artifact.component.html',\r\n  styleUrls: ['./concrete-artifact.component.css'],\r\n  providers: [ConcreteArtifactLoaderService],\r\n})\r\nexport class ConcreteArtifactComponent {\r\n  modalVersion: ArtifactVersion;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('showArtifactVersionModal', { static: true })\r\n  showArtifactVersionModal: unknown;\r\n\r\n  constructor(\r\n    private concreteArtifactLoaderService: ConcreteArtifactLoaderService,\r\n    private concreteArtifactService: ConcreteArtifactService,\r\n    private metaModelService: MetaModelService,\r\n    private modalService: NgbModal,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async updateIdentifier(identifier: string): Promise<void> {\r\n    await this.concreteArtifactService.updateIdentifier(\r\n      this.artifact._id,\r\n      identifier\r\n    );\r\n  }\r\n\r\n  openShowArtifactVersionModal(version: ArtifactVersion): void {\r\n    this.modalVersion = version;\r\n    this.modalReference = this.modalService.open(\r\n      this.showArtifactVersionModal,\r\n      { size: 'lg' }\r\n    );\r\n  }\r\n\r\n  viewArtifactReference(reference: ArtifactDataReference): void {\r\n    this.modalReference.close();\r\n    this.metaModelService\r\n      .getMetaModelApi(reference.type)\r\n      .view(reference, this.router, {\r\n        referenceType: 'Artifact',\r\n        artifactId: this.artifact._id,\r\n        versionId: this.artifact.versions.indexOf(this.modalVersion),\r\n      });\r\n  }\r\n\r\n  get artifact(): RunningArtifact {\r\n    return this.concreteArtifactLoaderService.artifact;\r\n  }\r\n\r\n  getArtifactDataTypeString(): ArtifactDataType {\r\n    return ArtifactDataType.STRING;\r\n  }\r\n\r\n  getArtifactDataTypeReference(): ArtifactDataType {\r\n    return ArtifactDataType.REFERENCE;\r\n  }\r\n}\r\n","<ng-template #showArtifactVersionModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Version #{{ artifact.versions.indexOf(modalVersion) + 1 }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <ng-container\r\n      *ngIf=\"getArtifactDataTypeString() === modalVersion.data.type\"\r\n    >\r\n      <h5>Note</h5>\r\n      <quill-view [content]=\"modalVersion.data.data\"></quill-view>\r\n    </ng-container>\r\n    <ng-container\r\n      *ngIf=\"getArtifactDataTypeReference() === modalVersion.data.type\"\r\n    >\r\n      <h5>Reference</h5>\r\n      This version points on another object in the database.\r\n      <button\r\n        class=\"btn btn-xs btn-primary\"\r\n        (click)=\"viewArtifactReference(modalVersion.data.data)\"\r\n      >\r\n        View\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"artifact\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'concreteArtifacts']\">\r\n      Concrete Artifacts\r\n    </a>\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">{{ artifact.identifier }}</a>\r\n  </nav>\r\n</div>\r\n\r\n<main class=\"container\" *ngIf=\"artifact\">\r\n  <div class=\"alert alert-info mt-3\" role=\"alert\">\r\n    Update an artifact and view it.\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Artifact</h6>\r\n    <app-concrete-artifact-form\r\n      [artifact]=\"artifact\"\r\n      (submitArtifactForm)=\"updateIdentifier($event.value.identifier)\"\r\n    ></app-concrete-artifact-form>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Versions</h6>\r\n    <ul class=\"list-group\" *ngIf=\"artifact.versions.length > 0\">\r\n      <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"let version of artifact.versions; let index = index\"\r\n      >\r\n        <a [routerLink]=\"[]\" (click)=\"openShowArtifactVersionModal(version)\">\r\n          Version #{{ index + 1 }}\r\n        </a>\r\n        &ndash; Imported from {{ version.importName }}\r\n        &ndash;\r\n        {{ version.time | date: 'short' }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  RunningArtifact,\r\n  RunningArtifactEntry,\r\n  RunningArtifactInit,\r\n} from '../../development-process-registry/running-process/running-artifact';\r\nimport { ConcreteArtifactService } from '../../development-process-registry/running-process/concrete-artifact.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ELEMENT_SERVICE, ListService } from '../../shared/list.service';\r\n\r\n@Component({\r\n  selector: 'app-concrete-artifacts',\r\n  templateUrl: './concrete-artifacts.component.html',\r\n  styleUrls: ['./concrete-artifacts.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: ConcreteArtifactService },\r\n  ],\r\n})\r\nexport class ConcreteArtifactsComponent {\r\n  modalArtifact: RunningArtifactEntry;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteArtifactModal', { static: true })\r\n  deleteArtifactModal: unknown;\r\n\r\n  constructor(\r\n    private listService: ListService<RunningArtifact, RunningArtifactInit>,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  openDeleteArtifactModal(artifact: RunningArtifactEntry): void {\r\n    this.modalArtifact = artifact;\r\n    this.modalReference = this.modalService.open(this.deleteArtifactModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async deleteArtifact(artifact: RunningArtifactEntry): Promise<void> {\r\n    await this.listService.delete(artifact._id);\r\n  }\r\n\r\n  getRouterLink(artifact: RunningArtifactEntry): string[] {\r\n    return ['detail', artifact._id];\r\n  }\r\n\r\n  get artifacts(): RunningArtifactEntry[] {\r\n    return this.listService.elements;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.listService.noResults;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.listService.loading;\r\n  }\r\n\r\n  get reloading(): boolean {\r\n    return this.listService.reloading;\r\n  }\r\n}\r\n","<ng-template #deleteArtifactModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"deleteArtifact(modalArtifact); c()\"\r\n  >\r\n    <div modalTitle>Delete Artifact {{ modalArtifact.identifier }}</div>\r\n    You are deleting the concrete artifact {{ modalArtifact.identifier }}. This\r\n    can not be undone.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Concrete Artifacts</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Artifacts that can be imported into running methods.\r\n  </div>\r\n\r\n  <app-list-wrapper\r\n    listTitle=\"Concrete Artifacts\"\r\n    [reloading]=\"reloading\"\r\n    [loading]=\"loading\"\r\n    [noResults]=\"noResults\"\r\n  >\r\n    <div noResults>No artifacts available.</div>\r\n    <ul results class=\"list-group\">\r\n      <li\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-baseline\r\n        \"\r\n        *ngFor=\"let artifact of artifacts\"\r\n      >\r\n        <div>\r\n          <span>\r\n            {{ artifact.identifier }} &ndash;\r\n            {{ artifact.artifact.name }}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <a\r\n            [routerLink]=\"getRouterLink(artifact)\"\r\n            type=\"button\"\r\n            class=\"btn btn-dark btn-xs mr-1\"\r\n          >\r\n            View\r\n          </a>\r\n          <button\r\n            (click)=\"openDeleteArtifactModal(artifact)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </app-list-wrapper>\r\n</main>\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appConfigurationFormPlaceholder]',\r\n})\r\nexport class ConfigurationFormPlaceholderDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirm-leave-modal',\r\n  templateUrl: './confirm-leave-modal.component.html',\r\n  styleUrls: ['./confirm-leave-modal.component.css'],\r\n})\r\nexport class ConfirmLeaveModalComponent {\r\n  constructor(private activeModal: NgbActiveModal) {}\r\n\r\n  close() {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  leave() {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  saveChanges() {\r\n    this.activeModal.close(true);\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">You have unsaved changes in the diagram</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n  You can stay on this page, discard them or save them.\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n    Close\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"leave()\">\r\n    Leave without saving\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveChanges()\">\r\n    Save changes\r\n  </button>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ArtifactMappingFormService } from '../shared/artifact-mapping-form.service';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport { ExecutionStepsFormValue } from '../shared/execution-steps-form.service';\r\nimport { ModuleService } from '../../development-process-registry/module-api/module.service';\r\nimport { MetaModelIdentifier } from '../../development-process-registry/meta-model-definition';\r\n\r\n@Component({\r\n  selector: 'app-development-method-artifact-mapping',\r\n  templateUrl: './development-method-artifact-mapping.component.html',\r\n  styleUrls: ['./development-method-artifact-mapping.component.css'],\r\n})\r\nexport class DevelopmentMethodArtifactMappingComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() executionStepsFormValue?: ExecutionStepsFormValue;\r\n  @Input() developmentMethod: DevelopmentMethod;\r\n  @Input() metaModel: MetaModelIdentifier;\r\n  @Input() stepNumber: number = null;\r\n\r\n  @Output() remove = new EventEmitter<void>();\r\n\r\n  artifacts: MetaModelIdentifier[] = [];\r\n\r\n  private outputChangeSubscription: Subscription;\r\n  private stepChangeSubscription: Subscription;\r\n  private groupChangeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private artifactMappingService: ArtifactMappingFormService,\r\n    private formGroupDirective: FormGroupDirective,\r\n    private moduleService: ModuleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.updateSubscriptions();\r\n    this.outputChangeSubscription = this.outputControl.valueChanges\r\n      .pipe(\r\n        tap(() => {\r\n          this.artifactMappingService.convertMappingForm(this.formGroup);\r\n          this.artifacts = [];\r\n          this.updateSubscriptions();\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.developmentMethod) {\r\n      this.updateSubscriptions();\r\n    } else if (\r\n      changes.executionStepsFormValue &&\r\n      !this.outputControl.value &&\r\n      this.stepControl.value != null\r\n    ) {\r\n      this.updateStepArtifacts(this.stepControl.value);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.outputChangeSubscription) {\r\n      this.outputChangeSubscription.unsubscribe();\r\n    }\r\n    if (this.stepChangeSubscription) {\r\n      this.stepChangeSubscription.unsubscribe();\r\n    }\r\n    if (this.groupChangeSubscription) {\r\n      this.groupChangeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  updateSubscriptions(): void {\r\n    if (this.stepChangeSubscription) {\r\n      this.stepChangeSubscription.unsubscribe();\r\n      this.stepChangeSubscription = null;\r\n    }\r\n    if (this.groupChangeSubscription) {\r\n      this.groupChangeSubscription.unsubscribe();\r\n      this.groupChangeSubscription = null;\r\n    }\r\n    if (this.outputControl.value) {\r\n      if (this.groupControl.value != null) {\r\n        this.updateGroupArtifacts(this.groupControl.value);\r\n      }\r\n      this.groupChangeSubscription = this.groupControl.valueChanges\r\n        .pipe(tap((groupNumber) => this.updateGroupArtifacts(groupNumber)))\r\n        .subscribe();\r\n    } else {\r\n      if (this.stepControl.value != null) {\r\n        this.updateStepArtifacts(this.stepControl.value);\r\n      }\r\n      this.stepChangeSubscription = this.stepControl.valueChanges\r\n        .pipe(\r\n          tap((stepNumber) => {\r\n            if (stepNumber == null) {\r\n              this.artifacts = [];\r\n            } else {\r\n              this.artifactControl.reset();\r\n              this.updateStepArtifacts(stepNumber);\r\n            }\r\n          })\r\n        )\r\n        .subscribe();\r\n    }\r\n  }\r\n\r\n  updateGroupArtifacts(groupNumber: number): void {\r\n    const group = this.developmentMethod.outputArtifacts[groupNumber];\r\n    this.artifacts = group.map((artifact) => {\r\n      if (!artifact.element || !artifact.element.metaModel) {\r\n        return {\r\n          name: 'Placeholer',\r\n          type: null,\r\n        };\r\n      }\r\n      return {\r\n        name: artifact.element.name,\r\n        type: artifact.element.metaModel.type,\r\n      };\r\n    });\r\n  }\r\n\r\n  updateStepArtifacts(stepNumber: number): void {\r\n    if (this.executionStepsFormValue != null) {\r\n      const method = this.executionStepsFormValue[stepNumber].method;\r\n      if (method != null) {\r\n        this.artifacts = method.input;\r\n      } else {\r\n        this.artifacts = [];\r\n      }\r\n    } else {\r\n      const step = this.developmentMethod.executionSteps[stepNumber];\r\n      this.artifacts = this.moduleService.getModuleMethod(\r\n        step.module,\r\n        step.method\r\n      ).input;\r\n    }\r\n  }\r\n\r\n  get formGroup(): FormGroup {\r\n    return this.formGroupDirective.control;\r\n  }\r\n\r\n  get outputControl(): FormControl {\r\n    return this.formGroup.get('output') as FormControl;\r\n  }\r\n\r\n  get stepControl(): FormControl {\r\n    return this.formGroup.get('step') as FormControl;\r\n  }\r\n\r\n  get groupControl(): FormControl {\r\n    return this.formGroup.get('group') as FormControl;\r\n  }\r\n\r\n  get artifactControl(): FormControl {\r\n    return this.formGroup.get('artifact') as FormControl;\r\n  }\r\n\r\n  artifactConformsToMetaModel(artifact: MetaModelIdentifier): boolean {\r\n    return artifact.type === this.metaModel.type;\r\n  }\r\n}\r\n","<div [formGroup]=\"formGroup\" class=\"form-row\">\r\n  <div class=\"form-group col-md\">\r\n    <label for=\"selectOutput\">To other step or output</label>\r\n    <select id=\"selectOutput\" class=\"form-control\" formControlName=\"output\">\r\n      <option [ngValue]=\"false\">Step</option>\r\n      <option [ngValue]=\"true\">Output</option>\r\n    </select>\r\n  </div>\r\n  <ng-container *ngIf=\"!outputControl.value\">\r\n    <div class=\"form-group col-md\">\r\n      <label for=\"inputStep\">Step</label>\r\n      <select id=\"inputStep\" class=\"form-control\" formControlName=\"step\">\r\n        <ng-container\r\n          *ngFor=\"\r\n            let step of executionStepsFormValue ??\r\n              developmentMethod.executionSteps;\r\n            let index = index\r\n          \"\r\n        >\r\n          <option\r\n            *ngIf=\"stepNumber == null || index > stepNumber\"\r\n            [ngValue]=\"index\"\r\n          >\r\n            #{{ index + 1 }}\r\n          </option>\r\n        </ng-container>\r\n      </select>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"outputControl.value\">\r\n    <div class=\"form-group col-md\">\r\n      <label for=\"inputGroup\">Group</label>\r\n      <select id=\"inputGroup\" class=\"form-control\" formControlName=\"group\">\r\n        <option\r\n          *ngFor=\"\r\n            let group of developmentMethod.outputArtifacts;\r\n            let index = index\r\n          \"\r\n          [ngValue]=\"index\"\r\n        >\r\n          #{{ index + 1 }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </ng-container>\r\n  <div class=\"form-group col\">\r\n    <label for=\"inputArtifact\">Artifact</label>\r\n    <div class=\"input-group\">\r\n      <select\r\n        id=\"inputArtifact\"\r\n        class=\"form-control\"\r\n        formControlName=\"artifact\"\r\n      >\r\n        <ng-container *ngFor=\"let artifact of artifacts; let index = index\">\r\n          <option\r\n            *ngIf=\"artifactConformsToMetaModel(artifact)\"\r\n            [ngValue]=\"index\"\r\n          >\r\n            #{{ index + 1 }} {{ artifact.name }}\r\n          </option>\r\n        </ng-container>\r\n      </select>\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"remove.emit()\"\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport { FormArray, FormArrayName } from '@angular/forms';\r\nimport { ArtifactMappingFormService } from '../shared/artifact-mapping-form.service';\r\nimport { ExecutionStepsFormValue } from '../shared/execution-steps-form.service';\r\nimport { MetaModelIdentifier } from '../../development-process-registry/meta-model-definition';\r\n\r\n@Component({\r\n  selector: 'app-development-method-artifact-mappings',\r\n  templateUrl: './development-method-artifact-mappings.component.html',\r\n  styleUrls: ['./development-method-artifact-mappings.component.css'],\r\n})\r\nexport class DevelopmentMethodArtifactMappingsComponent {\r\n  @Input() executionStepsFormValue?: ExecutionStepsFormValue;\r\n  @Input() developmentMethod: DevelopmentMethod;\r\n  @Input() metaModel: MetaModelIdentifier;\r\n  @Input() stepNumber: number = null;\r\n\r\n  constructor(\r\n    private artifactMappingService: ArtifactMappingFormService,\r\n    private formArrayName: FormArrayName\r\n  ) {}\r\n\r\n  addMapping(): void {\r\n    this.formArray.push(this.artifactMappingService.createMappingForm());\r\n  }\r\n\r\n  removeMapping(index: number): void {\r\n    this.formArray.removeAt(index);\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.formArrayName.control;\r\n  }\r\n}\r\n","<div\r\n  *ngFor=\"let control of formArray.controls; let index = index\"\r\n  [formGroup]=\"$any(control)\"\r\n>\r\n  <app-development-method-artifact-mapping\r\n    [executionStepsFormValue]=\"executionStepsFormValue\"\r\n    [developmentMethod]=\"developmentMethod\"\r\n    [metaModel]=\"metaModel\"\r\n    [stepNumber]=\"stepNumber\"\r\n    (remove)=\"removeMapping(index)\"\r\n  ></app-development-method-artifact-mapping>\r\n</div>\r\n<div class=\"d-flex\">\r\n  <button type=\"button\" class=\"ml-auto btn btn-primary\" (click)=\"addMapping()\">\r\n    Add Mapping\r\n  </button>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-development-method-form',\r\n  templateUrl: './development-method-form.component.html',\r\n  styleUrls: ['./development-method-form.component.css'],\r\n})\r\nexport class DevelopmentMethodFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() developmentMethod!: DevelopmentMethod;\r\n\r\n  @Output() submitDevelopmentMethodForm = new EventEmitter<FormGroup>();\r\n\r\n  form: FormGroup = this.fb.group({\r\n    name: ['', Validators.required],\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.changeSubscription = this.nameControl.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap((value) => (this.changed = value !== this.developmentMethod.name))\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.developmentMethod) {\r\n      const oldDevelopmentMethod: DevelopmentMethod =\r\n        changes.developmentMethod.previousValue;\r\n      const newDevelopmentMethod: DevelopmentMethod =\r\n        changes.developmentMethod.currentValue;\r\n      if (\r\n        changes.developmentMethod.firstChange ||\r\n        oldDevelopmentMethod.name !== newDevelopmentMethod.name\r\n      ) {\r\n        this.nameControl.setValue(newDevelopmentMethod.name);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription != null) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitDevelopmentMethodForm.emit(this.form);\r\n  }\r\n\r\n  get nameControl(): FormControl {\r\n    return this.form.get('name') as FormControl;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!form.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-development-method-incomplete-modal',\r\n  templateUrl: './development-method-incomplete-modal.component.html',\r\n  styleUrls: ['./development-method-incomplete-modal.component.css'],\r\n})\r\nexport class DevelopmentMethodIncompleteModalComponent {\r\n  @Input() developmentMethod: DevelopmentMethod;\r\n\r\n  constructor(\r\n    private activeModal: NgbActiveModal,\r\n    private modalService: NgbModal,\r\n    private router: Router\r\n  ) {}\r\n\r\n  dismiss(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  async check(): Promise<void> {\r\n    this.modalService.dismissAll();\r\n    await this.router.navigate([\r\n      'methods',\r\n      'methodview',\r\n      this.developmentMethod._id,\r\n    ]);\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">Building Block incomplete</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n    <span class=\"sr-only\">Close Window</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"alert alert-warning\">\r\n    The provided building block is incomplete. Please check it in the building\r\n    block overview.\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer d-flex\">\r\n  <button type=\"button\" class=\"btn btn-dark\" (click)=\"dismiss()\">Close</button>\r\n  <button\r\n    *ngIf=\"developmentMethod != null\"\r\n    type=\"button\"\r\n    class=\"btn btn-primary ml-auto\"\r\n    (click)=\"check()\"\r\n  >\r\n    Check\r\n  </button>\r\n</div>\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\r\nimport { getTypeaheadInputPipe } from '../../shared/utils';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormGroupDirective,\r\n} from '@angular/forms';\r\nimport { Module } from '../../development-process-registry/module-api/module';\r\nimport { ModuleService } from '../../development-process-registry/module-api/module.service';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport { ConfigurationFormPlaceholderDirective } from '../configuration-form-placeholder.directive';\r\nimport { ModuleMethod } from '../../development-process-registry/module-api/module-method';\r\nimport { ConfigurationFormComponent } from '../../development-process-registry/module-api/configuration-form-component';\r\nimport {\r\n  ExecutionStepsFormService,\r\n  ExecutionStepsFormValue,\r\n} from '../shared/execution-steps-form.service';\r\n\r\n@Component({\r\n  selector: 'app-development-method-select-execution-step',\r\n  templateUrl: './development-method-select-execution-step.component.html',\r\n  styleUrls: ['./development-method-select-execution-step.component.css'],\r\n})\r\nexport class DevelopmentMethodSelectExecutionStepComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() executionStepsFormValue?: ExecutionStepsFormValue;\r\n  @Input() developmentMethod: DevelopmentMethod;\r\n  @Input() stepNumber: number;\r\n\r\n  modules: Module[];\r\n  methods: ModuleMethod[] = [];\r\n\r\n  artifactInputs: { isStep: boolean; index: number; artifact: number }[][];\r\n\r\n  @Output() remove = new EventEmitter<void>();\r\n\r\n  openModuleInput = new Subject<string>();\r\n  openMethodInput = new Subject<string>();\r\n\r\n  @ViewChild(ConfigurationFormPlaceholderDirective, { static: true })\r\n  configurationFormHost: ConfigurationFormPlaceholderDirective;\r\n\r\n  private moduleChangeSubscription: Subscription;\r\n  private methodChangeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private executionStepsFormService: ExecutionStepsFormService,\r\n    private fb: FormBuilder,\r\n    private formGroupDirective: FormGroupDirective,\r\n    private moduleService: ModuleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.moduleControl.value != null) {\r\n      this.initMethods(this.moduleControl.value);\r\n    }\r\n    if (this.selectedMethod != null) {\r\n      this.initConfiguration(this.selectedMethod);\r\n    }\r\n    this.moduleChangeSubscription = this.moduleControl.valueChanges\r\n      .pipe(\r\n        tap(() => this.methodControl.setValue(null)),\r\n        tap(() => (this.methods = [])),\r\n        filter((module) => module),\r\n        tap((module) => this.initMethods(module))\r\n      )\r\n      .subscribe();\r\n    this.methodChangeSubscription = this.methodControl.valueChanges\r\n      .pipe(\r\n        tap(() => this.outputArtifactsControl.clear()),\r\n        tap(() => this.clearConfiguration()),\r\n        tap(() =>\r\n          this.executionStepsFormService.executionStepMethodChange(\r\n            this.formGroup.parent as FormArray,\r\n            this.stepNumber\r\n          )\r\n        ),\r\n        filter((method) => method),\r\n        tap(() =>\r\n          this.selectedMethod.output.forEach(() =>\r\n            this.outputArtifactsControl.push(this.fb.array([]))\r\n          )\r\n        ),\r\n        tap((method: ModuleMethod) => this.initConfiguration(method)),\r\n        tap(() => this.calculateInput())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.developmentMethod) {\r\n      const developmentMethod: DevelopmentMethod =\r\n        changes.developmentMethod.currentValue;\r\n      const toolNames = developmentMethod.getAllToolNames();\r\n      this.modules = this.moduleService.modules.filter((module) =>\r\n        toolNames.has(module.name)\r\n      );\r\n    }\r\n    if (changes.developmentMethod || changes.stepNumber) {\r\n      this.calculateInput();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.moduleChangeSubscription) {\r\n      this.moduleChangeSubscription.unsubscribe();\r\n    }\r\n    this.openModuleInput.complete();\r\n    this.openMethodInput.complete();\r\n  }\r\n\r\n  initMethods(module: Module): void {\r\n    this.methods = Object.values(module.methods);\r\n  }\r\n\r\n  initConfiguration(method: ModuleMethod): void {\r\n    if (\r\n      method.configurationFormComponent != null &&\r\n      method.createConfigurationForm != null\r\n    ) {\r\n      if (!this.formGroup.contains('predefinedInput')) {\r\n        this.formGroup.addControl(\r\n          'predefinedInput',\r\n          this.executionStepsFormService.createPredefinedInputForm(method, null)\r\n        );\r\n      }\r\n      const configurationFormComponentFactory =\r\n        this.componentFactoryResolver.resolveComponentFactory(\r\n          method.configurationFormComponent\r\n        );\r\n      const viewContainerRef = this.configurationFormHost.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      const componentRef =\r\n        viewContainerRef.createComponent<ConfigurationFormComponent>(\r\n          configurationFormComponentFactory\r\n        );\r\n      componentRef.instance.formGroup = this.predefinedInputControl;\r\n    }\r\n  }\r\n\r\n  clearConfiguration(): void {\r\n    this.configurationFormHost.viewContainerRef.clear();\r\n    this.formGroup.removeControl('predefinedInput');\r\n  }\r\n\r\n  calculateInput(): void {\r\n    if (this.selectedMethod != null) {\r\n      this.artifactInputs = this.developmentMethod.checkStepInputArtifacts(\r\n        this.stepNumber,\r\n        this.selectedMethod.input.length\r\n      );\r\n    } else {\r\n      this.artifactInputs = [];\r\n    }\r\n  }\r\n\r\n  searchModule = (input: Observable<string>): Observable<Module[]> => {\r\n    return merge(getTypeaheadInputPipe(input), this.openModuleInput).pipe(\r\n      map((term) =>\r\n        this.modules\r\n          .filter((moduleItem) =>\r\n            moduleItem.name.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 7)\r\n      )\r\n    );\r\n  };\r\n\r\n  searchMethod = (input: Observable<string>): Observable<ModuleMethod[]> => {\r\n    return merge(getTypeaheadInputPipe(input), this.openMethodInput).pipe(\r\n      map((term) =>\r\n        this.methods\r\n          .filter((methodItem) =>\r\n            methodItem.name.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 8)\r\n      )\r\n    );\r\n  };\r\n\r\n  formatter(x: { name: string }): string {\r\n    return x.name;\r\n  }\r\n\r\n  get moduleControl(): FormControl {\r\n    return this.formGroup.get('module') as FormControl;\r\n  }\r\n\r\n  get methodControl(): FormControl {\r\n    return this.formGroup.get('method') as FormControl;\r\n  }\r\n\r\n  get outputArtifactsControl(): FormArray {\r\n    return this.formGroup.get('outputMappings') as FormArray;\r\n  }\r\n\r\n  get predefinedInputControl(): FormGroup {\r\n    return this.formGroup.get('predefinedInput') as FormGroup;\r\n  }\r\n\r\n  get formGroup(): FormGroup {\r\n    return this.formGroupDirective.control;\r\n  }\r\n\r\n  get selectedMethod(): ModuleMethod {\r\n    return this.methodControl.value as ModuleMethod;\r\n  }\r\n}\r\n","<div class=\"text-muted\" [formGroup]=\"formGroup\">\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col\">\r\n      <label for=\"moduleInput\">Module</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"module\"\r\n        class=\"form-control\"\r\n        [class.is-invalid]=\"moduleControl.invalid\"\r\n        id=\"moduleInput\"\r\n        [ngbTypeahead]=\"searchModule\"\r\n        [editable]=\"false\"\r\n        [resultFormatter]=\"formatter\"\r\n        [inputFormatter]=\"formatter\"\r\n        (click)=\"openModuleInput.next($any($event.target).value)\"\r\n        (focus)=\"openModuleInput.next($any($event.target).value)\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group col\">\r\n      <label for=\"methodInput\">Method</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"method\"\r\n        class=\"form-control\"\r\n        [class.is-invalid]=\"methodControl.invalid\"\r\n        id=\"methodInput\"\r\n        [ngbTypeahead]=\"searchMethod\"\r\n        [editable]=\"false\"\r\n        [resultFormatter]=\"formatter\"\r\n        [inputFormatter]=\"formatter\"\r\n        (click)=\"openMethodInput.next($any($event.target).value)\"\r\n        (focus)=\"openMethodInput.next($any($event.target).value)\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <h5\r\n    *ngIf=\"\r\n      selectedMethod != null &&\r\n      selectedMethod.configurationFormComponent != null\r\n    \"\r\n  >\r\n    Predefined Values\r\n  </h5>\r\n  <ng-template appConfigurationFormPlaceholder></ng-template>\r\n  <ng-container *ngIf=\"selectedMethod && selectedMethod.input.length > 0\">\r\n    <h5>Input Artifacts</h5>\r\n    <ul class=\"list-group mb-3\">\r\n      <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"let input of selectedMethod.input; let index = index\"\r\n      >\r\n        <b [class.text-danger]=\"artifactInputs[index].length === 0\">{{\r\n          input.name\r\n        }}</b>\r\n        <div *ngIf=\"artifactInputs[index].length === 0\">\r\n          No input for this artifact defined\r\n        </div>\r\n        <div *ngIf=\"artifactInputs[index].length > 0\">\r\n          Input from:\r\n          <ul>\r\n            <li *ngFor=\"let from of artifactInputs[index]\">\r\n              {{ from.isStep ? 'Step' : 'Input Group' }} #{{\r\n                from.index + 1\r\n              }}\r\n              Artifact #{{ from.artifact + 1 }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"selectedMethod && selectedMethod.output.length > 0\">\r\n    <h5>Output Artifacts</h5>\r\n    <ul formArrayName=\"outputMappings\" class=\"list-group mb-3\">\r\n      <li\r\n        *ngFor=\"let output of selectedMethod.output; let index = index\"\r\n        class=\"list-group-item\"\r\n      >\r\n        <b>{{ output.name }}</b>\r\n        <app-development-method-artifact-mappings\r\n          [executionStepsFormValue]=\"executionStepsFormValue\"\r\n          [developmentMethod]=\"developmentMethod\"\r\n          formArrayName=\"{{ index }}\"\r\n          [metaModel]=\"output\"\r\n          [stepNumber]=\"stepNumber\"\r\n        ></app-development-method-artifact-mappings>\r\n      </li>\r\n    </ul>\r\n  </ng-container>\r\n  <div class=\"d-flex\">\r\n    <button class=\"btn btn-dark ml-auto\" (click)=\"remove.emit()\">Remove</button>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport { ExecutionStep } from '../../development-process-registry/development-method/execution-step';\r\nimport { ExecutionStepsFormService } from '../shared/execution-steps-form.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { equalsList } from '../../shared/utils';\r\nimport { ModuleService } from '../../development-process-registry/module-api/module.service';\r\n\r\n@Component({\r\n  selector: 'app-development-method-select-execution-steps',\r\n  templateUrl: './development-method-select-execution-steps.component.html',\r\n  styleUrls: ['./development-method-select-execution-steps.component.css'],\r\n})\r\nexport class DevelopmentMethodSelectExecutionStepsComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() developmentMethod: DevelopmentMethod;\r\n\r\n  @Output() submitExecutionStepsSelectionForm = new EventEmitter<FormArray>();\r\n\r\n  executionStepsSelectionForm: FormGroup = this.fb.group({\r\n    steps: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private executionStepsFormService: ExecutionStepsFormService,\r\n    private fb: FormBuilder,\r\n    private moduleService: ModuleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.changeSubscription = this.executionStepsSelectionForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !this.equalExecutionSteps(\r\n              this.developmentMethod.executionSteps,\r\n              this.executionStepsFormService.getExecutionSteps(value.steps)\r\n            ))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.developmentMethod) {\r\n      const oldDevelopmentMethod: DevelopmentMethod =\r\n        changes.developmentMethod.previousValue;\r\n      const newDevelopmentMethod: DevelopmentMethod =\r\n        changes.developmentMethod.currentValue;\r\n      if (\r\n        oldDevelopmentMethod == null ||\r\n        !this.equalExecutionSteps(\r\n          oldDevelopmentMethod.executionSteps,\r\n          newDevelopmentMethod.executionSteps\r\n        )\r\n      ) {\r\n        this.loadForm(newDevelopmentMethod.executionSteps);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  addStep(): void {\r\n    this.executionStepsFormService.addExecutionStep(this.formArray);\r\n  }\r\n\r\n  removeStep(index: number): void {\r\n    this.executionStepsFormService.removeExecutionStep(this.formArray, index);\r\n  }\r\n\r\n  loadForm(executionSteps: ExecutionStep[]): void {\r\n    this.executionStepsSelectionForm.setControl(\r\n      'steps',\r\n      this.executionStepsFormService.createForm(executionSteps)\r\n    );\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitExecutionStepsSelectionForm.emit(this.formArray);\r\n  }\r\n\r\n  private equalExecutionSteps(\r\n    executionStepsA: ExecutionStep[],\r\n    executionStepsB: ExecutionStep[]\r\n  ): boolean {\r\n    if (!equalsList(executionStepsA, executionStepsB)) {\r\n      return false;\r\n    }\r\n    return executionStepsA.every((stepA, index) => {\r\n      if (stepA.module != null && stepA.method != null) {\r\n        const method = this.moduleService.getModuleMethod(\r\n          stepA.module,\r\n          stepA.method\r\n        );\r\n        if (method.equalPredefinedInput) {\r\n          return method.equalPredefinedInput(\r\n            stepA.predefinedInput,\r\n            executionStepsB[index].predefinedInput\r\n          );\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.executionStepsSelectionForm.get('steps') as FormArray;\r\n  }\r\n}\r\n","<form [formGroup]=\"executionStepsSelectionForm\" (ngSubmit)=\"submitForm()\">\r\n  <ul *ngIf=\"formArray.controls.length > 0\" class=\"list-group mb-3\">\r\n    <li\r\n      *ngFor=\"let control of formArray.controls; let index = index\"\r\n      class=\"list-group-item\"\r\n    >\r\n      <h5>Step #{{ index + 1 }}</h5>\r\n      <app-development-method-select-execution-step\r\n        [executionStepsFormValue]=\"formArray.value\"\r\n        [formGroup]=\"$any(control)\"\r\n        [developmentMethod]=\"developmentMethod\"\r\n        [stepNumber]=\"index\"\r\n        (remove)=\"removeStep(index)\"\r\n      ></app-development-method-select-execution-step>\r\n    </li>\r\n  </ul>\r\n  <div class=\"d-flex mb-3\">\r\n    <button type=\"button\" class=\"btn btn-primary ml-auto\" (click)=\"addStep()\">\r\n      Add execution step\r\n    </button>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!executionStepsSelectionForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { DevelopmentMethodEntry } from '../../development-process-registry/development-method/development-method';\r\nimport { SituationalFactor } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\n\r\n@Component({\r\n  selector: 'app-development-method-selection-form',\r\n  templateUrl: './development-method-selection-form.component.html',\r\n  styleUrls: ['./development-method-selection-form.component.css'],\r\n})\r\nexport class DevelopmentMethodSelectionFormComponent implements OnChanges {\r\n  @Input() developmentMethod: DevelopmentMethodEntry;\r\n  @Input() contextSituationalFactors: {\r\n    list: string;\r\n    element?: SituationalFactor;\r\n  }[] = [];\r\n\r\n  @Output() selectDevelopmentMethod =\r\n    new EventEmitter<DevelopmentMethodEntry>();\r\n\r\n  needed: SituationalFactor[] = [];\r\n  provided: SituationalFactor[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.contextSituationalFactors) {\r\n      this.needed = changes.contextSituationalFactors.currentValue.map(\r\n        (factor) => factor.element\r\n      );\r\n    }\r\n    if (changes.developmentMethod) {\r\n      this.provided =\r\n        changes.developmentMethod.currentValue.situationalFactors.map(\r\n          (factor) => factor.element\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-flex align-items-baseline\">\r\n  <h5>{{ developmentMethod.name }}</h5>\r\n  <button\r\n    (click)=\"selectDevelopmentMethod.emit(developmentMethod)\"\r\n    type=\"button\"\r\n    class=\"btn btn-primary ml-auto btn-xs\"\r\n  >\r\n    Select\r\n  </button>\r\n</div>\r\n<p>{{ developmentMethod.description }}</p>\r\n<app-situational-factors-overview\r\n  *ngIf=\"needed && needed.length > 0\"\r\n  [provided]=\"provided\"\r\n  [needed]=\"needed\"\r\n></app-situational-factors-overview>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  Decision,\r\n  GroupSummary,\r\n} from '../../development-process-registry/bm-process/decision';\r\nimport { Artifact } from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { Stakeholder } from '../../development-process-registry/method-elements/stakeholder/stakeholder';\r\nimport { Tool } from '../../development-process-registry/method-elements/tool/tool';\r\nimport { MethodElement } from '../../development-process-registry/method-elements/method-element';\r\nimport { StepInputArtifact } from '../../development-process-registry/running-process/step-input-artifact';\r\nimport { MetaModelService } from '../../development-process-registry/meta-model.service';\r\nimport {\r\n  MetaModelApi,\r\n  MetaModelDefinition,\r\n} from '../../development-process-registry/meta-model-definition';\r\nimport {\r\n  ArtifactDataReference,\r\n  ArtifactDataType,\r\n} from '../../development-process-registry/running-process/artifact-data';\r\n\r\n@Component({\r\n  selector: 'app-development-method-summary',\r\n  templateUrl: './development-method-summary.component.html',\r\n  styleUrls: ['./development-method-summary.component.css'],\r\n})\r\nexport class DevelopmentMethodSummaryComponent implements OnChanges {\r\n  @Input() decision: Decision;\r\n  @Input() inputArtifacts: StepInputArtifact[] = null;\r\n\r\n  @Output() viewArtifactReference = new EventEmitter<{\r\n    reference: ArtifactDataReference;\r\n    api: MetaModelApi;\r\n  }>();\r\n\r\n  metaModelDefinitions: MetaModelDefinition[];\r\n\r\n  summary: {\r\n    inputArtifacts: GroupSummary<Artifact>;\r\n    outputArtifacts: GroupSummary<Artifact>;\r\n    stakeholders: GroupSummary<Stakeholder>;\r\n    tools: GroupSummary<Tool>;\r\n  };\r\n\r\n  constructor(private metaModelService: MetaModelService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.decision) {\r\n      this.summary = changes.decision.currentValue.getSummary();\r\n    }\r\n    if (changes.inputArtifacts && changes.inputArtifacts.currentValue != null) {\r\n      const inputArtifacts: StepInputArtifact[] =\r\n        changes.inputArtifacts.currentValue;\r\n      this.metaModelDefinitions = [];\r\n      this.metaModelDefinitions.length = inputArtifacts.length;\r\n      for (let index = 0; index < inputArtifacts.length; index++) {\r\n        const stepArtifact = inputArtifacts[index];\r\n        if (stepArtifact.data.type === ArtifactDataType.REFERENCE) {\r\n          const reference: ArtifactDataReference = stepArtifact.data.data;\r\n          this.metaModelDefinitions[index] =\r\n            this.metaModelService.getMetaModelDefinition(reference.type);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _viewArtifactReference(index: number, reference: ArtifactDataReference) {\r\n    this.viewArtifactReference.emit({\r\n      reference,\r\n      api: this.metaModelDefinitions[index].api,\r\n    });\r\n  }\r\n\r\n  asGroupSummary<T extends MethodElement>(element: any): GroupSummary<T> {\r\n    return element as GroupSummary<T>;\r\n  }\r\n}\r\n","<ng-template #defaultCell let-list=\"list\">\r\n  <ul>\r\n    <li *ngFor=\"let element of asGroupSummary(list).elements\">\r\n      <ng-container *ngIf=\"element.multiple\">\r\n        {{ element.list | list | multiple: true }}\r\n        <ul>\r\n          <li *ngFor=\"let concreteElement of element.elements\">\r\n            {{ concreteElement.name }}\r\n          </li>\r\n        </ul>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!element.multiple\">\r\n        <ng-container *ngIf=\"element.elements.length === 1\">\r\n          {{ element.elements[0].name | multiple: element.multipleElements }}\r\n          ({{ element.elements[0].list | list }})\r\n        </ng-container>\r\n        <ng-container *ngIf=\"element.elements.length === 0\">\r\n          ({{ element.list | list }})\r\n        </ng-container>\r\n      </ng-container>\r\n    </li>\r\n  </ul>\r\n</ng-template>\r\n\r\n<ng-template #inputArtifactsCell>\r\n  <ul>\r\n    <li *ngFor=\"let element of inputArtifacts; let index = index\">\r\n      {{ element.identifier }} &ndash; {{ element.artifact.name }} &ndash;\r\n      Version #{{ element.versionInfo.number + 1 }} &ndash;\r\n      {{ element.versionInfo.time | date: 'short' }}\r\n      <ul\r\n        *ngIf=\"\r\n          element.data && (element.data.type === 1 || element.data.type === 2)\r\n        \"\r\n      >\r\n        <li *ngIf=\"element.data.type === 1\">\r\n          <quill-view [content]=\"element.data.data\"></quill-view>\r\n        </li>\r\n        <li *ngIf=\"element.data.type === 2\">\r\n          {{ metaModelDefinitions[index].name }}\r\n          <button\r\n            class=\"btn btn-xs btn-secondary\"\r\n            (click)=\"_viewArtifactReference(index, element.data.data)\"\r\n          >\r\n            View\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</ng-template>\r\n\r\n<table class=\"table mb-0\">\r\n  <tbody>\r\n    <tr>\r\n      <th scope=\"row\">Building Block Name</th>\r\n      <td>{{ decision.method.name }}</td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Building Block Description</th>\r\n      <td class=\"show-new-lines\">{{ decision.method.description }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"decision.method.examples.length > 0\">\r\n      <th scope=\"row\">Examples</th>\r\n      <td class=\"show-new-lines\">\r\n        <ul class=\"list-group\">\r\n          <li\r\n            *ngFor=\"let example of decision.method.examples\"\r\n            class=\"list-group-item\"\r\n          >\r\n            {{ example }}\r\n          </li>\r\n        </ul>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Input Artifacts</th>\r\n      <td>\r\n        <ng-container *ngIf=\"!inputArtifacts\">\r\n          <ng-container\r\n            *ngTemplateOutlet=\"\r\n              defaultCell;\r\n              context: { list: this.summary.inputArtifacts }\r\n            \"\r\n          ></ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"inputArtifacts\">\r\n          <ng-container *ngTemplateOutlet=\"inputArtifactsCell\"></ng-container>\r\n        </ng-container>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Output Artifacts</th>\r\n      <td>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            defaultCell;\r\n            context: { list: this.summary.outputArtifacts }\r\n          \"\r\n        ></ng-container>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Involved Stakeholders</th>\r\n      <td>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            defaultCell;\r\n            context: { list: this.summary.stakeholders }\r\n          \"\r\n        ></ng-container>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Tools</th>\r\n      <td>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"defaultCell; context: { list: this.summary.tools }\"\r\n        ></ng-container>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\r\nimport { DevelopmentMethodService } from '../../development-process-registry/development-method/development-method.service';\r\nimport { FormArray, FormGroup } from '@angular/forms';\r\nimport { ExecutionStepsFormService } from '../shared/execution-steps-form.service';\r\nimport { DevelopmentMethodLoaderService } from '../shared/development-method-loader.service';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\n\r\n@Component({\r\n  selector: 'app-development-method',\r\n  templateUrl: './development-method.component.html',\r\n  styleUrls: ['./development-method.component.css'],\r\n  providers: [DevelopmentMethodLoaderService],\r\n})\r\nexport class DevelopmentMethodComponent {\r\n  constructor(\r\n    private developmentMethodLoaderService: DevelopmentMethodLoaderService,\r\n    private developmentMethodService: DevelopmentMethodService,\r\n    private executionStepsFormService: ExecutionStepsFormService\r\n  ) {}\r\n\r\n  async updateExecutionSteps(form: FormArray): Promise<void> {\r\n    const executionSteps = this.executionStepsFormService.getExecutionSteps(\r\n      form.value\r\n    );\r\n    await this.updateDevelopmentMethodValue({ executionSteps });\r\n  }\r\n\r\n  async updateDevelopmentMethod(form: FormGroup): Promise<void> {\r\n    await this.updateDevelopmentMethodValue(form.value);\r\n  }\r\n\r\n  async updateDevelopmentMethodValue(\r\n    value: Partial<DevelopmentMethod>\r\n  ): Promise<void> {\r\n    await this.developmentMethodService.update(\r\n      this.developmentMethod._id,\r\n      value\r\n    );\r\n  }\r\n\r\n  get developmentMethod(): DevelopmentMethod {\r\n    return this.developmentMethodLoaderService.developmentMethod;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'methods']\">\r\n      Method Building Blocks\r\n    </a>\r\n    <a *ngIf=\"developmentMethod\" class=\"nav-link active\" [routerLink]=\"[]\">\r\n      {{ developmentMethod.name }}\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"developmentMethod\" role=\"main\" class=\"container\">\r\n  <div class=\"alert alert-info mt-3\" role=\"alert\">\r\n    <p>\r\n      Create a Method Building Block to insert it later into activities of\r\n      Method Patterns. A Method Building Block needs at least a Type to be\r\n      inserted into an activity of a Method Pattern.\r\n    </p>\r\n\r\n    <p>\r\n      It is possible to only select a value for the list input field and let the\r\n      second input field empty. Then the Business Developer can decide later,\r\n      when creating the Business Model Development Method, which concrete\r\n      element to use. Additionally, it is possible to select multiple to define\r\n      that a Business Developer will be able to select multiple concrete\r\n      elements.\r\n    </p>\r\n\r\n    <p class=\"mb-0\">\r\n      Artifacts and Stakeholders allow the creation of different groups. Later,\r\n      when creating the Business Model Development Method, one group can be\r\n      chosen to be used.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Method Building Block</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-development-method-form\r\n        [developmentMethod]=\"developmentMethod\"\r\n        (submitDevelopmentMethodForm)=\"\r\n          updateDevelopmentMethodValue($event.value)\r\n        \"\r\n      ></app-development-method-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Types</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-types-selection-form\r\n        [types]=\"developmentMethod.types\"\r\n        (submitTypesForm)=\"\r\n          updateDevelopmentMethodValue({ types: $event.value })\r\n        \"\r\n      ></app-types-selection-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Situational Factors</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-situational-factors-selection-form\r\n        [situationalFactors]=\"developmentMethod.situationalFactors\"\r\n        (submitSituationalFactorsForm)=\"\r\n          updateDevelopmentMethodValue({ situationalFactors: $event.value })\r\n        \"\r\n      ></app-situational-factors-selection-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Description</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-description-form\r\n        [description]=\"developmentMethod.description\"\r\n        (submitDescriptionForm)=\"updateDevelopmentMethod($event)\"\r\n      ></app-description-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Examples</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-examples-form\r\n        [examples]=\"developmentMethod.examples\"\r\n        (submitExamplesForm)=\"\r\n          updateDevelopmentMethodValue({ examples: $event.value })\r\n        \"\r\n      ></app-examples-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Input Artifacts</h6>\r\n    <div class=\"pt-3\">\r\n      <app-artifacts-selection-form\r\n        [artifacts]=\"developmentMethod.inputArtifacts\"\r\n        [developmentMethod]=\"developmentMethod\"\r\n        (submitArtifactsForm)=\"\r\n          updateDevelopmentMethodValue({ inputArtifacts: $event.value })\r\n        \"\r\n      ></app-artifacts-selection-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Output Artifacts</h6>\r\n    <div class=\"pt-3\">\r\n      <app-artifacts-selection-form\r\n        [artifacts]=\"developmentMethod.outputArtifacts\"\r\n        (submitArtifactsForm)=\"\r\n          updateDevelopmentMethodValue({ outputArtifacts: $event.value })\r\n        \"\r\n      ></app-artifacts-selection-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Stakeholders</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-stakeholders-selection-form\r\n        [stakeholders]=\"developmentMethod.stakeholders\"\r\n        (submitStakeholdersForm)=\"\r\n          updateDevelopmentMethodValue({ stakeholders: $event.value })\r\n        \"\r\n      ></app-stakeholders-selection-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Tools</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-tools-selection-form\r\n        [tools]=\"developmentMethod.tools\"\r\n        (submitToolsForm)=\"\r\n          updateDevelopmentMethodValue({ tools: $event.value })\r\n        \"\r\n      ></app-tools-selection-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Execution steps</h6>\r\n    <div class=\"pt-3\">\r\n      <div class=\"alert alert-info\">\r\n        The modules must first be added in the tools before they can be selected\r\n        here.\r\n      </div>\r\n      <app-development-method-select-execution-steps\r\n        [developmentMethod]=\"developmentMethod\"\r\n        (submitExecutionStepsSelectionForm)=\"updateExecutionSteps($event)\"\r\n      ></app-development-method-select-execution-steps>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Edit Author Information</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-author-form\r\n        [author]=\"developmentMethod.author\"\r\n        (submitAuthorForm)=\"\r\n          updateDevelopmentMethodValue({ author: $event.value })\r\n        \"\r\n      ></app-author-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { DevelopmentMethodEntry } from '../../development-process-registry/development-method/development-method';\r\nimport { SituationalFactor } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\nimport { SEARCH_FUNCTION, searchFunction } from '../../shared/search.service';\r\n\r\n@Component({\r\n  selector: 'app-development-methods-selection-form',\r\n  templateUrl: './development-methods-selection-form.component.html',\r\n  styleUrls: ['./development-methods-selection-form.component.css'],\r\n  providers: [{ provide: SEARCH_FUNCTION, useValue: searchFunction }],\r\n})\r\nexport class DevelopmentMethodsSelectionFormComponent {\r\n  @Input() developmentMethods: DevelopmentMethodEntry[];\r\n  @Input() contextSituationalFactors: {\r\n    list: string;\r\n    element?: SituationalFactor;\r\n  }[] = [];\r\n\r\n  @Output() selectDevelopmentMethod =\r\n    new EventEmitter<DevelopmentMethodEntry>();\r\n}\r\n","<ng-template #ref let-item>\r\n  <app-development-method-selection-form\r\n    [contextSituationalFactors]=\"contextSituationalFactors\"\r\n    [developmentMethod]=\"item\"\r\n    (selectDevelopmentMethod)=\"selectDevelopmentMethod.emit($event)\"\r\n  ></app-development-method-selection-form>\r\n</ng-template>\r\n\r\n<app-search\r\n  heading=\"Building Blocks\"\r\n  itemName=\"Method Building Blocks\"\r\n  [content]=\"ref\"\r\n  [items]=\"developmentMethods\"\r\n></app-search>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  DevelopmentMethod,\r\n  DevelopmentMethodEntry,\r\n  DevelopmentMethodInit,\r\n} from '../../development-process-registry/development-method/development-method';\r\nimport { DevelopmentMethodService } from '../../development-process-registry/development-method/development-method.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ELEMENT_SERVICE, ListService } from '../../shared/list.service';\r\n\r\n@Component({\r\n  selector: 'app-development-methods',\r\n  templateUrl: './development-methods.component.html',\r\n  styleUrls: ['./development-methods.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: DevelopmentMethodService },\r\n  ],\r\n})\r\nexport class DevelopmentMethodsComponent {\r\n  developmentMethodForm = this.fb.group({\r\n    name: this.fb.control('', Validators.required),\r\n  });\r\n\r\n  modalDevelopmentMethod: DevelopmentMethodEntry;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteDevelopmentMethodModal', { static: true })\r\n  deleteDevelopmentMethodModal: unknown;\r\n\r\n  constructor(\r\n    private listService: ListService<DevelopmentMethod, DevelopmentMethodInit>,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  openDeleteDevelopmentMethodModal(\r\n    developmentMethod: DevelopmentMethodEntry\r\n  ): void {\r\n    this.modalDevelopmentMethod = developmentMethod;\r\n    this.modalReference = this.modalService.open(\r\n      this.deleteDevelopmentMethodModal,\r\n      {\r\n        size: 'lg',\r\n      }\r\n    );\r\n  }\r\n\r\n  async deleteDevelopmentMethod(id: string): Promise<void> {\r\n    await this.listService.delete(id);\r\n  }\r\n\r\n  async addDevelopmentMethod(developmentMethodForm: FormGroup): Promise<void> {\r\n    await this.listService.add({\r\n      name: developmentMethodForm.value.name,\r\n      author: {},\r\n    });\r\n    this.developmentMethodForm.reset();\r\n  }\r\n\r\n  get developmentMethodsList(): DevelopmentMethodEntry[] {\r\n    return this.listService.elements;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.listService.noResults;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.listService.loading;\r\n  }\r\n\r\n  get reloading(): boolean {\r\n    return this.listService.reloading;\r\n  }\r\n}\r\n","<ng-template #deleteDevelopmentMethodModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"deleteDevelopmentMethod(modalDevelopmentMethod._id); c()\"\r\n  >\r\n    <div modalTitle>\r\n      Delete Method Building Block {{ modalDevelopmentMethod.name }}\r\n    </div>\r\n    You are deleting the method building block\r\n    {{ modalDevelopmentMethod.name }}. This can not be undone. This action will\r\n    not delete the method building block from business model development methods\r\n    that are using it.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Method Building Blocks</a>\r\n    <a\r\n      *ngFor=\"let developmentMethod of developmentMethodsList\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['methodview', developmentMethod._id]\"\r\n      >{{ developmentMethod.name }}</a\r\n    >\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create Method Building Blocks to use them for the Business Model Development\r\n    Methods\r\n  </div>\r\n\r\n  <app-list-wrapper\r\n    listTitle=\"Method Building Blocks\"\r\n    [reloading]=\"reloading\"\r\n    [loading]=\"loading\"\r\n    [noResults]=\"noResults\"\r\n  >\r\n    <div noResults>No Method Building Blocks defined.</div>\r\n    <ul results class=\"list-group\">\r\n      <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"let developmentMethod of developmentMethodsList\"\r\n      >\r\n        <app-results-list-item\r\n          [viewLink]=\"['methodview', developmentMethod._id]\"\r\n          (delete)=\"openDeleteDevelopmentMethodModal(developmentMethod)\"\r\n        >\r\n          <ng-container itemTitle>\r\n            {{ developmentMethod.name }}\r\n          </ng-container>\r\n          <ng-container itemDescription>\r\n            {{ developmentMethod.description }}\r\n          </ng-container>\r\n          <app-author-info\r\n            [author]=\"developmentMethod.author\"\r\n          ></app-author-info>\r\n        </app-results-list-item>\r\n      </li>\r\n    </ul>\r\n  </app-list-wrapper>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Add Method Building Block\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"developmentMethodForm\"\r\n        (ngSubmit)=\"addDevelopmentMethod(developmentMethodForm)\"\r\n      >\r\n        <div class=\"form-group row\">\r\n          <label for=\"name\" class=\"col-sm-4 col-form-label\"\r\n            >Method Building Block Name</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!developmentMethodForm.valid\"\r\n            >\r\n              Add Method Building Block\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BmProcessesComponent } from './bm-processes/bm-processes.component';\r\nimport { BmProcessComponent } from './bm-process/bm-process.component';\r\nimport { DevelopmentMethodsComponent } from './development-methods/development-methods.component';\r\nimport { DevelopmentMethodComponent } from './development-method/development-method.component';\r\nimport { ProcessPatternsComponent } from './process-patterns/process-patterns.component';\r\nimport { ProcessPatternComponent } from './process-pattern/process-pattern.component';\r\nimport { DiagramChangeGuard } from './shared/diagram-change.guard';\r\nimport { SituationalFactorsComponent } from './situational-factors/situational-factors.component';\r\nimport { SituationalFactorComponent } from './situational-factor/situational-factor.component';\r\nimport { ArtifactsComponent } from './artifacts/artifacts.component';\r\nimport { ArtifactComponent } from './artifact/artifact.component';\r\nimport { StakeholdersComponent } from './stakeholders/stakeholders.component';\r\nimport { StakeholderComponent } from './stakeholder/stakeholder.component';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { ToolComponent } from './tool/tool.component';\r\nimport { TypesComponent } from './types/types.component';\r\nimport { TypeComponent } from './type/type.component';\r\nimport { RunningProcessesComponent } from './running-processes/running-processes.component';\r\nimport { RunningProcessComponent } from './running-process/running-process.component';\r\nimport { RunningProcessMethodComponent } from './running-process-method/running-process-method.component';\r\nimport { DomainsComponent } from './domains/domains.component';\r\nimport { DomainComponent } from './domain/domain.component';\r\nimport { AuthGuard } from '../database/auth.guard';\r\nimport { MethodElementsComponent } from './method-elements/method-elements.component';\r\nimport { ConcreteArtifactsComponent } from './concrete-artifacts/concrete-artifacts.component';\r\nimport { ConcreteArtifactComponent } from './concrete-artifact/concrete-artifact.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'bmprocess',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: BmProcessesComponent },\r\n      {\r\n        path: 'bmprocessview/:id',\r\n        component: BmProcessComponent,\r\n        canDeactivate: [DiagramChangeGuard],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'concreteArtifacts',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: ConcreteArtifactsComponent },\r\n      {\r\n        path: 'detail/:id',\r\n        component: ConcreteArtifactComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'methods',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: DevelopmentMethodsComponent },\r\n      { path: 'methodview/:id', component: DevelopmentMethodComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: 'process',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: ProcessPatternsComponent },\r\n      {\r\n        path: 'processview/:id',\r\n        component: ProcessPatternComponent,\r\n        canDeactivate: [DiagramChangeGuard],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'domains',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: DomainsComponent },\r\n      { path: 'detail/:id', component: DomainComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: 'methodElements',\r\n    component: MethodElementsComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'artifacts',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: ArtifactsComponent },\r\n      { path: 'detail/:id', component: ArtifactComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: 'situationalFactors',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: SituationalFactorsComponent },\r\n      { path: 'detail/:id', component: SituationalFactorComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: 'stakeholders',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: StakeholdersComponent },\r\n      { path: 'detail/:id', component: StakeholderComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: 'tools',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: ToolsComponent },\r\n      { path: 'detail/:id', component: ToolComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: 'types',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: TypesComponent },\r\n      { path: 'detail/:id', component: TypeComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: 'runningprocess',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: RunningProcessesComponent },\r\n      {\r\n        path: 'runningprocessview/:id',\r\n        children: [\r\n          { path: '', component: RunningProcessComponent },\r\n          {\r\n            path: 'method/:executionId',\r\n            component: RunningProcessMethodComponent,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DevelopmentProcessesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { BmProcessComponent } from './bm-process/bm-process.component';\r\nimport { BmProcessDiagramComponent } from './bm-process-diagram/bm-process-diagram.component';\r\nimport { BmProcessesComponent } from './bm-processes/bm-processes.component';\r\nimport { DevelopmentMethodComponent } from './development-method/development-method.component';\r\nimport { DevelopmentMethodsComponent } from './development-methods/development-methods.component';\r\nimport { DevelopmentProcessesRoutingModule } from './development-processes-routing.module';\r\nimport { ProcessPatternComponent } from './process-pattern/process-pattern.component';\r\nimport { ProcessPatternDiagramComponent } from './process-pattern-diagram/process-pattern-diagram.component';\r\nimport { ProcessPatternTypesFormComponent } from './process-pattern-types-form/process-pattern-types-form.component';\r\nimport { ProcessPatternsComponent } from './process-patterns/process-patterns.component';\r\nimport { ConfirmLeaveModalComponent } from './confirm-leave-modal/confirm-leave-modal.component';\r\nimport { SituationalFactorsComponent } from './situational-factors/situational-factors.component';\r\nimport { SituationalFactorComponent } from './situational-factor/situational-factor.component';\r\nimport { MethodElementListComponent } from './method-element-list/method-element-list.component';\r\nimport { MethodElementFormComponent } from './method-element-form/method-element-form.component';\r\nimport { ArtifactsComponent } from './artifacts/artifacts.component';\r\nimport { ArtifactComponent } from './artifact/artifact.component';\r\nimport { StakeholdersComponent } from './stakeholders/stakeholders.component';\r\nimport { StakeholderComponent } from './stakeholder/stakeholder.component';\r\nimport { ToolComponent } from './tool/tool.component';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { TypesComponent } from './types/types.component';\r\nimport { TypeComponent } from './type/type.component';\r\nimport { MethodElementSelectionFormComponent } from './method-element-selection-form/method-element-selection-form.component';\r\nimport { MethodElementsSelectionFormComponent } from './method-elements-selection-form/method-elements-selection-form.component';\r\nimport { TypesSelectionFormComponent } from './types-selection-form/types-selection-form.component';\r\nimport { SituationalFactorsSelectionFormComponent } from './situational-factors-selection-form/situational-factors-selection-form.component';\r\nimport { SituationalFactorSelectionFormComponent } from './situational-factor-selection-form/situational-factor-selection-form.component';\r\nimport { ArtifactsSelectionFormComponent } from './artifacts-selection-form/artifacts-selection-form.component';\r\nimport { StakeholdersSelectionFormComponent } from './stakeholders-selection-form/stakeholders-selection-form.component';\r\nimport { ToolsSelectionFormComponent } from './tools-selection-form/tools-selection-form.component';\r\nimport { ExamplesFormComponent } from './examples-form/examples-form.component';\r\nimport { MethodInfoComponent } from './method-info/method-info.component';\r\nimport { MethodElementGroupInfoComponent } from './method-element-group-info/method-element-group-info.component';\r\nimport { MethodElementInfoComponent } from './method-element-info/method-element-info.component';\r\nimport { ArtifactsGroupInfoComponent } from './artifacts-group-info/artifacts-group-info.component';\r\nimport { StakeholdersGroupInfoComponent } from './stakeholders-group-info/stakeholders-group-info.component';\r\nimport { SituationalFactorsOverviewComponent } from './situational-factors-overview/situational-factors-overview.component';\r\nimport { PatternInfoComponent } from './pattern-info/pattern-info.component';\r\nimport { DevelopmentMethodSelectionFormComponent } from './development-method-selection-form/development-method-selection-form.component';\r\nimport { DevelopmentMethodsSelectionFormComponent } from './development-methods-selection-form/development-methods-selection-form.component';\r\nimport { ProcessPatternSelectionFormComponent } from './process-pattern-selection-form/process-pattern-selection-form.component';\r\nimport { ProcessPatternsSelectionFormComponent } from './process-patterns-selection-form/process-patterns-selection-form.component';\r\nimport { DevelopmentMethodSummaryComponent } from './development-method-summary/development-method-summary.component';\r\nimport { ToolsGroupInfoComponent } from './tools-group-info/tools-group-info.component';\r\nimport { RunningProcessComponent } from './running-process/running-process.component';\r\nimport { RunningProcessesComponent } from './running-processes/running-processes.component';\r\nimport { RunningProcessSelectOutputArtifactsComponent } from './running-process-select-output-artifacts/running-process-select-output-artifacts.component';\r\nimport { RunningProcessSelectInputArtifactsComponent } from './running-process-select-input-artifacts/running-process-select-input-artifacts.component';\r\nimport { DevelopmentMethodSelectExecutionStepsComponent } from './development-method-select-execution-steps/development-method-select-execution-steps.component';\r\nimport { DevelopmentMethodSelectExecutionStepComponent } from './development-method-select-execution-step/development-method-select-execution-step.component';\r\nimport { DevelopmentMethodArtifactMappingComponent } from './development-method-artifact-mapping/development-method-artifact-mapping.component';\r\nimport { DevelopmentMethodArtifactMappingsComponent } from './development-method-artifact-mappings/development-method-artifact-mappings.component';\r\nimport { RunningProcessMethodComponent } from './running-process-method/running-process-method.component';\r\nimport { ConfigurationFormPlaceholderDirective } from './configuration-form-placeholder.directive';\r\nimport { MethodInfoStepComponent } from './method-info-step/method-info-step.component';\r\nimport { MethodInfoStepsComponent } from './method-info-steps/method-info-steps.component';\r\nimport { DomainComponent } from './domain/domain.component';\r\nimport { DomainsComponent } from './domains/domains.component';\r\nimport { SituationalFactorFormComponent } from './situational-factor-form/situational-factor-form.component';\r\nimport { ArtifactDefinitionFormComponent } from './artifact-definition-form/artifact-definition-form.component';\r\nimport { MethodElementsComponent } from './method-elements/method-elements.component';\r\nimport { ConcreteArtifactsComponent } from './concrete-artifacts/concrete-artifacts.component';\r\nimport { ConcreteArtifactComponent } from './concrete-artifact/concrete-artifact.component';\r\nimport { RunningProcessArtifactExportFormComponent } from './running-process-artifact-export-form/running-process-artifact-export-form.component';\r\nimport { ConcreteArtifactFormComponent } from './concrete-artifact-form/concrete-artifact-form.component';\r\nimport { RunningProcessArtifactImportFormComponent } from './running-process-artifact-import-form/running-process-artifact-import-form.component';\r\nimport { RunningProcessArtifactRenameFormComponent } from './running-process-artifact-rename-form/running-process-artifact-rename-form.component';\r\nimport { MultiplePipe } from './pipes/multiple.pipe';\r\nimport { ListPipe } from './pipes/list.pipe';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { RunningProcessSelectOutputArtifactComponent } from './running-process-select-output-artifact/running-process-select-output-artifact.component';\r\nimport { DevelopmentMethodIncompleteModalComponent } from './development-method-incomplete-modal/development-method-incomplete-modal.component';\r\nimport { DevelopmentMethodFormComponent } from './development-method-form/development-method-form.component';\r\nimport { ProcessPatternFormComponent } from './process-pattern-form/process-pattern-form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BmProcessComponent,\r\n    BmProcessDiagramComponent,\r\n    BmProcessesComponent,\r\n    DevelopmentMethodComponent,\r\n    DevelopmentMethodsComponent,\r\n    ProcessPatternComponent,\r\n    ProcessPatternDiagramComponent,\r\n    ProcessPatternTypesFormComponent,\r\n    ProcessPatternsComponent,\r\n    ConfirmLeaveModalComponent,\r\n    SituationalFactorsComponent,\r\n    SituationalFactorComponent,\r\n    MethodElementListComponent,\r\n    MethodElementFormComponent,\r\n    ArtifactsComponent,\r\n    ArtifactComponent,\r\n    StakeholdersComponent,\r\n    StakeholderComponent,\r\n    ToolComponent,\r\n    ToolsComponent,\r\n    TypesComponent,\r\n    TypeComponent,\r\n    MethodElementSelectionFormComponent,\r\n    MethodElementsSelectionFormComponent,\r\n    TypesSelectionFormComponent,\r\n    SituationalFactorsSelectionFormComponent,\r\n    SituationalFactorSelectionFormComponent,\r\n    ArtifactsSelectionFormComponent,\r\n    StakeholdersSelectionFormComponent,\r\n    ToolsSelectionFormComponent,\r\n    ExamplesFormComponent,\r\n    MethodInfoComponent,\r\n    MethodElementGroupInfoComponent,\r\n    MethodElementInfoComponent,\r\n    ArtifactsGroupInfoComponent,\r\n    StakeholdersGroupInfoComponent,\r\n    SituationalFactorsOverviewComponent,\r\n    PatternInfoComponent,\r\n    DevelopmentMethodSelectionFormComponent,\r\n    DevelopmentMethodsSelectionFormComponent,\r\n    ProcessPatternSelectionFormComponent,\r\n    ProcessPatternsSelectionFormComponent,\r\n    DevelopmentMethodSummaryComponent,\r\n    ToolsGroupInfoComponent,\r\n    RunningProcessComponent,\r\n    RunningProcessesComponent,\r\n    RunningProcessSelectOutputArtifactsComponent,\r\n    RunningProcessSelectInputArtifactsComponent,\r\n    DevelopmentMethodSelectExecutionStepsComponent,\r\n    DevelopmentMethodSelectExecutionStepComponent,\r\n    DevelopmentMethodArtifactMappingComponent,\r\n    DevelopmentMethodArtifactMappingsComponent,\r\n    RunningProcessMethodComponent,\r\n    ConfigurationFormPlaceholderDirective,\r\n    MethodInfoStepComponent,\r\n    MethodInfoStepsComponent,\r\n    DomainComponent,\r\n    DomainsComponent,\r\n    SituationalFactorFormComponent,\r\n    ArtifactDefinitionFormComponent,\r\n    MethodElementsComponent,\r\n    ConcreteArtifactsComponent,\r\n    ConcreteArtifactComponent,\r\n    RunningProcessArtifactExportFormComponent,\r\n    ConcreteArtifactFormComponent,\r\n    RunningProcessArtifactImportFormComponent,\r\n    RunningProcessArtifactRenameFormComponent,\r\n    MultiplePipe,\r\n    ListPipe,\r\n    RunningProcessSelectOutputArtifactComponent,\r\n    DevelopmentMethodIncompleteModalComponent,\r\n    DevelopmentMethodFormComponent,\r\n    ProcessPatternFormComponent,\r\n  ],\r\n  imports: [DevelopmentProcessesRoutingModule, SharedModule, QuillModule],\r\n})\r\nexport class DevelopmentProcessesModule {}\r\n","import { Component } from '@angular/core';\r\nimport { DomainService } from '../../development-process-registry/knowledge/domain.service';\r\nimport { DomainLoaderService } from '../shared/domain-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-domain',\r\n  templateUrl: './domain.component.html',\r\n  styleUrls: ['./domain.component.css'],\r\n  providers: [DomainLoaderService],\r\n})\r\nexport class DomainComponent {\r\n  constructor(\r\n    private domainLoaderService: DomainLoaderService,\r\n    private domainService: DomainService\r\n  ) {}\r\n\r\n  async updateDescription(description: any) {\r\n    await this.domainService.update(this.domain._id, description);\r\n  }\r\n\r\n  get domain() {\r\n    return this.domainLoaderService.domain;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"domain\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'domains']\">Domains</a>\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">{{ domain.name }}</a>\r\n  </nav>\r\n</div>\r\n\r\n<main class=\"container\" *ngIf=\"domain\">\r\n  <div class=\"alert alert-info mt-3\" role=\"alert\">\r\n    Update a Domain and define its values.\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Domain</h6>\r\n    <div class=\"text-muted\">\r\n      <app-description-form\r\n        [description]=\"domain.description\"\r\n        (submitDescriptionForm)=\"updateDescription($event.value)\"\r\n      ></app-description-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DomainService } from '../../development-process-registry/knowledge/domain.service';\r\nimport {\r\n  Domain,\r\n  DomainEntry,\r\n  DomainInit,\r\n} from '../../development-process-registry/knowledge/domain';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ELEMENT_SERVICE, ListService } from '../../shared/list.service';\r\n\r\n@Component({\r\n  selector: 'app-domains',\r\n  templateUrl: './domains.component.html',\r\n  styleUrls: ['./domains.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: DomainService },\r\n  ],\r\n})\r\nexport class DomainsComponent {\r\n  domainForm: FormGroup = this.fb.group({\r\n    name: ['', Validators.required],\r\n  });\r\n\r\n  modalDomain: DomainEntry;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteDomainModal', { static: true })\r\n  deleteDomainModal: unknown;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private listService: ListService<Domain, DomainInit>,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  async addDomain(): Promise<void> {\r\n    await this.listService.add(this.domainForm.value);\r\n    this.domainForm.reset();\r\n  }\r\n\r\n  openDeleteDomainModal(domain: DomainEntry): void {\r\n    this.modalDomain = domain;\r\n    this.modalReference = this.modalService.open(this.deleteDomainModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async deleteDomain(domain: DomainEntry): Promise<void> {\r\n    await this.listService.delete(domain._id);\r\n  }\r\n\r\n  getRouterLink(domain: DomainEntry): string[] {\r\n    return ['/', 'domains', 'detail', domain._id];\r\n  }\r\n\r\n  get domains(): DomainEntry[] {\r\n    return this.listService.elements;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.listService.noResults;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.listService.loading;\r\n  }\r\n\r\n  get reloading(): boolean {\r\n    return this.listService.reloading;\r\n  }\r\n}\r\n","<ng-template #deleteDomainModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal (dismiss)=\"d()\" (delete)=\"deleteDomain(modalDomain); c()\">\r\n    <div modalTitle>Delete Domain {{ modalDomain.name }}</div>\r\n    You are deleting the domain {{ modalDomain.name }}. This can not be undone.\r\n    This action will not delete the domain from models that are using it.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Domains</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create Domains to use them for canvas building blocks.\r\n  </div>\r\n\r\n  <app-list-wrapper\r\n    listTitle=\"Domains\"\r\n    [loading]=\"loading\"\r\n    [reloading]=\"reloading\"\r\n    [noResults]=\"noResults\"\r\n  >\r\n    <div noResults>No domains defined.</div>\r\n    <ul results class=\"list-group\">\r\n      <li\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-baseline\r\n        \"\r\n        *ngFor=\"let domain of domains\"\r\n      >\r\n        <div>{{ domain.name }}</div>\r\n        <div>\r\n          <a\r\n            [routerLink]=\"getRouterLink(domain)\"\r\n            type=\"button\"\r\n            class=\"btn btn-dark btn-xs mr-1\"\r\n          >\r\n            View\r\n          </a>\r\n          <button\r\n            (click)=\"openDeleteDomainModal(domain)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </app-list-wrapper>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Add Domain</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form [formGroup]=\"domainForm\" (ngSubmit)=\"addDomain()\">\r\n        <div class=\"form-group row\">\r\n          <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!domainForm.valid\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-examples-form',\r\n  templateUrl: './examples-form.component.html',\r\n  styleUrls: ['./examples-form.component.css'],\r\n})\r\nexport class ExamplesFormComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() examples: string[];\r\n\r\n  @Output() submitExamplesForm = new EventEmitter<FormArray>();\r\n\r\n  examplesForm: FormGroup = this.fb.group({\r\n    examples: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.changeSubscription = this.examplesForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !this.equalExamples(this.examples, value.examples))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.examples) {\r\n      const oldExamples = changes.examples.previousValue;\r\n      const newExamples = changes.examples.currentValue;\r\n      if (!this.equalExamples(oldExamples, newExamples)) {\r\n        this.loadForm(changes.examples.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitExamplesForm.emit(this.formArray);\r\n  }\r\n\r\n  private loadForm(examples: string[]) {\r\n    const formGroups = examples.map((example) =>\r\n      this.fb.control(example, Validators.required)\r\n    );\r\n    this.examplesForm.setControl('examples', this.fb.array(formGroups));\r\n  }\r\n\r\n  private equalExamples(examplesA: string[], examplesB: string[]) {\r\n    if (examplesA == null && examplesB == null) {\r\n      return true;\r\n    }\r\n    if (examplesA == null || examplesB == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      examplesA.length === examplesB.length &&\r\n      examplesA.every((exampleA, index) => examplesB[index] === exampleA)\r\n    );\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.examplesForm.get('examples') as FormArray;\r\n  }\r\n}\r\n","<form [formGroup]=\"examplesForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group\" formArrayName=\"examples\">\r\n    <app-form-array-list\r\n      elementName=\"Example\"\r\n      [formArray]=\"formArray\"\r\n    ></app-form-array-list>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!examplesForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MethodElement } from '../../development-process-registry/method-elements/method-element';\r\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\r\nimport { getTypeaheadInputPipe } from '../../shared/utils';\r\nimport { debounceTime, map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-method-element-form',\r\n  templateUrl: './method-element-form.component.html',\r\n  styleUrls: ['./method-element-form.component.css'],\r\n})\r\nexport class MethodElementFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() methodElement: MethodElement = null;\r\n  @Input() listNames: string[] = [];\r\n\r\n  @Output() submitMethodElementForm = new EventEmitter<FormGroup>();\r\n\r\n  methodElementForm: FormGroup = this.fb.group({\r\n    name: ['', Validators.required],\r\n    list: ['', Validators.required],\r\n    description: [''],\r\n  });\r\n  changed = false;\r\n\r\n  openListInput = new Subject<string>();\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.changeSubscription = this.methodElementForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed =\r\n              this.methodElement !== null &&\r\n              !this.equals(this.methodElement, value))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.methodElement) {\r\n      const oldMethodElement: MethodElement =\r\n        changes.methodElement.previousValue;\r\n      const newMethodElement: MethodElement =\r\n        changes.methodElement.currentValue;\r\n      if (!this.equals(newMethodElement, oldMethodElement)) {\r\n        this.loadForm(newMethodElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n    this.openListInput.complete();\r\n  }\r\n\r\n  private loadForm(methodElement: MethodElement) {\r\n    this.methodElementForm.patchValue(methodElement);\r\n  }\r\n\r\n  private equals(\r\n    methodElementA: MethodElement,\r\n    methodElementB: MethodElement\r\n  ): boolean {\r\n    if (methodElementA == null && methodElementB == null) {\r\n      return true;\r\n    }\r\n    if (methodElementA == null || methodElementB == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      methodElementA.list === methodElementB.list &&\r\n      methodElementA.description === methodElementB.description\r\n    );\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitMethodElementForm.emit(this.methodElementForm);\r\n    if (this.methodElement === null) {\r\n      this.methodElementForm.reset();\r\n    }\r\n  }\r\n\r\n  searchLists = (input: Observable<string>) => {\r\n    return merge(getTypeaheadInputPipe(input), this.openListInput).pipe(\r\n      map((term) =>\r\n        this.listNames\r\n          .filter((listItem) =>\r\n            listItem.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 10)\r\n      )\r\n    );\r\n  };\r\n}\r\n","<form [formGroup]=\"methodElementForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group row\" *ngIf=\"!methodElement\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"list\" class=\"col-sm-4 col-form-label\">List</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"list\"\r\n        class=\"form-control\"\r\n        id=\"list\"\r\n        [ngbTypeahead]=\"searchLists\"\r\n        (click)=\"openListInput.next($any($event.target).value)\"\r\n        (focus)=\"openListInput.next($any($event.target).value)\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\" *ngIf=\"methodElement\">\r\n    <label for=\"description\">Description</label>\r\n    <textarea\r\n      formControlName=\"description\"\r\n      class=\"form-control\"\r\n      id=\"description\"\r\n      rows=\"3\"\r\n    ></textarea>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        *ngIf=\"!methodElement\"\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        [disabled]=\"!methodElementForm.valid\"\r\n      >\r\n        Add\r\n      </button>\r\n      <button\r\n        *ngIf=\"methodElement\"\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!methodElementForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n} from '../../development-process-registry/method-elements/method-element';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { GroupSelection } from '../../development-process-registry/bm-process/decision';\r\nimport { MultipleSelection } from '../../development-process-registry/development-method/multiple-selection';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-method-element-group-info',\r\n  templateUrl: './method-element-group-info.component.html',\r\n  styleUrls: ['./method-element-group-info.component.css'],\r\n})\r\nexport class MethodElementGroupInfoComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() methodElementName: string;\r\n\r\n  @Input() groups: MultipleSelection<MethodElement>[][];\r\n  @Input() selection: GroupSelection<MethodElement>;\r\n\r\n  @Input() methodElements: MethodElementEntry[] = [];\r\n\r\n  @Output() submitGroupsForm = new EventEmitter<FormGroup>();\r\n\r\n  form: FormGroup = this.fb.group({\r\n    selectedGroup: [null, Validators.required],\r\n    elements: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  private selectedIndexSubscription: Subscription;\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.selectedIndexSubscription =\r\n      this.selectedGroupControl.valueChanges.subscribe((value) =>\r\n        this.generateControls(value)\r\n      );\r\n    this.changeSubscription = this.form.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap((value) => (this.changed = !this.selection.equals(value)))\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.groups) {\r\n      this.loadForm();\r\n    } else if (changes.selection) {\r\n      const oldSelection: GroupSelection<MethodElement> =\r\n        changes.selection.previousValue;\r\n      const newSelection: GroupSelection<MethodElement> =\r\n        changes.selection.currentValue;\r\n      if (!newSelection.equals(oldSelection)) {\r\n        this.loadForm();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.selectedIndexSubscription) {\r\n      this.selectedIndexSubscription.unsubscribe();\r\n    }\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitGroupsForm.emit(this.form);\r\n  }\r\n\r\n  private loadForm(): void {\r\n    this.selectedGroupControl.setValue(this.selection.selectedGroup, {\r\n      emitEvent: false,\r\n    });\r\n    this.generateControls(this.selection.selectedGroup);\r\n    if (this.selection.elements) {\r\n      this.elementsFormArray.patchValue(this.selection.elements);\r\n    }\r\n  }\r\n\r\n  private generateControls(selectedGroup: number): void {\r\n    if (selectedGroup !== null) {\r\n      const elements = this.groups[selectedGroup].map((element, index) => {\r\n        if (\r\n          element.multiple &&\r\n          this.selection.elements &&\r\n          this.selection.elements[index]\r\n        ) {\r\n          return this.fb.array(\r\n            this.selection.elements[index].map(() =>\r\n              this.fb.control(null, Validators.required)\r\n            )\r\n          );\r\n        }\r\n        return this.fb.array(element.multiple ? [] : [this.fb.control(null)]);\r\n      });\r\n      this.form.setControl('elements', this.fb.array(elements));\r\n    } else {\r\n      this.form.setControl('elements', this.fb.control(null));\r\n    }\r\n  }\r\n\r\n  get selectedGroupControl(): FormControl {\r\n    return this.form.get('selectedGroup') as FormControl;\r\n  }\r\n\r\n  get selectedGroup(): number {\r\n    return this.selectedGroupControl.value;\r\n  }\r\n\r\n  get elementsFormArray(): FormArray {\r\n    return this.form.get('elements') as FormArray;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n  <ul\r\n    class=\"form-group list-group\"\r\n    ngbRadioGroup\r\n    formControlName=\"selectedGroup\"\r\n  >\r\n    <li *ngFor=\"let group of groups; let index = index\" class=\"list-group-item\">\r\n      <ul class=\"list-group shadow-sm\">\r\n        <li\r\n          [class.list-group-item-secondary]=\"selectedGroup !== index\"\r\n          [class.list-group-item-primary]=\"selectedGroup === index\"\r\n          class=\"list-group-item d-flex align-items-baseline\"\r\n        >\r\n          <h5 class=\"mb-0\" *ngIf=\"group.length > 0\">Group</h5>\r\n          <h5 class=\"mb-0\" *ngIf=\"group.length === 0\">None</h5>\r\n          <div class=\"ml-auto btn-group btn-group-toggle\">\r\n            <label ngbButtonLabel class=\"btn-primary\">\r\n              <input ngbButton type=\"radio\" [value]=\"index\" /> Select\r\n            </label>\r\n          </div>\r\n        </li>\r\n        <ng-container *ngIf=\"selectedGroup !== index\">\r\n          <li *ngFor=\"let element of group\" class=\"list-group-item\">\r\n            <app-method-element-info\r\n              [element]=\"element\"\r\n              [methodElementName]=\"methodElementName\"\r\n            ></app-method-element-info>\r\n          </li>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"selectedGroup === index\">\r\n          <li\r\n            *ngFor=\"let element of group; let elementIndex = index\"\r\n            class=\"list-group-item\"\r\n            formArrayName=\"elements\"\r\n          >\r\n            <app-method-element-info\r\n              [formArrayName]=\"elementIndex.toString()\"\r\n              [element]=\"element\"\r\n              [methodElements]=\"methodElements\"\r\n              [methodElementName]=\"methodElementName\"\r\n            ></app-method-element-info>\r\n          </li>\r\n        </ng-container>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n  <div *ngIf=\"groups.length > 0\" class=\"form-group row mt-3\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!form.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, Input, Optional } from '@angular/core';\r\nimport {\r\n  MethodElement,\r\n  MethodElementEntry,\r\n} from '../../development-process-registry/method-elements/method-element';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport {\r\n  FormArray,\r\n  FormArrayName,\r\n  FormBuilder,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { getTypeaheadInputPipe } from '../../shared/utils';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { MultipleSelection } from '../../development-process-registry/development-method/multiple-selection';\r\n\r\n@Component({\r\n  selector: 'app-method-element-info',\r\n  templateUrl: './method-element-info.component.html',\r\n  styleUrls: ['./method-element-info.component.css'],\r\n})\r\nexport class MethodElementInfoComponent {\r\n  @Input() methodElementName: string;\r\n\r\n  @Input() element: MultipleSelection<MethodElement>;\r\n\r\n  @Input() methodElements: MethodElementEntry[] = [];\r\n\r\n  openElementInput = new Subject<[HTMLInputElement, string]>();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    @Optional() private formArrayName: FormArrayName\r\n  ) {}\r\n\r\n  searchElements =\r\n    (field: HTMLInputElement) =>\r\n    (input: Observable<string>): Observable<MethodElementEntry[]> => {\r\n      return merge(\r\n        getTypeaheadInputPipe(input),\r\n        this.openElementInput.pipe(\r\n          filter(([f]) => f === field),\r\n          map(([, i]) => i)\r\n        )\r\n      ).pipe(\r\n        map((term) =>\r\n          this.methodElements\r\n            .filter(\r\n              (methodElement) =>\r\n                methodElement.list.toLowerCase() ===\r\n                  this.element.list.toLowerCase() &&\r\n                methodElement.name.toLowerCase().includes(term.toLowerCase())\r\n            )\r\n            .slice(0, 7)\r\n        )\r\n      );\r\n    };\r\n\r\n  add(index: number = null): void {\r\n    if (index === null) {\r\n      index = this.formArray.length;\r\n    }\r\n    this.formArray.insert(index, this.fb.control(null, Validators.required));\r\n  }\r\n\r\n  remove(index: number): void {\r\n    this.formArray.removeAt(index);\r\n  }\r\n\r\n  formatter(x: { name: string }): string {\r\n    return x.name;\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.formArrayName ? this.formArrayName.control : null;\r\n  }\r\n}\r\n","<div class=\"form-row\">\r\n  <div class=\"form-group col\">\r\n    <label for=\"listInput\">List</label>\r\n    <input\r\n      readonly\r\n      type=\"text\"\r\n      [value]=\"element.list | multiple: element.multiple\"\r\n      class=\"form-control-plaintext\"\r\n      id=\"listInput\"\r\n    />\r\n  </div>\r\n  <div class=\"form-group col\" *ngIf=\"element.element == null\">\r\n    <label for=\"elementInput\">{{ methodElementName }}</label>\r\n    <div class=\"input-group\" *ngIf=\"formArray && formArray.length > 0\">\r\n      <input\r\n        *ngIf=\"formArray.length > 0\"\r\n        #input\r\n        type=\"text\"\r\n        [formControl]=\"$any(formArray.controls[0])\"\r\n        class=\"form-control\"\r\n        id=\"elementInput\"\r\n        [ngbTypeahead]=\"searchElements(input)\"\r\n        [editable]=\"false\"\r\n        [resultFormatter]=\"formatter\"\r\n        [inputFormatter]=\"formatter\"\r\n        (click)=\"openElementInput.next([input, $any($event.target).value])\"\r\n        (focus)=\"openElementInput.next([input, $any($event.target).value])\"\r\n      />\r\n      <div class=\"input-group-append\" *ngIf=\"element.multiple\">\r\n        <button\r\n          (click)=\"add(1)\"\r\n          class=\"btn btn-outline-secondary align-self-baseline\"\r\n          type=\"button\"\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          *ngIf=\"formArray.length > 0\"\r\n          (click)=\"remove(0)\"\r\n          class=\"btn btn-outline-secondary align-self-baseline\"\r\n          type=\"button\"\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"formArray && formArray.length === 0\">\r\n      <button\r\n        (click)=\"add()\"\r\n        class=\"btn btn-outline-secondary align-self-baseline\"\r\n        type=\"button\"\r\n      >\r\n        +\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group col\" *ngIf=\"element.element != null\">\r\n    <label for=\"elementInputStatic\">{{ methodElementName }}</label>\r\n    <input\r\n      readonly\r\n      type=\"text\"\r\n      [value]=\"element.element.name | multiple: element.multipleElements\"\r\n      class=\"form-control-plaintext\"\r\n      id=\"elementInputStatic\"\r\n    />\r\n  </div>\r\n</div>\r\n<ng-container *ngIf=\"formArray && element.multiple\">\r\n  <div\r\n    *ngFor=\"let control of formArray.controls.slice(1); let index = index\"\r\n    class=\"form-row\"\r\n  >\r\n    <div class=\"form-group col\"></div>\r\n    <div class=\"form-group col\">\r\n      <label for=\"elementMultipleInput\" class=\"sr-only\">{{\r\n        methodElementName\r\n      }}</label>\r\n      <div class=\"input-group\">\r\n        <input\r\n          #input\r\n          type=\"text\"\r\n          [formControl]=\"$any(control)\"\r\n          class=\"form-control\"\r\n          id=\"elementMultipleInput\"\r\n          [ngbTypeahead]=\"searchElements(input)\"\r\n          [editable]=\"false\"\r\n          [resultFormatter]=\"formatter\"\r\n          [inputFormatter]=\"formatter\"\r\n          (click)=\"openElementInput.next([input, $any($event.target).value])\"\r\n          (focus)=\"openElementInput.next([input, $any($event.target).value])\"\r\n        />\r\n        <div class=\"input-group-append\" *ngIf=\"element.multiple\">\r\n          <button\r\n            (click)=\"add(index + 2)\"\r\n            class=\"btn btn-outline-secondary align-self-baseline\"\r\n            type=\"button\"\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            (click)=\"remove(index + 1)\"\r\n            class=\"btn btn-outline-secondary align-self-baseline\"\r\n            type=\"button\"\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MethodElement } from '../../development-process-registry/method-elements/method-element';\r\n\r\n@Component({\r\n  selector: 'app-method-element-list',\r\n  templateUrl: './method-element-list.component.html',\r\n  styleUrls: ['./method-element-list.component.css'],\r\n})\r\nexport class MethodElementListComponent<T extends MethodElement> {\r\n  @Input() listTitle: string;\r\n  @Input() elementLists: { listName: string; elements: T[] }[] = null;\r\n  @Input() getRouterLink: (element: T) => string[] = (element) => [\r\n    'detail',\r\n    element._id,\r\n  ];\r\n  @Output() deleteElement = new EventEmitter<T>();\r\n}\r\n","<app-list-wrapper\r\n  [listTitle]=\"listTitle\"\r\n  [loading]=\"elementLists == null\"\r\n  [noResults]=\"elementLists && elementLists.length === 0\"\r\n>\r\n  <div noResults>No elements defined.</div>\r\n  <div\r\n    results\r\n    *ngFor=\"let list of elementLists\"\r\n    class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n  >\r\n    <h6 class=\"border-bottom border-gray pb-2\">{{ list.listName }}</h6>\r\n    <ul class=\"list-group\">\r\n      <li\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-baseline\r\n        \"\r\n        *ngFor=\"let element of list.elements\"\r\n      >\r\n        <div>\r\n          <span>{{ element.name }}</span>\r\n        </div>\r\n        <div>\r\n          <a\r\n            [routerLink]=\"getRouterLink(element)\"\r\n            type=\"button\"\r\n            class=\"btn btn-dark btn-xs mr-1\"\r\n          >\r\n            View\r\n          </a>\r\n          <button\r\n            (click)=\"deleteElement.emit(element)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</app-list-wrapper>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { MethodElementEntry } from '../../development-process-registry/method-elements/method-element';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormGroupDirective,\r\n} from '@angular/forms';\r\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { getTypeaheadInputPipe } from '../../shared/utils';\r\n\r\n@Component({\r\n  selector: 'app-method-element-selection-form',\r\n  templateUrl: './method-element-selection-form.component.html',\r\n  styleUrls: ['./method-element-selection-form.component.css'],\r\n})\r\nexport class MethodElementSelectionFormComponent implements OnInit, OnDestroy {\r\n  @Input() methodElementName: string;\r\n  @Input() multipleAllowed = false;\r\n\r\n  @Input() methodElements: MethodElementEntry[] = [];\r\n  @Input() listNames: string[] = [];\r\n\r\n  @Output() remove = new EventEmitter<void>();\r\n\r\n  private listChangeSubscription: Subscription;\r\n  private multipleChangeSubscription: Subscription;\r\n  private elementChangeSubscription: Subscription;\r\n\r\n  openListInput = new Subject<string>();\r\n  openElementInput = new Subject<string>();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private formGroupDirective: FormGroupDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.listChangeSubscription = this.listControl.valueChanges\r\n      .pipe(\r\n        filter(\r\n          (value) =>\r\n            this.elementControl.value &&\r\n            this.elementControl.value.list !== value\r\n        ),\r\n        tap(() => this.elementControl.setValue(null))\r\n      )\r\n      .subscribe();\r\n    this.elementChangeSubscription = this.elementControl.valueChanges\r\n      .pipe(\r\n        filter((value) => value && this.listControl.value !== value.list),\r\n        tap((value) => this.listControl.setValue(value.list))\r\n      )\r\n      .subscribe();\r\n    if (this.multipleAllowed) {\r\n      this.multipleChangeSubscription = this.multipleControl.valueChanges\r\n        .pipe(\r\n          tap((value) => {\r\n            if (value) {\r\n              this.elementControl.disable();\r\n              this.multipleElementsControl.disable();\r\n            } else {\r\n              this.elementControl.enable();\r\n              this.multipleElementsControl.enable();\r\n            }\r\n          }),\r\n          filter((value) => value),\r\n          tap(() => {\r\n            this.elementControl.setValue(null);\r\n            this.multipleElementsControl.setValue(false);\r\n          })\r\n        )\r\n        .subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.listChangeSubscription) {\r\n      this.listChangeSubscription.unsubscribe();\r\n    }\r\n    if (this.elementChangeSubscription) {\r\n      this.elementChangeSubscription.unsubscribe();\r\n    }\r\n    if (this.multipleChangeSubscription) {\r\n      this.multipleChangeSubscription.unsubscribe();\r\n    }\r\n    this.openListInput.complete();\r\n    this.openElementInput.complete();\r\n  }\r\n\r\n  searchLists = (input: Observable<string>): Observable<string[]> => {\r\n    return merge(getTypeaheadInputPipe(input), this.openListInput).pipe(\r\n      map((term) =>\r\n        this.listNames\r\n          .filter((listItem) =>\r\n            listItem.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 10)\r\n      )\r\n    );\r\n  };\r\n\r\n  searchElements = (\r\n    input: Observable<string>\r\n  ): Observable<MethodElementEntry[]> => {\r\n    return merge(getTypeaheadInputPipe(input), this.openElementInput).pipe(\r\n      map((term) =>\r\n        this.methodElements\r\n          .filter(\r\n            (methodElement) =>\r\n              (!this.listControl.value ||\r\n                methodElement.list.toLowerCase() ===\r\n                  this.listControl.value.toLowerCase()) &&\r\n              methodElement.name.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 7)\r\n      )\r\n    );\r\n  };\r\n\r\n  formatter(x: { name: string }): string {\r\n    return x.name;\r\n  }\r\n\r\n  get listControl(): FormControl {\r\n    return this.formGroup.get('list') as FormControl;\r\n  }\r\n\r\n  get multipleControl(): FormControl {\r\n    return this.formGroup.get('multiple') as FormControl;\r\n  }\r\n\r\n  get elementControl(): FormControl {\r\n    return this.formGroup.get('element') as FormControl;\r\n  }\r\n\r\n  get multipleElementsControl(): FormControl {\r\n    return this.formGroup.get('multipleElements') as FormControl;\r\n  }\r\n\r\n  get formGroup(): FormGroup {\r\n    return this.formGroupDirective.control;\r\n  }\r\n}\r\n","<div [formGroup]=\"formGroup\" class=\"form-row\">\r\n  <div class=\"form-group col\">\r\n    <label for=\"listInput\">List</label>\r\n    <div class=\"input-group\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"list\"\r\n        class=\"form-control\"\r\n        [class.is-invalid]=\"listControl.invalid\"\r\n        id=\"listInput\"\r\n        aria-describedby=\"listInputFeedback\"\r\n        [ngbTypeahead]=\"searchLists\"\r\n        (click)=\"openListInput.next($any($event.target).value)\"\r\n        (focus)=\"openListInput.next($any($event.target).value)\"\r\n      />\r\n      <div\r\n        class=\"input-group-append btn-group btn-group-toggle\"\r\n        *ngIf=\"multipleAllowed\"\r\n      >\r\n        <label class=\"btn-outline-secondary\" ngbButtonLabel>\r\n          <input type=\"checkbox\" formControlName=\"multiple\" ngbButton />\r\n          Multiple\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <div id=\"listInputFeedback\" class=\"invalid-feedback\">\r\n      <span *ngIf=\"listControl.hasError('required')\"\r\n        >This field is required.</span\r\n      >\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group col\">\r\n    <label for=\"elementInput\">{{ methodElementName }}</label>\r\n    <div class=\"input-group\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"element\"\r\n        class=\"form-control\"\r\n        id=\"elementInput\"\r\n        [ngbTypeahead]=\"searchElements\"\r\n        [editable]=\"false\"\r\n        [resultFormatter]=\"formatter\"\r\n        [inputFormatter]=\"formatter\"\r\n        (click)=\"openElementInput.next($any($event.target).value)\"\r\n        (focus)=\"openElementInput.next($any($event.target).value)\"\r\n      />\r\n      <div\r\n        class=\"input-group-append btn-group btn-group-toggle\"\r\n        *ngIf=\"multipleAllowed\"\r\n      >\r\n        <label class=\"btn-outline-secondary\" ngbButtonLabel>\r\n          <input type=\"checkbox\" formControlName=\"multipleElements\" ngbButton />\r\n          Multiple\r\n        </label>\r\n      </div>\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          (click)=\"remove.emit()\"\r\n          class=\"btn btn-secondary align-self-baseline\"\r\n          type=\"button\"\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\nimport { MethodElementEntry } from '../../development-process-registry/method-elements/method-element';\r\nimport { FormArray, FormArrayName, FormGroup } from '@angular/forms';\r\n\r\nexport interface TemplateContext {\r\n  formGroup: FormGroup;\r\n  index: number;\r\n  listNames: string[];\r\n  methodElements: MethodElementEntry[];\r\n  methodElementName: string;\r\n  remove: (index: number) => void;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-method-elements-selection-form',\r\n  templateUrl: './method-elements-selection-form.component.html',\r\n  styleUrls: ['./method-elements-selection-form.component.css'],\r\n})\r\nexport class MethodElementsSelectionFormComponent {\r\n  @Input() methodElementName = 'Element';\r\n  @Input() multipleAllowed = false;\r\n\r\n  @Input() methodElements: MethodElementEntry[] = [];\r\n  @Input() listNames: string[] = [];\r\n\r\n  @Input() methodElementFormTemplate: TemplateRef<unknown>;\r\n  @Input() createFormGroupFactory: () => FormGroup;\r\n\r\n  constructor(private formArrayName: FormArrayName) {}\r\n\r\n  add(): void {\r\n    this.formArray.push(this.createFormGroupFactory());\r\n  }\r\n\r\n  remove(index: number): void {\r\n    this.formArray.removeAt(index);\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.formArrayName.control;\r\n  }\r\n\r\n  getTemplateContext(formGroup: FormGroup, index: number): TemplateContext {\r\n    return {\r\n      formGroup,\r\n      index,\r\n      listNames: this.listNames,\r\n      methodElements: this.methodElements,\r\n      methodElementName: this.methodElementName,\r\n      remove: this.remove.bind(this),\r\n    };\r\n  }\r\n}\r\n","<ng-template\r\n  #defaultMethodElementSelectionForm\r\n  let-formGroup=\"formGroup\"\r\n  let-index=\"index\"\r\n>\r\n  <app-method-element-selection-form\r\n    [formGroup]=\"formGroup\"\r\n    [listNames]=\"listNames\"\r\n    [methodElements]=\"methodElements\"\r\n    [methodElementName]=\"methodElementName\"\r\n    [multipleAllowed]=\"multipleAllowed\"\r\n    (remove)=\"remove(index)\"\r\n  ></app-method-element-selection-form>\r\n</ng-template>\r\n\r\n<div class=\"form-group\">\r\n  <div *ngFor=\"let control of formArray.controls; let index = index\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        methodElementFormTemplate\r\n          ? methodElementFormTemplate\r\n          : defaultMethodElementSelectionForm;\r\n        context: getTemplateContext($any(control), index)\r\n      \"\r\n    ></ng-container>\r\n  </div>\r\n</div>\r\n<div class=\"form-group d-flex\">\r\n  <button (click)=\"add()\" type=\"button\" class=\"btn btn-secondary ml-auto\">\r\n    Add {{ methodElementName }}\r\n  </button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\ninterface MethodElementLink {\r\n  name: string;\r\n  route: string[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-method-elements',\r\n  templateUrl: './method-elements.component.html',\r\n  styleUrls: ['./method-elements.component.css'],\r\n})\r\nexport class MethodElementsComponent {\r\n  methodElementLinks: MethodElementLink[] = [\r\n    { name: 'Artifacts', route: ['/', 'artifacts'] },\r\n    { name: 'Situational Factors', route: ['/', 'situationalFactors'] },\r\n    { name: 'Stakeholders', route: ['/', 'stakeholders'] },\r\n    { name: 'Tools', route: ['/', 'tools'] },\r\n    { name: 'Types', route: ['/', 'types'] },\r\n  ];\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Method Elements</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\">\r\n    All method elements, except for tasks, are defined in the presented\r\n    sections. Tasks are directly defined while creating method building blocks.\r\n  </div>\r\n\r\n  <app-list-wrapper listTitle=\"Method Elements\">\r\n    <div results class=\"list-group\">\r\n      <a\r\n        *ngFor=\"let item of methodElementLinks\"\r\n        class=\"list-group-item list-group-item-action d-flex\"\r\n        [routerLink]=\"item.route\"\r\n      >\r\n        <div>{{ item.name }}</div>\r\n        <div class=\"ml-auto\">\r\n          <div class=\"btn btn-dark btn-xs\">View</div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  </app-list-wrapper>\r\n</main>\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ExecutionStep } from '../../development-process-registry/development-method/execution-step';\r\nimport { ModuleService } from '../../development-process-registry/module-api/module.service';\r\nimport { ConfigurationFormPlaceholderDirective } from '../configuration-form-placeholder.directive';\r\nimport { ControlContainer, FormGroup } from '@angular/forms';\r\nimport { Domain } from '../../development-process-registry/knowledge/domain';\r\nimport { BmProcess } from '../../development-process-registry/bm-process/bm-process';\r\n\r\n@Component({\r\n  selector: 'app-method-info-step',\r\n  templateUrl: './method-info-step.component.html',\r\n  styleUrls: ['./method-info-step.component.css'],\r\n})\r\nexport class MethodInfoStepComponent implements OnChanges {\r\n  @Input() bmProcess: BmProcess;\r\n  @Input() contextDomains: Domain[];\r\n  @Input() step: ExecutionStep;\r\n  @Input() stepDecision: any;\r\n\r\n  @Output() forceUpdate = new EventEmitter<any>();\r\n\r\n  @ViewChild(ConfigurationFormPlaceholderDirective, { static: true })\r\n  configurationFormHost: ConfigurationFormPlaceholderDirective;\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private controlContainer: ControlContainer,\r\n    private moduleService: ModuleService\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.bmProcess || changes.step) {\r\n      this.initConfiguration(changes.step.currentValue);\r\n    }\r\n  }\r\n\r\n  initConfiguration(step: ExecutionStep) {\r\n    const method = this.moduleService.getModuleMethod(step.module, step.method);\r\n    if (\r\n      method.decisionConfigurationFormComponent != null &&\r\n      method.createDecisionConfigurationForm != null\r\n    ) {\r\n      const configurationFormComponentFactory =\r\n        this.componentFactoryResolver.resolveComponentFactory(\r\n          method.decisionConfigurationFormComponent\r\n        );\r\n      const viewContainerRef = this.configurationFormHost.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      const componentRef = viewContainerRef.createComponent(\r\n        configurationFormComponentFactory\r\n      );\r\n      componentRef.instance.formGroup = this.formGroup;\r\n      componentRef.instance.bmProcess = this.bmProcess;\r\n      componentRef.instance.predefinedInput = this.step.predefinedInput;\r\n      componentRef.instance.contextDomains = this.contextDomains;\r\n      componentRef.instance.forceUpdate = this.forceUpdate;\r\n      componentRef.instance.stepDecision = this.stepDecision;\r\n    }\r\n  }\r\n\r\n  get formGroup() {\r\n    return this.controlContainer.control as FormGroup;\r\n  }\r\n}\r\n","<h6>{{ step.module }} &ndash; {{ step.method }}</h6>\r\n<ng-template appConfigurationFormPlaceholder></ng-template>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ExecutionStep } from '../../development-process-registry/development-method/execution-step';\r\nimport { MethodInfoStepsFormService } from '../shared/method-info-steps-form.service';\r\nimport { Domain } from '../../development-process-registry/knowledge/domain';\r\nimport { BmProcess } from '../../development-process-registry/bm-process/bm-process';\r\n\r\n@Component({\r\n  selector: 'app-method-info-steps',\r\n  templateUrl: './method-info-steps.component.html',\r\n  styleUrls: ['./method-info-steps.component.css'],\r\n})\r\nexport class MethodInfoStepsComponent implements OnChanges {\r\n  @Input() bmProcess: BmProcess;\r\n  @Input() contextDomains: Domain[];\r\n  @Input() steps: ExecutionStep[];\r\n  @Input() stepDecisions: any[];\r\n\r\n  @Output() submitStepsForm = new EventEmitter<any[]>();\r\n  @Output() forceUpdate = new EventEmitter<{\r\n    step: number;\r\n    stepDecision: any;\r\n  }>();\r\n\r\n  form: FormGroup = this.fb.group({\r\n    steps: this.fb.array([]),\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private methodInfoStepsFormService: MethodInfoStepsFormService\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.steps || changes.stepDecisions) {\r\n      this.form.setControl(\r\n        'steps',\r\n        this.methodInfoStepsFormService.createForm(\r\n          this.steps,\r\n          this.stepDecisions\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitStepsForm.emit(\r\n      this.methodInfoStepsFormService.getStepDecisions(this.formArray.value)\r\n    );\r\n  }\r\n\r\n  get formArray() {\r\n    return this.form.get('steps') as FormArray;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n  <ul formArrayName=\"steps\" class=\"list-group\">\r\n    <li *ngFor=\"let step of steps; let index = index\" class=\"list-group-item\">\r\n      <app-method-info-step\r\n        [formGroupName]=\"index.toString()\"\r\n        [bmProcess]=\"bmProcess\"\r\n        [contextDomains]=\"contextDomains\"\r\n        [step]=\"step\"\r\n        [stepDecision]=\"stepDecisions[index]\"\r\n        (forceUpdate)=\"forceUpdate.emit({ step: index, stepDecision: $event })\"\r\n      ></app-method-info-step>\r\n    </li>\r\n  </ul>\r\n  <div *ngIf=\"steps.length > 0\" class=\"form-group row mt-3\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-dark btn-block\"\r\n        [disabled]=\"!form.valid\"\r\n      >\r\n        <ng-container>Update</ng-container>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport { Decision } from '../../development-process-registry/bm-process/decision';\r\nimport { SituationalFactor } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\nimport { Domain } from '../../development-process-registry/knowledge/domain';\r\nimport { BmProcess } from '../../development-process-registry/bm-process/bm-process';\r\nimport { Selection } from '../../development-process-registry/development-method/selection';\r\n\r\n@Component({\r\n  selector: 'app-method-info',\r\n  templateUrl: './method-info.component.html',\r\n  styleUrls: ['./method-info.component.css'],\r\n})\r\nexport class MethodInfoComponent implements OnChanges {\r\n  @Input() bmProcess: BmProcess;\r\n  @Input() developmentMethod: DevelopmentMethod;\r\n  @Input() decision: Decision;\r\n  @Input() contextDomains: Domain[];\r\n  @Input() contextSituationalFactors: Selection<SituationalFactor>[] = [];\r\n\r\n  @Output() updateDecisions = new EventEmitter<any>();\r\n\r\n  needed: SituationalFactor[] = [];\r\n  provided: SituationalFactor[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.contextSituationalFactors) {\r\n      this.needed = changes.contextSituationalFactors.currentValue.map(\r\n        (factor) => factor.element\r\n      );\r\n    }\r\n    if (changes.developmentMethod) {\r\n      this.provided =\r\n        changes.developmentMethod.currentValue.situationalFactors.map(\r\n          (factor) => factor.element\r\n        );\r\n    }\r\n  }\r\n\r\n  forceUpdate(data: { step: number; stepDecision: any }) {\r\n    const stepDecisions = this.decision.stepDecisions.slice();\r\n    stepDecisions[data.step] = data.stepDecision;\r\n    this.updateDecisions.emit({ stepDecisions });\r\n  }\r\n}\r\n","<table class=\"table mb-0\">\r\n  <tbody>\r\n    <tr>\r\n      <th scope=\"row\">Building Block Name</th>\r\n      <td>{{ developmentMethod.name }}</td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Building Block Description</th>\r\n      <td class=\"show-new-lines\">{{ developmentMethod.description }}</td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Examples</th>\r\n      <td class=\"show-new-lines\">\r\n        <ul class=\"list-group\">\r\n          <li\r\n            *ngFor=\"let example of developmentMethod.examples\"\r\n            class=\"list-group-item\"\r\n          >\r\n            {{ example }}\r\n          </li>\r\n        </ul>\r\n      </td>\r\n    </tr>\r\n    <tr\r\n      *ngIf=\"contextSituationalFactors && contextSituationalFactors.length > 0\"\r\n    >\r\n      <th scope=\"row\">Situational Factors</th>\r\n      <td class=\"show-new-lines\">\r\n        <app-situational-factors-overview\r\n          [needed]=\"needed\"\r\n          [provided]=\"provided\"\r\n        ></app-situational-factors-overview>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Input Artifacts</th>\r\n      <td>\r\n        <app-artifacts-group-info\r\n          [selection]=\"decision.inputArtifacts\"\r\n          [groups]=\"developmentMethod.inputArtifacts\"\r\n          (submitGroupsForm)=\"\r\n            updateDecisions.emit({ inputArtifacts: $event.value })\r\n          \"\r\n        ></app-artifacts-group-info>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Output Artifacts</th>\r\n      <td>\r\n        <app-artifacts-group-info\r\n          [selection]=\"decision.outputArtifacts\"\r\n          [groups]=\"developmentMethod.outputArtifacts\"\r\n          (submitGroupsForm)=\"\r\n            updateDecisions.emit({ outputArtifacts: $event.value })\r\n          \"\r\n        ></app-artifacts-group-info>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Involved Stakeholders</th>\r\n      <td>\r\n        <app-stakeholders-group-info\r\n          [selection]=\"decision.stakeholders\"\r\n          [groups]=\"developmentMethod.stakeholders\"\r\n          (submitGroupsForm)=\"\r\n            updateDecisions.emit({ stakeholders: $event.value })\r\n          \"\r\n        ></app-stakeholders-group-info>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Tools</th>\r\n      <td>\r\n        <app-tools-group-info\r\n          [selection]=\"decision.tools\"\r\n          [groups]=\"developmentMethod.tools\"\r\n          (submitGroupsForm)=\"updateDecisions.emit({ tools: $event.value })\"\r\n        ></app-tools-group-info>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Steps</th>\r\n      <td>\r\n        <app-method-info-steps\r\n          [bmProcess]=\"bmProcess\"\r\n          [contextDomains]=\"contextDomains\"\r\n          [steps]=\"decision.method.executionSteps\"\r\n          [stepDecisions]=\"decision.stepDecisions\"\r\n          (submitStepsForm)=\"updateDecisions.emit({ stepDecisions: $event })\"\r\n          (forceUpdate)=\"forceUpdate($event)\"\r\n        ></app-method-info-steps>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ProcessPattern } from '../../development-process-registry/process-pattern/process-pattern';\r\nimport { SituationalFactor } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\n\r\n@Component({\r\n  selector: 'app-pattern-info',\r\n  templateUrl: './pattern-info.component.html',\r\n  styleUrls: ['./pattern-info.component.css'],\r\n})\r\nexport class PatternInfoComponent implements OnChanges {\r\n  @Input() processPattern: ProcessPattern;\r\n  @Input() contextSituationalFactors: {\r\n    list: string;\r\n    element: SituationalFactor;\r\n  }[] = [];\r\n\r\n  needed: SituationalFactor[] = [];\r\n  provided: SituationalFactor[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.contextSituationalFactors) {\r\n      this.needed = changes.contextSituationalFactors.currentValue.map(\r\n        (factor) => factor.element\r\n      );\r\n    }\r\n    if (changes.processPattern) {\r\n      this.provided =\r\n        changes.processPattern.currentValue.situationalFactors.map(\r\n          (factor) => factor.element\r\n        );\r\n    }\r\n  }\r\n}\r\n","<table class=\"table mb-0\">\r\n  <tbody>\r\n    <tr>\r\n      <th scope=\"row\">Pattern Name</th>\r\n      <td>{{ processPattern.name }}</td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Pattern Description</th>\r\n      <td class=\"show-new-lines\">{{ processPattern.description }}</td>\r\n    </tr>\r\n    <tr\r\n      *ngIf=\"contextSituationalFactors && contextSituationalFactors.length > 0\"\r\n    >\r\n      <th scope=\"row\">Situational Factors</th>\r\n      <td>\r\n        <app-situational-factors-overview\r\n          [needed]=\"needed\"\r\n          [provided]=\"provided\"\r\n        ></app-situational-factors-overview>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'list',\r\n})\r\nexport class ListPipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    return 'List ' + value;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'multiple',\r\n})\r\nexport class MultiplePipe implements PipeTransform {\r\n  transform(value: string, multiple: boolean): string {\r\n    if (multiple) {\r\n      return value + ' (multiple)';\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\nimport Modeler from 'bpmn-js/lib/Modeler';\r\nimport { ProcessPattern } from '../../development-process-registry/process-pattern/process-pattern';\r\nimport { BpmnService } from '../shared/bpmn.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DiagramComponentInterface } from '../shared/diagram-component-interface';\r\nimport { Type } from '../../development-process-registry/method-elements/type/type';\r\n\r\n@Component({\r\n  selector: 'app-process-pattern-diagram',\r\n  templateUrl: './process-pattern-diagram.component.html',\r\n  styleUrls: ['./process-pattern-diagram.component.css'],\r\n})\r\nexport class ProcessPatternDiagramComponent\r\n  implements\r\n    DiagramComponentInterface,\r\n    OnInit,\r\n    AfterContentInit,\r\n    OnChanges,\r\n    OnDestroy\r\n{\r\n  @Input() processPattern: ProcessPattern;\r\n\r\n  @Output() saveProcessPattern = new EventEmitter<string>();\r\n\r\n  private modeler: Modeler;\r\n\r\n  modalTask: {\r\n    id: string;\r\n    name: string;\r\n    inherit: boolean;\r\n    neededType: { list: string; element: Type }[];\r\n    forbiddenType: { list: string; element: Type }[];\r\n  };\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('canvas', { static: true }) canvas: ElementRef<HTMLDivElement>;\r\n  @ViewChild('manageTypesModal', { static: true }) manageTypesModal: any;\r\n\r\n  constructor(\r\n    private bpmnService: BpmnService,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.modeler = this.bpmnService.getBpmnProcessPatternModeler();\r\n    this.modeler\r\n      .get('eventBus')\r\n      .on('bmdl.types', (event, businessTask) =>\r\n        this.openManageTypesModal(businessTask)\r\n      );\r\n    if (this.processPattern) {\r\n      this.loadProcessPattern(this.processPattern, true);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.processPattern && this.modeler) {\r\n      this.loadProcessPattern(\r\n        changes.processPattern.currentValue,\r\n        changes.processPattern.firstChange\r\n      );\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.modeler.attachTo(this.canvas.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.modeler.destroy();\r\n  }\r\n\r\n  saveDiagram(): Promise<void> {\r\n    return this.modeler\r\n      .saveXML()\r\n      .then((result) => this.saveProcessPattern.emit(result.xml));\r\n  }\r\n\r\n  openManageTypesModal(businessTask) {\r\n    this.modalTask = {\r\n      id: businessTask.id,\r\n      name: businessTask.name,\r\n      inherit: businessTask.get('inherit'),\r\n      neededType: businessTask.get('neededType'),\r\n      forbiddenType: businessTask.get('forbiddenType'),\r\n    };\r\n    this.modalReference = this.modalService.open(this.manageTypesModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async updateTypes(typesForm: FormGroup) {\r\n    this.bpmnService.setTypesOfActivity(\r\n      this.modeler,\r\n      this.modalTask.id,\r\n      typesForm.value.inherit,\r\n      typesForm.value.neededType,\r\n      typesForm.value.forbiddenType\r\n    );\r\n    this.modalReference.close();\r\n    await this.saveDiagram();\r\n  }\r\n\r\n  private loadProcessPattern(\r\n    processPattern: ProcessPattern,\r\n    firstLoad: boolean\r\n  ) {\r\n    if (processPattern.pattern) {\r\n      this.modeler\r\n        .importXML(processPattern.pattern)\r\n        .then(() => {\r\n          if (firstLoad) {\r\n            this.bpmnService.resizeView(this.modeler);\r\n          }\r\n        })\r\n        .catch((error) => console.log('LoadProcessPattern: ' + error));\r\n    } else {\r\n      this.modeler.createDiagram();\r\n    }\r\n  }\r\n\r\n  diagramChanged(): Promise<boolean> {\r\n    return this.modeler\r\n      .saveXML()\r\n      .then((result) => result.xml !== this.processPattern.pattern);\r\n  }\r\n}\r\n","<ng-template #manageTypesModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Manage types of activity {{ modalTask.name }}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"text-muted pt-3\">\r\n      <app-process-pattern-types-form\r\n        [types]=\"modalTask\"\r\n        (submitTypesForm)=\"updateTypes($event)\"\r\n      ></app-process-pattern-types-form>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div #canvas class=\"border\" style=\"height: 500px\"></div>\r\n<div class=\"container\">\r\n  <div class=\"p-3 bg-white rounded shadow-sm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-4\"><strong>Legend:</strong></div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-end-event-none bpmn-legend-icon\"></i> Create/Append\r\n        EndEvent\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-gateway-none bpmn-legend-icon\"></i> Create/Append\r\n        Gateway\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-task bpmn-legend-icon\"></i> Create/Append Task\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-screw-wrench bpmn-legend-icon\"></i> Change type of\r\n        BPMN element\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-trash bpmn-legend-icon\"></i> Remove\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-service bpmn-legend-icon\"></i> Manage Types of task\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-connection-multi bpmn-legend-icon\"></i> Add\r\n        Connection\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-text-annotation bpmn-legend-icon\"></i> Add\r\n        Annotation\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-hand-tool bpmn-legend-icon\"></i> Hand Tool to move\r\n        the diagram\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-lasso-tool bpmn-legend-icon\"></i> Lasso Tool to\r\n        select multiple elements\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <i class=\"bpmn-icon-space-tool bpmn-legend-icon\"></i> Space Tool to\r\n        create/remove space between elements\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Controls</h6>\r\n    <button class=\"btn btn-primary\" (click)=\"saveDiagram()\">\r\n      Save Diagram\r\n    </button>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { ProcessPattern } from '../../development-process-registry/process-pattern/process-pattern';\r\n\r\n@Component({\r\n  selector: 'app-process-pattern-form',\r\n  templateUrl: './process-pattern-form.component.html',\r\n  styleUrls: ['./process-pattern-form.component.css'],\r\n})\r\nexport class ProcessPatternFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() processPattern!: ProcessPattern;\r\n\r\n  @Output() submitProcessPatternForm = new EventEmitter<FormGroup>();\r\n\r\n  form: FormGroup = this.fb.group({\r\n    name: ['', Validators.required],\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.changeSubscription = this.nameControl.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap((value) => (this.changed = value !== this.processPattern.name))\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.processPattern) {\r\n      const oldProcessPattern: ProcessPattern =\r\n        changes.processPattern.previousValue;\r\n      const newProcessPattern: ProcessPattern =\r\n        changes.processPattern.currentValue;\r\n      if (\r\n        changes.processPattern.firstChange ||\r\n        oldProcessPattern.name !== newProcessPattern.name\r\n      ) {\r\n        this.nameControl.setValue(newProcessPattern.name);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription != null) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitProcessPatternForm.emit(this.form);\r\n  }\r\n\r\n  get nameControl(): FormControl {\r\n    return this.form.get('name') as FormControl;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!form.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { ProcessPatternEntry } from '../../development-process-registry/process-pattern/process-pattern';\r\nimport { SituationalFactor } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\n\r\n@Component({\r\n  selector: 'app-process-pattern-selection-form',\r\n  templateUrl: './process-pattern-selection-form.component.html',\r\n  styleUrls: ['./process-pattern-selection-form.component.css'],\r\n})\r\nexport class ProcessPatternSelectionFormComponent implements OnChanges {\r\n  @Input() processPattern: ProcessPatternEntry;\r\n  @Input() contextSituationalFactors: {\r\n    list: string;\r\n    element: SituationalFactor;\r\n  }[] = [];\r\n\r\n  @Output() selectProcessPattern = new EventEmitter<ProcessPatternEntry>();\r\n\r\n  needed: SituationalFactor[] = [];\r\n  provided: SituationalFactor[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.contextSituationalFactors) {\r\n      this.needed = changes.contextSituationalFactors.currentValue.map(\r\n        (factor) => factor.element\r\n      );\r\n    }\r\n    if (changes.processPattern) {\r\n      this.provided =\r\n        changes.processPattern.currentValue.situationalFactors.map(\r\n          (factor) => factor.element\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-flex align-items-baseline\">\r\n  <h5>{{ processPattern.name }}</h5>\r\n  <button\r\n    (click)=\"selectProcessPattern.emit(processPattern)\"\r\n    type=\"button\"\r\n    class=\"btn btn-primary ml-auto btn-xs\"\r\n  >\r\n    Select\r\n  </button>\r\n</div>\r\n<p>{{ processPattern.description }}</p>\r\n<app-situational-factors-overview\r\n  *ngIf=\"needed && needed.length > 0\"\r\n  [provided]=\"provided\"\r\n  [needed]=\"needed\"\r\n></app-situational-factors-overview>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Type,\r\n  TypeEntry,\r\n} from '../../development-process-registry/method-elements/type/type';\r\nimport { TypeService } from '../../development-process-registry/method-elements/type/type.service';\r\n\r\n@Component({\r\n  selector: 'app-process-pattern-types-form',\r\n  templateUrl: './process-pattern-types-form.component.html',\r\n  styleUrls: ['./process-pattern-types-form.component.css'],\r\n})\r\nexport class ProcessPatternTypesFormComponent implements OnInit, OnChanges {\r\n  @Input() types: {\r\n    inherit: boolean;\r\n    neededType: { list: string; element: Type }[];\r\n    forbiddenType: { list: string; element: Type }[];\r\n  };\r\n\r\n  @Output() submitTypesForm = new EventEmitter<FormGroup>();\r\n\r\n  typesForm: FormGroup = this.fb.group({\r\n    inherit: this.fb.control(false, Validators.required),\r\n    neededType: this.fb.array([]),\r\n    forbiddenType: this.fb.array([]),\r\n  });\r\n\r\n  methodElements: TypeEntry[];\r\n  listNames: string[];\r\n\r\n  constructor(private fb: FormBuilder, private typeService: TypeService) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadTypes();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.types) {\r\n      this.loadForm(changes.types.currentValue);\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitTypesForm.emit(this.typesForm);\r\n  }\r\n\r\n  private loadForm(types: {\r\n    inherit: boolean;\r\n    neededType: { list: string; element: Type }[];\r\n    forbiddenType: { list: string; element: Type }[];\r\n  }): void {\r\n    const mapTypeToFormGroup = (type: {\r\n      list: string;\r\n      element: Type;\r\n    }): FormGroup =>\r\n      this.fb.group({\r\n        list: [type.list, Validators.required],\r\n        element: type.element,\r\n      });\r\n    const neededTypesFormGroups = types.neededType.map(mapTypeToFormGroup);\r\n    const forbiddenTypesFormGroups =\r\n      types.forbiddenType.map(mapTypeToFormGroup);\r\n\r\n    if (types.inherit) {\r\n      this.typesForm.get('inherit').setValue(types.inherit);\r\n    }\r\n    this.typesForm.setControl(\r\n      'neededType',\r\n      this.fb.array(neededTypesFormGroups)\r\n    );\r\n    this.typesForm.setControl(\r\n      'forbiddenType',\r\n      this.fb.array(forbiddenTypesFormGroups)\r\n    );\r\n  }\r\n\r\n  private async loadTypes(): Promise<void> {\r\n    this.methodElements = await this.typeService.getList();\r\n    this.listNames = [\r\n      ...new Set(this.methodElements.map((element) => element.list)),\r\n    ];\r\n  }\r\n\r\n  createFormGroupFactory = (): FormGroup =>\r\n    this.fb.group({\r\n      list: ['', Validators.required],\r\n      element: null,\r\n    });\r\n}\r\n","<form [formGroup]=\"typesForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"alert alert-info\">\r\n    Inherit types from parent to create generic patterns.\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <div\r\n      class=\"btn-group btn-group-toggle\"\r\n      ngbRadioGroup\r\n      name=\"inherit\"\r\n      formControlName=\"inherit\"\r\n    >\r\n      <label ngbButtonLabel class=\"btn-primary\">\r\n        <input ngbButton type=\"radio\" [value]=\"true\" /> Inherit types\r\n      </label>\r\n      <label ngbButtonLabel class=\"btn-primary\">\r\n        <input ngbButton type=\"radio\" [value]=\"false\" /> Do not inherit types\r\n      </label>\r\n    </div>\r\n  </div>\r\n\r\n  <app-method-elements-selection-form\r\n    *ngIf=\"!typesForm.value.inherit\"\r\n    class=\"form-group\"\r\n    formArrayName=\"neededType\"\r\n    [createFormGroupFactory]=\"createFormGroupFactory\"\r\n    [listNames]=\"listNames\"\r\n    [methodElements]=\"methodElements\"\r\n    methodElementName=\"Needed Type\"\r\n  ></app-method-elements-selection-form>\r\n\r\n  <app-method-elements-selection-form\r\n    *ngIf=\"!typesForm.value.inherit\"\r\n    class=\"form-group\"\r\n    formArrayName=\"forbiddenType\"\r\n    [createFormGroupFactory]=\"createFormGroupFactory\"\r\n    [listNames]=\"listNames\"\r\n    [methodElements]=\"methodElements\"\r\n    methodElementName=\"Forbidden Type\"\r\n  ></app-method-elements-selection-form>\r\n\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-dark btn-block\"\r\n        [disabled]=\"!typesForm.valid\"\r\n      >\r\n        Update Types\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { ProcessPatternService } from '../../development-process-registry/process-pattern/process-pattern.service';\r\nimport { DiagramComponentInterface } from '../shared/diagram-component-interface';\r\nimport { ProcessPatternDiagramComponent } from '../process-pattern-diagram/process-pattern-diagram.component';\r\nimport { ProcessPatternLoaderService } from '../shared/process-pattern-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-process-pattern',\r\n  templateUrl: './process-pattern.component.html',\r\n  styleUrls: ['./process-pattern.component.css'],\r\n  providers: [ProcessPatternLoaderService],\r\n})\r\nexport class ProcessPatternComponent implements DiagramComponentInterface {\r\n  @ViewChild(ProcessPatternDiagramComponent)\r\n  diagramComponent: ProcessPatternDiagramComponent;\r\n\r\n  constructor(\r\n    private processPatternLoaderService: ProcessPatternLoaderService,\r\n    private processPatternService: ProcessPatternService\r\n  ) {}\r\n\r\n  async save(pattern: string) {\r\n    await this.processPatternService.update(this.processPattern._id, {\r\n      pattern,\r\n    });\r\n  }\r\n\r\n  async updateProcessPatternValue(value: any) {\r\n    await this.processPatternService.update(this.processPattern._id, value);\r\n  }\r\n\r\n  diagramChanged(): Promise<boolean> {\r\n    return this.diagramComponent.diagramChanged();\r\n  }\r\n\r\n  saveDiagram(): Promise<void> {\r\n    return this.diagramComponent.saveDiagram();\r\n  }\r\n\r\n  get processPattern() {\r\n    return this.processPatternLoaderService.processPattern;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'process']\"> Method Patterns </a>\r\n    <a *ngIf=\"processPattern\" class=\"nav-link active\" [routerLink]=\"[]\">\r\n      {{ processPattern.name }}\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"processPattern\">\r\n  <div class=\"alert alert-info container mt-3\" role=\"alert\">\r\n    <p>\r\n      Create a Method Pattern by using activities as placeholders for Method\r\n      Building Blocks. Call activities are placeholders for both Method Building\r\n      Blocks and other Method Patterns. Name processes and activities as you\r\n      like and define needed and forbidden types on them.\r\n    </p>\r\n\r\n    <p>\r\n      A later selected Method Building Block or Method Pattern must have at\r\n      least one type that is in the needed types and must not have any type that\r\n      is in the forbidden types to be inserted into the placeholder.\r\n    </p>\r\n\r\n    <p class=\"mb-0\">\r\n      <strong>Important:</strong> Select a type for an activity through the gear\r\n      icon that is shown if an activity is selected. If the gear icon is red, no\r\n      type is selected. If it is green, a type is selected.\r\n    </p>\r\n  </div>\r\n\r\n  <app-process-pattern-diagram\r\n    [processPattern]=\"processPattern\"\r\n    (saveProcessPattern)=\"save($event)\"\r\n  ></app-process-pattern-diagram>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <h6 class=\"border-bottom border-gray pb-2 mb-0\">Method Pattern</h6>\r\n      <div class=\"text-muted pt-3\">\r\n        <app-process-pattern-form\r\n          [processPattern]=\"processPattern\"\r\n          (submitProcessPatternForm)=\"updateProcessPatternValue($event.value)\"\r\n        ></app-process-pattern-form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <h6 class=\"border-bottom border-gray pb-2 mb-0\">Types</h6>\r\n      <div class=\"text-muted pt-3\">\r\n        <app-types-selection-form\r\n          [internalTypes]=\"true\"\r\n          [types]=\"processPattern.types\"\r\n          (submitTypesForm)=\"updateProcessPatternValue({ types: $event.value })\"\r\n        ></app-types-selection-form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <h6 class=\"border-bottom border-gray pb-2 mb-0\">Situational Factors</h6>\r\n      <div class=\"text-muted pt-3\">\r\n        <app-situational-factors-selection-form\r\n          [situationalFactors]=\"processPattern.situationalFactors\"\r\n          (submitSituationalFactorsForm)=\"\r\n            updateProcessPatternValue({ situationalFactors: $event.value })\r\n          \"\r\n        ></app-situational-factors-selection-form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <h6 class=\"border-bottom border-gray pb-2 mb-0\">Description</h6>\r\n      <div class=\"text-muted pt-3\">\r\n        <app-description-form\r\n          [description]=\"processPattern.description\"\r\n          (submitDescriptionForm)=\"\r\n            updateProcessPatternValue({ description: $event.value.description })\r\n          \"\r\n        ></app-description-form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n        Edit Author Information\r\n      </h6>\r\n      <div class=\"text-muted pt-3\">\r\n        <app-author-form\r\n          [author]=\"processPattern.author\"\r\n          (submitAuthorForm)=\"\r\n            updateProcessPatternValue({ author: $event.value })\r\n          \"\r\n        ></app-author-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SituationalFactor } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\nimport { ProcessPatternEntry } from '../../development-process-registry/process-pattern/process-pattern';\r\nimport { SEARCH_FUNCTION, searchFunction } from '../../shared/search.service';\r\n\r\n@Component({\r\n  selector: 'app-process-patterns-selection-form',\r\n  templateUrl: './process-patterns-selection-form.component.html',\r\n  styleUrls: ['./process-patterns-selection-form.component.css'],\r\n  providers: [{ provide: SEARCH_FUNCTION, useValue: searchFunction }],\r\n})\r\nexport class ProcessPatternsSelectionFormComponent {\r\n  @Input() processPatterns: ProcessPatternEntry[];\r\n  @Input() contextSituationalFactors: {\r\n    list: string;\r\n    element?: SituationalFactor;\r\n  }[] = [];\r\n\r\n  @Output() selectProcessPattern = new EventEmitter<ProcessPatternEntry>();\r\n}\r\n","<ng-template #ref let-item>\r\n  <app-process-pattern-selection-form\r\n    [contextSituationalFactors]=\"contextSituationalFactors\"\r\n    [processPattern]=\"item\"\r\n    (selectProcessPattern)=\"selectProcessPattern.emit($event)\"\r\n  ></app-process-pattern-selection-form>\r\n</ng-template>\r\n\r\n<app-search\r\n  heading=\"Method Patterns\"\r\n  itemName=\"Method Pattern\"\r\n  [content]=\"ref\"\r\n  [items]=\"processPatterns\"\r\n></app-search>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  ProcessPattern,\r\n  ProcessPatternEntry,\r\n  ProcessPatternInit,\r\n} from '../../development-process-registry/process-pattern/process-pattern';\r\nimport { ProcessPatternService } from '../../development-process-registry/process-pattern/process-pattern.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ELEMENT_SERVICE, ListService } from '../../shared/list.service';\r\n\r\n@Component({\r\n  selector: 'app-process-patterns',\r\n  templateUrl: './process-patterns.component.html',\r\n  styleUrls: ['./process-patterns.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: ProcessPatternService },\r\n  ],\r\n})\r\nexport class ProcessPatternsComponent {\r\n  processPatternForm = this.fb.group({\r\n    name: ['', Validators.required],\r\n  });\r\n\r\n  modalProcessPattern: ProcessPatternEntry;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteProcessPatternModal', { static: true })\r\n  deleteProcessPatternModal: unknown;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private listService: ListService<ProcessPattern, ProcessPatternInit>,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  openDeleteProcessPatternModal(processPattern: ProcessPatternEntry): void {\r\n    this.modalProcessPattern = processPattern;\r\n    this.modalReference = this.modalService.open(\r\n      this.deleteProcessPatternModal,\r\n      {\r\n        size: 'lg',\r\n      }\r\n    );\r\n  }\r\n\r\n  async deleteProcessPattern(id: string): Promise<void> {\r\n    await this.listService.delete(id);\r\n  }\r\n\r\n  async addProcessPattern(processPatternForm: any): Promise<void> {\r\n    await this.listService.add({ name: processPatternForm.value.name });\r\n    this.processPatternForm.reset();\r\n  }\r\n\r\n  get processPatternList(): ProcessPatternEntry[] {\r\n    return this.listService.elements;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.listService.noResults;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.listService.loading;\r\n  }\r\n\r\n  get reloading(): boolean {\r\n    return this.listService.reloading;\r\n  }\r\n}\r\n","<ng-template #deleteProcessPatternModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"deleteProcessPattern(modalProcessPattern._id); c()\"\r\n  >\r\n    <div modalTitle>Delete Method Pattern {{ modalProcessPattern.name }}</div>\r\n    You are deleting the method pattern {{ modalProcessPattern.name }}. This can\r\n    not be undone. This action will not delete the method pattern from business\r\n    model development methods that are using it.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Method Patterns</a>\r\n    <a\r\n      *ngFor=\"let processPattern of processPatternList\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['processview', processPattern._id]\"\r\n      >{{ processPattern.name }}</a\r\n    >\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create Method Patterns to use them for the Business Model Development\r\n    Methods\r\n  </div>\r\n\r\n  <app-list-wrapper\r\n    listTitle=\"Method Patterns\"\r\n    [reloading]=\"reloading\"\r\n    [loading]=\"loading\"\r\n    [noResults]=\"noResults\"\r\n  >\r\n    <div noResults>No Method Patterns defined.</div>\r\n    <ul results class=\"list-group\">\r\n      <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"let processPattern of processPatternList\"\r\n      >\r\n        <app-results-list-item\r\n          [viewLink]=\"['processview', processPattern._id]\"\r\n          (delete)=\"openDeleteProcessPatternModal(processPattern)\"\r\n        >\r\n          <ng-container itemTitle>\r\n            {{ processPattern.name }}\r\n          </ng-container>\r\n          <ng-container itemDescription>\r\n            {{ processPattern.description }}\r\n          </ng-container>\r\n          <app-author-info [author]=\"processPattern.author\"></app-author-info>\r\n        </app-results-list-item>\r\n      </li>\r\n    </ul>\r\n  </app-list-wrapper>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Add Method Pattern</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"processPatternForm\"\r\n        (ngSubmit)=\"addProcessPattern(processPatternForm)\"\r\n      >\r\n        <div class=\"form-group row\">\r\n          <label for=\"name\" class=\"col-sm-4 col-form-label\"\r\n            >Method Pattern Name</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!processPatternForm.valid\"\r\n            >\r\n              Add Method Pattern\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { RunningArtifact } from '../../development-process-registry/running-process/running-artifact';\r\n\r\n@Component({\r\n  selector: 'app-running-process-artifact-export-form',\r\n  templateUrl: './running-process-artifact-export-form.component.html',\r\n  styleUrls: ['./running-process-artifact-export-form.component.css'],\r\n})\r\nexport class RunningProcessArtifactExportFormComponent implements OnChanges {\r\n  @Input() artifact: RunningArtifact;\r\n\r\n  @Output() submitArtifactExportForm = new EventEmitter<FormGroup>();\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.artifact) {\r\n      const newArtifact: RunningArtifact = changes.artifact.currentValue;\r\n      const oldArtifact: RunningArtifact = changes.artifact.previousValue;\r\n      if (\r\n        changes.artifact.firstChange ||\r\n        newArtifact.identifier !== oldArtifact.identifier\r\n      ) {\r\n        this.form = this.fb.group({\r\n          identifier: newArtifact.identifier,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitArtifactExportForm.emit(this.form);\r\n  }\r\n}\r\n","<div class=\"alert alert-info\">\r\n  Export the artifact to add it to the artifacts list and import it in other\r\n  methods.\r\n</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"identifier\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"identifier\"\r\n        formControlName=\"identifier\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-sm btn-dark btn-block\"\r\n      [disabled]=\"!form.valid\"\r\n    >\r\n      Export Artifact\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {\r\n  RunningArtifact,\r\n  RunningArtifactEntry,\r\n} from '../../development-process-registry/running-process/running-artifact';\r\nimport { ConcreteArtifactService } from '../../development-process-registry/running-process/concrete-artifact.service';\r\nimport { SEARCH_FUNCTION } from '../../shared/search.service';\r\n\r\n@Component({\r\n  selector: 'app-running-process-artifact-import-form',\r\n  templateUrl: './running-process-artifact-import-form.component.html',\r\n  styleUrls: ['./running-process-artifact-import-form.component.css'],\r\n  providers: [\r\n    {\r\n      provide: SEARCH_FUNCTION,\r\n      useValue: (searchValue: string, item: RunningArtifact): boolean =>\r\n        item.identifier.toLowerCase().includes(searchValue),\r\n    },\r\n  ],\r\n})\r\nexport class RunningProcessArtifactImportFormComponent implements OnInit {\r\n  artifacts: RunningArtifactEntry[];\r\n\r\n  @Output() selectArtifact = new EventEmitter<RunningArtifact>();\r\n\r\n  constructor(private concreteArtifactService: ConcreteArtifactService) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadArtifacts();\r\n  }\r\n\r\n  async loadArtifacts(): Promise<void> {\r\n    this.artifacts = await this.concreteArtifactService.getList();\r\n  }\r\n}\r\n","<ng-template #ref let-item>\r\n  <div class=\"d-flex align-items-baseline\">\r\n    <h5>{{ item.identifier }}</h5>\r\n    <button\r\n      (click)=\"selectArtifact.emit(item)\"\r\n      type=\"button\"\r\n      class=\"btn btn-primary ml-auto btn-xs\"\r\n    >\r\n      Select\r\n    </button>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">Artifact Type</div>\r\n    <div class=\"col-sm-8\">\r\n      {{ item.artifact.name }}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" *ngIf=\"item.artifact.internalArtifact\">\r\n    <div class=\"col-sm-4\">Artifact Meta Model</div>\r\n    <div class=\"col-sm-8\">\r\n      {{ item.artifact.metaModel.name }}\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<app-search\r\n  heading=\"Artifacts\"\r\n  itemName=\"Artifact\"\r\n  [content]=\"ref\"\r\n  [items]=\"artifacts\"\r\n></app-search>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { RunningArtifact } from '../../development-process-registry/running-process/running-artifact';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-running-process-artifact-rename-form',\r\n  templateUrl: './running-process-artifact-rename-form.component.html',\r\n  styleUrls: ['./running-process-artifact-rename-form.component.css'],\r\n})\r\nexport class RunningProcessArtifactRenameFormComponent implements OnChanges {\r\n  @Input() artifact: RunningArtifact;\r\n\r\n  @Output() submitArtifactExportForm = new EventEmitter<FormGroup>();\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.artifact) {\r\n      const newArtifact: RunningArtifact = changes.artifact.currentValue;\r\n      const oldArtifact: RunningArtifact = changes.artifact.previousValue;\r\n      if (\r\n        changes.artifact.firstChange ||\r\n        newArtifact.identifier !== oldArtifact.identifier\r\n      ) {\r\n        this.form = this.fb.group({\r\n          identifier: newArtifact.identifier,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitArtifactExportForm.emit(this.form);\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"identifier\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"identifier\"\r\n        formControlName=\"identifier\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-sm btn-dark btn-block\"\r\n      [disabled]=\"!form.valid\"\r\n    >\r\n      Rename artifact\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RunningProcessService } from '../../development-process-registry/running-process/running-process.service';\r\nimport { RunningProcess } from '../../development-process-registry/running-process/running-process';\r\nimport { RunningMethod } from '../../development-process-registry/running-process/running-method';\r\nimport { FormArray } from '@angular/forms';\r\nimport { OutputArtifactMappingFormService } from '../shared/output-artifact-mapping-form.service';\r\nimport { Comment } from '../../development-process-registry/running-process/comment';\r\nimport { ArtifactDataReference } from '../../development-process-registry/running-process/artifact-data';\r\nimport { MetaModelApi } from '../../development-process-registry/meta-model-definition';\r\nimport { RunningMethodLoaderService } from '../shared/running-method-loader.service';\r\n\r\nenum State {\r\n  INPUT_SELECTION,\r\n  EXECUTION,\r\n  OUTPUT_SELECTION,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-running-process-method',\r\n  templateUrl: './running-process-method.component.html',\r\n  styleUrls: ['./running-process-method.component.css'],\r\n  providers: [RunningMethodLoaderService],\r\n})\r\nexport class RunningProcessMethodComponent {\r\n  constructor(\r\n    private outputArtifactMappingFormService: OutputArtifactMappingFormService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private runningMethodLoaderService: RunningMethodLoaderService,\r\n    private runningProcessService: RunningProcessService\r\n  ) {}\r\n\r\n  async selectInputArtifacts(inputArtifactMapping: FormArray): Promise<void> {\r\n    const inputArtifactMappingValue = inputArtifactMapping.value;\r\n    const inputArtifactMap = (mapping: {\r\n      artifact: number;\r\n    }): { artifact: number; version: number } => {\r\n      return {\r\n        artifact: mapping.artifact,\r\n        version:\r\n          this.runningProcess.artifacts[mapping.artifact].versions.length - 1,\r\n      };\r\n    };\r\n    await this.runningProcessService.setInputArtifacts(\r\n      this.runningProcess,\r\n      this.runningMethod.executionId,\r\n      inputArtifactMappingValue.map(inputArtifactMap)\r\n    );\r\n  }\r\n\r\n  async executeMethodStep(): Promise<void> {\r\n    await this.runningProcessService.executeMethodStep(\r\n      this.runningProcess,\r\n      this.runningMethod.executionId\r\n    );\r\n  }\r\n\r\n  async updateOutputArtifacts(\r\n    outputArtifactsMapping: FormArray\r\n  ): Promise<void> {\r\n    const mapping = this.outputArtifactMappingFormService.get(\r\n      outputArtifactsMapping.value\r\n    );\r\n    await this.runningProcessService.updateOutputArtifacts(\r\n      this.runningProcess,\r\n      this.runningMethod.executionId,\r\n      mapping\r\n    );\r\n  }\r\n\r\n  async finishExecution(): Promise<void> {\r\n    let runningProcess = this.runningProcess;\r\n    await this.runningProcessService.stopMethodExecution(\r\n      runningProcess,\r\n      this.runningMethod.executionId\r\n    );\r\n    runningProcess = await this.runningProcessService.get(runningProcess._id);\r\n    await this.runningProcessService.jumpSteps(runningProcess);\r\n    await this.router.navigate([\r\n      'runningprocess',\r\n      'runningprocessview',\r\n      runningProcess._id,\r\n    ]);\r\n  }\r\n\r\n  async abortMethodExecution(): Promise<void> {\r\n    await this.runningProcessService.abortMethodExecution(\r\n      this.runningProcess,\r\n      this.runningMethod.executionId\r\n    );\r\n    await this.router.navigate([\r\n      'runningprocess',\r\n      'runningprocessview',\r\n      this.runningProcess._id,\r\n    ]);\r\n  }\r\n\r\n  async addComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.addComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async updateComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.updateComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async removeComment(commentId: string): Promise<void> {\r\n    await this.runningProcessService.removeComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      commentId\r\n    );\r\n  }\r\n\r\n  viewArtifactReference(\r\n    reference: ArtifactDataReference,\r\n    api: MetaModelApi\r\n  ): void {\r\n    api.view(reference, this.router, {\r\n      referenceType: 'Method',\r\n      runningProcessId: this.runningProcess._id,\r\n      executionId: this.runningMethod.executionId,\r\n    });\r\n  }\r\n\r\n  getState(): State {\r\n    if (this.runningMethod.inputArtifacts == null) {\r\n      return State.INPUT_SELECTION;\r\n    } else if (this.runningMethod.hasStepsLeft()) {\r\n      return State.EXECUTION;\r\n    } else {\r\n      return State.OUTPUT_SELECTION;\r\n    }\r\n  }\r\n\r\n  getStateInputSelection(): State {\r\n    return State.INPUT_SELECTION;\r\n  }\r\n\r\n  getStateExecution(): State {\r\n    return State.EXECUTION;\r\n  }\r\n\r\n  getStateOutputSelection(): State {\r\n    return State.OUTPUT_SELECTION;\r\n  }\r\n\r\n  get error(): boolean {\r\n    return this.runningMethodLoaderService.error;\r\n  }\r\n\r\n  get errorStatus(): number {\r\n    return this.runningMethodLoaderService.errorStatus;\r\n  }\r\n\r\n  get errorReason(): string {\r\n    return this.runningMethodLoaderService.errorReason;\r\n  }\r\n\r\n  get runningProcess(): RunningProcess {\r\n    return this.runningMethodLoaderService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.runningMethodLoaderService.runningMethod;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"runningProcess\">\r\n    <a\r\n      class=\"nav-link\"\r\n      [routerLink]=\"[\r\n        '/',\r\n        'runningprocess',\r\n        'runningprocessview',\r\n        runningProcess._id\r\n      ]\"\r\n    >\r\n      {{ runningProcess.process.name }} &ndash; {{ runningProcess.name }}\r\n    </a>\r\n    <a *ngIf=\"runningMethod\" class=\"nav-link active\" [routerLink]=\"[]\">\r\n      {{ runningMethod.methodName }}\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"error && errorStatus === 404\" role=\"main\">\r\n  <div class=\"alert alert-info container my-3\">\r\n    <p>This running method does not exist. Reason: {{ errorReason }}.</p>\r\n    <p class=\"mb-0\">\r\n      <a [routerLink]=\"['/', 'runningprocess']\">\r\n        Go back to overview of running methods\r\n      </a>\r\n    </p>\r\n  </div>\r\n</main>\r\n\r\n<main *ngIf=\"runningMethod === null\" role=\"main\">\r\n  <div class=\"alert alert-info container my-3\">\r\n    <p>This development step does not exist or is not executed.</p>\r\n    <p class=\"mb-0\">\r\n      <a\r\n        [routerLink]=\"[\r\n          '/',\r\n          'runningprocess',\r\n          'runningprocessview',\r\n          runningProcess._id\r\n        ]\"\r\n      >\r\n        Go back to kanban board of running method\r\n      </a>\r\n    </p>\r\n  </div>\r\n</main>\r\n\r\n<main *ngIf=\"runningProcess != null && runningMethod != null\" role=\"main\">\r\n  <div class=\"container\">\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <div\r\n        class=\"\r\n          d-flex\r\n          align-items-baseline\r\n          justify-content-between\r\n          border-bottom border-gray\r\n          mb-2\r\n        \"\r\n      >\r\n        <h6 class=\"pb-2 mb-0\">Steps</h6>\r\n        <button class=\"btn btn-sm btn-warning\" (click)=\"abortMethodExecution()\">\r\n          Abort development step execution\r\n        </button>\r\n      </div>\r\n      <div class=\"d-flex\">\r\n        <ul class=\"list-group list-group-horizontal ml-auto mr-auto\">\r\n          <li\r\n            class=\"list-group-item\"\r\n            [class.active]=\"getStateInputSelection() === getState()\"\r\n            [class.disabled]=\"getState() > getStateInputSelection()\"\r\n            [attr.aria-disabled]=\"getState() > getStateInputSelection()\"\r\n          >\r\n            Select input artifacts<span\r\n              *ngIf=\"getStateInputSelection() === getState()\"\r\n              class=\"sr-only\"\r\n            >\r\n              (active)</span\r\n            >\r\n          </li>\r\n          <li\r\n            *ngIf=\"runningMethod.hasSteps()\"\r\n            class=\"list-group-item\"\r\n            [class.active]=\"getStateExecution() === getState()\"\r\n            [class.disabled]=\"getState() > getStateExecution()\"\r\n            [attr.aria-disabled]=\"getState() > getStateExecution()\"\r\n          >\r\n            Execute Development Step<span\r\n              *ngIf=\"getStateExecution() === getState()\"\r\n              class=\"sr-only\"\r\n            >\r\n              (active)</span\r\n            >\r\n          </li>\r\n          <li\r\n            class=\"list-group-item\"\r\n            [class.active]=\"getStateOutputSelection() === getState()\"\r\n            [class.disabled]=\"getState() > getStateOutputSelection()\"\r\n            [attr.aria-disabled]=\"getState() > getStateOutputSelection()\"\r\n          >\r\n            Create/Merge output artifacts<span\r\n              *ngIf=\"getStateOutputSelection() === getState()\"\r\n              class=\"sr-only\"\r\n            >\r\n              (active)</span\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div\r\n      *ngIf=\"getStateInputSelection() === getState()\"\r\n      class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">Input Mapping</h6>\r\n      <app-running-process-select-input-artifacts\r\n        [decision]=\"runningMethod.decision\"\r\n        [runningProcess]=\"runningProcess\"\r\n        (selectInputArtifacts)=\"selectInputArtifacts($event)\"\r\n      ></app-running-process-select-input-artifacts>\r\n    </div>\r\n    <div\r\n      *ngIf=\"getState() > getStateInputSelection()\"\r\n      class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">Development Step Overview</h6>\r\n      <app-development-method-summary\r\n        [decision]=\"runningMethod.decision\"\r\n        [inputArtifacts]=\"runningMethod.inputArtifacts\"\r\n        (viewArtifactReference)=\"\r\n          viewArtifactReference($event.reference, $event.api)\r\n        \"\r\n      ></app-development-method-summary>\r\n    </div>\r\n    <div\r\n      *ngIf=\"getStateExecution() <= getState() && runningMethod.hasSteps()\"\r\n      class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">Execution Steps</h6>\r\n      <ol>\r\n        <li\r\n          *ngFor=\"\r\n            let step of runningMethod.decision.method.executionSteps;\r\n            let index = index\r\n          \"\r\n          [class.text-success]=\"index < runningMethod.currentStepNumber\"\r\n          [class.text-warning]=\"index === runningMethod.currentStepNumber\"\r\n        >\r\n          {{ step.module }} &ndash; {{ step.method }}\r\n          <span *ngIf=\"index < runningMethod.currentStepNumber\" class=\"sr-only\">\r\n            (step already executed)</span\r\n          >\r\n          <span\r\n            *ngIf=\"index === runningMethod.currentStepNumber\"\r\n            class=\"sr-only\"\r\n          >\r\n            (step to execute)</span\r\n          >\r\n        </li>\r\n      </ol>\r\n      <button\r\n        *ngIf=\"runningMethod.hasStepsLeft()\"\r\n        class=\"btn btn-block btn-primary\"\r\n        (click)=\"executeMethodStep()\"\r\n      >\r\n        Execute next step\r\n      </button>\r\n    </div>\r\n    <div\r\n      *ngIf=\"getStateOutputSelection() === getState()\"\r\n      class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">Output Mapping</h6>\r\n      <app-running-process-select-output-artifacts\r\n        [runningProcess]=\"runningProcess\"\r\n        [runningMethod]=\"runningMethod\"\r\n        [decision]=\"runningMethod.decision\"\r\n        (updateOutputArtifacts)=\"updateOutputArtifacts($event)\"\r\n      ></app-running-process-select-output-artifacts>\r\n    </div>\r\n\r\n    <div\r\n      *ngIf=\"getStateOutputSelection() === getState()\"\r\n      class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">Finish execution</h6>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary btn-block\"\r\n        [disabled]=\"!runningMethod.hasOutputArtifactsCorrectlyDefined()\"\r\n        (click)=\"finishExecution()\"\r\n      >\r\n        Finish execution\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <app-running-process-method-comments\r\n        [comments]=\"runningMethod.comments\"\r\n        (addComment)=\"addComment($event)\"\r\n        (updateComment)=\"updateComment($event)\"\r\n        (removeComment)=\"removeComment($event)\"\r\n      ></app-running-process-method-comments>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { RunningProcess } from '../../development-process-registry/running-process/running-process';\r\nimport { Decision } from '../../development-process-registry/bm-process/decision';\r\nimport { Artifact } from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-running-process-select-input-artifacts',\r\n  templateUrl: './running-process-select-input-artifacts.component.html',\r\n  styleUrls: ['./running-process-select-input-artifacts.component.css'],\r\n})\r\nexport class RunningProcessSelectInputArtifactsComponent implements OnChanges {\r\n  @Input() runningProcess: RunningProcess;\r\n  @Input() decision: Decision;\r\n\r\n  @Output() selectInputArtifacts = new EventEmitter<FormArray>();\r\n\r\n  inputArtifacts: Artifact[];\r\n\r\n  form = this.fb.group({\r\n    inputArtifacts: this.fb.array([]),\r\n  });\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.decision) {\r\n      const decision: Decision = changes.decision.currentValue;\r\n      const artifacts = [];\r\n      decision.inputArtifacts\r\n        .getList(decision.method.inputArtifacts)\r\n        .elements.forEach((element) => artifacts.push(...element.elements));\r\n      this.inputArtifacts = artifacts;\r\n      this.loadForm(artifacts);\r\n    }\r\n  }\r\n\r\n  loadForm(artifacts: Artifact[]): void {\r\n    const formGroups = artifacts.map(() =>\r\n      this.fb.group({\r\n        artifact: this.fb.control(null, Validators.required),\r\n      })\r\n    );\r\n    this.form.setControl('inputArtifacts', this.fb.array(formGroups));\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.selectInputArtifacts.emit(this.formArray);\r\n  }\r\n\r\n  nextStep(): void {\r\n    this.selectInputArtifacts.emit(this.fb.array([]));\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.form.get('inputArtifacts') as FormArray;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"inputArtifacts.length === 0\">\r\n  <div class=\"alert alert-info\">\r\n    This building block has no input artifacts.\r\n  </div>\r\n  <div class=\"d-flex\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-block btn-primary\"\r\n      (click)=\"nextStep()\"\r\n    >\r\n      Confirm\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n<form\r\n  [formGroup]=\"form\"\r\n  *ngIf=\"inputArtifacts.length > 0\"\r\n  (ngSubmit)=\"submitForm()\"\r\n>\r\n  <div formArrayName=\"inputArtifacts\">\r\n    <div\r\n      class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n      *ngFor=\"let artifact of inputArtifacts; let index = index\"\r\n      formGroupName=\"{{ index }}\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">\r\n        Artifact Type: {{ artifact.name }} ({{ artifact.list | list }})\r\n      </h6>\r\n      <div class=\"form-group\">\r\n        <label for=\"artifact\">Artifact</label>\r\n        <select class=\"form-control\" id=\"artifact\" formControlName=\"artifact\">\r\n          <ng-container\r\n            *ngFor=\"let a of runningProcess.artifacts; let index = index\"\r\n          >\r\n            <option *ngIf=\"a.artifact._id === artifact._id\" [ngValue]=\"index\">\r\n              {{ a.identifier }}\r\n            </option>\r\n          </ng-container>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"d-flex\">\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-block btn-primary\"\r\n      [disabled]=\"!form.valid\"\r\n    >\r\n      Confirm\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, ControlContainer, FormGroup } from '@angular/forms';\r\nimport { Artifact } from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { RunningArtifact } from '../../development-process-registry/running-process/running-artifact';\r\nimport { OutputArtifactMappingFormValue } from '../shared/output-artifact-mapping-form.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { StepArtifact } from '../../development-process-registry/running-process/step-artifact';\r\nimport { MetaModelService } from '../../development-process-registry/meta-model.service';\r\nimport { ArtifactDataType } from '../../development-process-registry/running-process/artifact-data';\r\n\r\n@Component({\r\n  selector: 'app-running-process-select-output-artifact',\r\n  templateUrl: './running-process-select-output-artifact.component.html',\r\n  styleUrls: ['./running-process-select-output-artifact.component.css'],\r\n})\r\nexport class RunningProcessSelectOutputArtifactComponent\r\n  implements OnInit, OnDestroy\r\n{\r\n  @Input() artifact!: Artifact;\r\n  @Input() internalArtifact?: StepArtifact;\r\n  @Input() processArtifacts!: RunningArtifact[];\r\n\r\n  private artifactIsDefinitionChangeSubscription?: Subscription;\r\n  private artifactSelectionChangeSubscription?: Subscription;\r\n\r\n  constructor(\r\n    private controlContainer: ControlContainer,\r\n    private metaModelService: MetaModelService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.artifactIsDefinitionChangeSubscription =\r\n      this.definitionControl.valueChanges.subscribe(async (value) => {\r\n        if (value && !this.artifactNameControl.value) {\r\n          await this.setDefaultName();\r\n        }\r\n      });\r\n    this.artifactSelectionChangeSubscription =\r\n      this.artifactControl.valueChanges.subscribe((value: number) =>\r\n        this.loadData(value)\r\n      );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.artifactIsDefinitionChangeSubscription != null) {\r\n      this.artifactIsDefinitionChangeSubscription.unsubscribe();\r\n    }\r\n    if (this.artifactSelectionChangeSubscription != null) {\r\n      this.artifactSelectionChangeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load the data of an artifact into the data control.\r\n   *\r\n   * @param artifact the number of the artifact to load\r\n   */\r\n  loadData(artifact: number): void {\r\n    const runningArtifact = this.processArtifacts[artifact];\r\n    this.dataControl.setValue(\r\n      runningArtifact.versions[runningArtifact.versions.length - 1].data.data\r\n    );\r\n  }\r\n\r\n  async setDefaultName(): Promise<void> {\r\n    if (\r\n      this.internalArtifact != null &&\r\n      this.internalArtifact.data.type === ArtifactDataType.REFERENCE\r\n    ) {\r\n      const api = this.metaModelService.getMetaModelApi(\r\n        this.internalArtifact.metaModelType\r\n      );\r\n      if (api != null) {\r\n        const name = await api.getName(this.internalArtifact.data.data);\r\n        if (name != null) {\r\n          this.artifactNameControl.setValue(name);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  get formGroup(): FormGroup {\r\n    return this.controlContainer.control as FormGroup;\r\n  }\r\n\r\n  get definitionControl(): AbstractControl {\r\n    return this.formGroup.get('isDefinition');\r\n  }\r\n\r\n  get artifactNameControl(): AbstractControl {\r\n    return this.formGroup.get('artifactName');\r\n  }\r\n\r\n  get artifactControl(): AbstractControl {\r\n    return this.formGroup.get('artifact');\r\n  }\r\n\r\n  get dataControl(): AbstractControl {\r\n    return this.formGroup.get('data');\r\n  }\r\n\r\n  get showNotes(): boolean {\r\n    if (this.artifact.internalArtifact) {\r\n      return false;\r\n    }\r\n    const formValue: OutputArtifactMappingFormValue = this.formGroup.value;\r\n    if (formValue.isDefinition) {\r\n      return true;\r\n    }\r\n    return formValue.artifact != null;\r\n  }\r\n}\r\n","<div [formGroup]=\"formGroup\" class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">\r\n    {{ artifact.name }} ({{ artifact.list | list }})\r\n  </h6>\r\n  <div class=\"form-group\">\r\n    <div\r\n      class=\"btn-group btn-group-toggle\"\r\n      ngbRadioGroup\r\n      name=\"selectIsDefinition\"\r\n      formControlName=\"isDefinition\"\r\n    >\r\n      <label ngbButtonLabel class=\"btn-primary\">\r\n        <input ngbButton type=\"radio\" [value]=\"false\" /> Merge\r\n      </label>\r\n      <label ngbButtonLabel class=\"btn-primary\">\r\n        <input ngbButton type=\"radio\" [value]=\"true\" /> New Artifact\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!definitionControl.value\" class=\"form-group\">\r\n    <label for=\"artifact\">Artifact</label>\r\n    <div class=\"input-group\">\r\n      <select class=\"form-control\" id=\"artifact\" formControlName=\"artifact\">\r\n        <ng-container *ngFor=\"let a of processArtifacts; let index = index\">\r\n          <option *ngIf=\"a.artifact._id === artifact._id\" [ngValue]=\"index\">\r\n            {{ a.identifier }}\r\n          </option>\r\n        </ng-container>\r\n      </select>\r\n      <div *ngIf=\"!artifact.internalArtifact\" class=\"input-group-append\">\r\n        <button\r\n          [disabled]=\"artifactControl.value == null\"\r\n          class=\"btn btn-outline-primary\"\r\n          type=\"button\"\r\n          (click)=\"loadData(artifactControl.value)\"\r\n        >\r\n          Load\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\" *ngIf=\"definitionControl.value\">\r\n    <label for=\"name\">Name</label>\r\n    <div class=\"input-group\">\r\n      <input class=\"form-control\" id=\"name\" formControlName=\"artifactName\" />\r\n      <div *ngIf=\"artifact.internalArtifact\" class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          type=\"button\"\r\n          (click)=\"setDefaultName()\"\r\n        >\r\n          Set default name\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\" *ngIf=\"showNotes\">\r\n    <label for=\"externalOutputArtifactData\">Note</label>\r\n    <quill-editor\r\n      [styles]=\"{ 'min-height': '250px' }\"\r\n      id=\"externalOutputArtifactData\"\r\n      formControlName=\"data\"\r\n    ></quill-editor>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { RunningProcess } from '../../development-process-registry/running-process/running-process';\r\nimport { Decision } from '../../development-process-registry/bm-process/decision';\r\nimport { Artifact } from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport {\r\n  OutputArtifactMappingFormService,\r\n  OutputArtifactMappingFormValue,\r\n} from '../shared/output-artifact-mapping-form.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { RunningMethod } from '../../development-process-registry/running-process/running-method';\r\nimport { OutputArtifactMapping } from '../../development-process-registry/running-process/output-artifact-mapping';\r\nimport { equalsListGeneric } from '../../shared/utils';\r\nimport { ArtifactDataType } from '../../development-process-registry/running-process/artifact-data';\r\nimport { StepArtifact } from '../../development-process-registry/running-process/step-artifact';\r\n\r\n@Component({\r\n  selector: 'app-running-process-select-output-artifacts',\r\n  templateUrl: './running-process-select-output-artifacts.component.html',\r\n  styleUrls: ['./running-process-select-output-artifacts.component.css'],\r\n})\r\nexport class RunningProcessSelectOutputArtifactsComponent\r\n  implements OnChanges, OnDestroy\r\n{\r\n  @Input() runningProcess: RunningProcess;\r\n  @Input() runningMethod: RunningMethod;\r\n  @Input() decision: Decision;\r\n\r\n  @Output() updateOutputArtifacts = new EventEmitter<FormArray>();\r\n\r\n  outputArtifacts: Artifact[];\r\n  internalOutputArtifacts: StepArtifact[];\r\n\r\n  form: FormGroup;\r\n  changed = false;\r\n\r\n  private changeSubscription?: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private outputArtifactMappingFormService: OutputArtifactMappingFormService\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    let reload = false;\r\n    if (changes.runningMethod) {\r\n      const oldRunningMethod: RunningMethod =\r\n        changes.runningMethod.previousValue;\r\n      const newRunningMethod: RunningMethod =\r\n        changes.runningMethod.currentValue;\r\n      if (\r\n        oldRunningMethod == null ||\r\n        !this.equals(\r\n          oldRunningMethod.outputArtifacts,\r\n          newRunningMethod.outputArtifacts\r\n        )\r\n      ) {\r\n        reload = true;\r\n      }\r\n    }\r\n    if (changes.decision || reload) {\r\n      const decision: Decision = changes.decision.currentValue;\r\n      const artifacts = [];\r\n      decision.outputArtifacts\r\n        .getList(decision.method.outputArtifacts)\r\n        .elements.forEach((element) => artifacts.push(...element.elements));\r\n      this.outputArtifacts = artifacts;\r\n      this.internalOutputArtifacts = this.runningMethod.getOutputArtifacts();\r\n      this.loadForm(artifacts, this.runningMethod.outputArtifacts);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription != null) {\r\n      this.changeSubscription.unsubscribe();\r\n      this.changeSubscription = undefined;\r\n    }\r\n  }\r\n\r\n  loadForm(\r\n    artifacts: Artifact[],\r\n    outputArtifacts: OutputArtifactMapping[]\r\n  ): void {\r\n    if (this.changeSubscription != null) {\r\n      this.changeSubscription.unsubscribe();\r\n      this.changeSubscription = undefined;\r\n    }\r\n    this.form = this.outputArtifactMappingFormService.createForm(\r\n      artifacts,\r\n      outputArtifacts\r\n    );\r\n    this.changed = false;\r\n    this.changeSubscription = this.formArray.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value: OutputArtifactMappingFormValue[]) =>\r\n            (this.changed = !this.equals(\r\n              this.outputArtifactMappingFormService.get(value),\r\n              this.runningMethod.outputArtifacts\r\n            ))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.updateOutputArtifacts.emit(this.formArray);\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.form.get('outputArtifacts') as FormArray;\r\n  }\r\n\r\n  showNotes(artifact: Artifact, index: number): boolean {\r\n    if (artifact.internalArtifact) {\r\n      return false;\r\n    }\r\n    const formValue: OutputArtifactMappingFormValue =\r\n      this.formArray.at(index).value;\r\n    if (formValue.isDefinition) {\r\n      return true;\r\n    }\r\n    return formValue.artifact != null;\r\n  }\r\n\r\n  private equals(\r\n    outputArtifactsA: OutputArtifactMapping[],\r\n    outputArtifactsB: OutputArtifactMapping[]\r\n  ): boolean {\r\n    return equalsListGeneric(\r\n      outputArtifactsA,\r\n      outputArtifactsB,\r\n      (mappingA, mappingB): boolean => {\r\n        if (\r\n          mappingA.isDefinition !== mappingB.isDefinition ||\r\n          mappingA.data.type !== mappingB.data.type\r\n        ) {\r\n          return false;\r\n        }\r\n        if (mappingA.isDefinition) {\r\n          if (mappingA.artifactName !== mappingB.artifactName) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (mappingA.artifact !== mappingB.artifact) {\r\n            return false;\r\n          }\r\n        }\r\n        if (mappingA.data.type === ArtifactDataType.STRING) {\r\n          return mappingA.data.data === mappingB.data.data;\r\n        }\r\n        return true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ng-container *ngIf=\"outputArtifacts.length === 0\">\r\n  <div class=\"alert alert-info\">\r\n    This building block has no output artifacts.\r\n  </div>\r\n</ng-container>\r\n<form\r\n  [formGroup]=\"form\"\r\n  *ngIf=\"outputArtifacts.length > 0\"\r\n  (ngSubmit)=\"submitForm()\"\r\n>\r\n  <div formArrayName=\"outputArtifacts\">\r\n    <app-running-process-select-output-artifact\r\n      *ngFor=\"let artifact of outputArtifacts; let index = index\"\r\n      formGroupName=\"{{ index }}\"\r\n      [artifact]=\"artifact\"\r\n      [internalArtifact]=\"internalOutputArtifacts[index]\"\r\n      [processArtifacts]=\"runningProcess.artifacts\"\r\n    ></app-running-process-select-output-artifact>\r\n  </div>\r\n  <div class=\"d-flex\">\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-sm btn-block\"\r\n      [class.btn-dark]=\"!changed\"\r\n      [class.btn-primary]=\"changed\"\r\n      [disabled]=\"!form.valid\"\r\n    >\r\n      Update Artifacts<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RunningProcessService } from '../../development-process-registry/running-process/running-process.service';\r\nimport { RunningProcessViewerComponent } from '../../development-process-view/running-process-viewer/running-process-viewer.component';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RunningArtifact } from '../../development-process-registry/running-process/running-artifact';\r\nimport { ArtifactVersion } from '../../development-process-registry/running-process/artifact-version';\r\nimport { OutputArtifactMappingFormService } from '../shared/output-artifact-mapping-form.service';\r\nimport { Decision } from '../../development-process-registry/bm-process/decision';\r\nimport {\r\n  DevelopmentMethod,\r\n  DevelopmentMethodEntry,\r\n} from '../../development-process-registry/development-method/development-method';\r\nimport { DevelopmentMethodService } from '../../development-process-registry/development-method/development-method.service';\r\nimport { SituationalFactorEntry } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\nimport { BmProcessService } from '../../development-process-registry/bm-process/bm-process.service';\r\nimport { ExecutionErrors } from '../../development-process-registry/running-process/process-execution.service';\r\nimport {\r\n  ArtifactDataReference,\r\n  ArtifactDataType,\r\n} from '../../development-process-registry/running-process/artifact-data';\r\nimport { RunningMethodInfo } from '../../development-process-registry/running-process/running-method-info';\r\nimport { MetaModelService } from '../../development-process-registry/meta-model.service';\r\nimport { RunningProcessLoaderService } from '../shared/running-process-loader.service';\r\nimport { RunningProcess } from '../../development-process-registry/running-process/running-process';\r\nimport { ConcreteArtifactService } from '../../development-process-registry/running-process/concrete-artifact.service';\r\nimport { DevelopmentMethodIncompleteModalComponent } from '../development-method-incomplete-modal/development-method-incomplete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-running-process',\r\n  templateUrl: './running-process.component.html',\r\n  styleUrls: ['./running-process.component.css'],\r\n  providers: [RunningProcessLoaderService],\r\n})\r\nexport class RunningProcessComponent implements OnInit {\r\n  decisions: any[];\r\n\r\n  private modalReference: NgbModalRef;\r\n  modalDecision: Decision;\r\n  modalArtifact: RunningArtifact;\r\n  modalArtifactVersion: ArtifactVersion;\r\n  modalDevelopmentMethods: DevelopmentMethodEntry[] = null;\r\n  modalDevelopmentMethod: DevelopmentMethod;\r\n  modalRunningMethodInfo: RunningMethodInfo;\r\n\r\n  @ViewChild(RunningProcessViewerComponent)\r\n  runningProcessViewer: RunningProcessViewerComponent;\r\n  @ViewChild('infoModal', { static: true }) infoModal: unknown;\r\n  @ViewChild('multipleOptionsInfoModal', { static: true })\r\n  multipleOptionsInfoModal: unknown;\r\n  @ViewChild('showArtifactVersionModal', { static: true })\r\n  showArtifactVersionModal: unknown;\r\n  @ViewChild('selectMethodModal', { static: true }) selectMethodModal: unknown;\r\n  @ViewChild('methodConfigurationModal', { static: true })\r\n  methodConfigurationModal: unknown;\r\n  @ViewChild('commentsModal', { static: true }) commentsModal: unknown;\r\n  @ViewChild('artifactExportModal', { static: true })\r\n  artifactExportModal: unknown;\r\n  @ViewChild('artifactImportModal', { static: true })\r\n  artifactImportModal: unknown;\r\n  @ViewChild('artifactRenameModal', { static: true })\r\n  artifactRenameModal: unknown;\r\n\r\n  constructor(\r\n    private bmProcessService: BmProcessService,\r\n    private concreteArtifactService: ConcreteArtifactService,\r\n    private developmentMethodService: DevelopmentMethodService,\r\n    private metaModelService: MetaModelService,\r\n    private modalService: NgbModal,\r\n    private outputArtifactMappingFormService: OutputArtifactMappingFormService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public runningProcessLoaderService: RunningProcessLoaderService,\r\n    private runningProcessService: RunningProcessService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.runningProcessLoaderService.loaded.subscribe(() =>\r\n      this.afterReload(this.runningProcess)\r\n    );\r\n  }\r\n\r\n  openShowArtifactVersionModal(\r\n    artifact: RunningArtifact,\r\n    version: ArtifactVersion\r\n  ): void {\r\n    this.modalArtifact = artifact;\r\n    this.modalArtifactVersion = version;\r\n    this.modalReference = this.modalService.open(\r\n      this.showArtifactVersionModal,\r\n      { size: 'lg' }\r\n    );\r\n  }\r\n\r\n  viewArtifactReference(reference: ArtifactDataReference): void {\r\n    this.modalReference.close();\r\n    this.metaModelService\r\n      .getMetaModelApi(reference.type)\r\n      .view(reference, this.router, {\r\n        referenceType: 'Process',\r\n        runningProcessId: this.runningProcess._id,\r\n      });\r\n  }\r\n\r\n  openInfoModal(decision: Decision): void {\r\n    this.modalDecision = decision;\r\n    this.modalReference = this.modalService.open(this.infoModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async openSelectMethodModal(): Promise<void> {\r\n    this.modalReference = this.modalService.open(this.selectMethodModal, {\r\n      size: 'lg',\r\n      beforeDismiss: () => {\r\n        this.modalDevelopmentMethods = null;\r\n        return true;\r\n      },\r\n    });\r\n    this.modalDevelopmentMethods = this.sortByDistance(\r\n      await this.developmentMethodService.getList()\r\n    );\r\n  }\r\n\r\n  async configureMethod(method: DevelopmentMethodEntry): Promise<void> {\r\n    const developmentMethod = new DevelopmentMethod(method, undefined);\r\n    if (!this.developmentMethodService.isCorrectlyDefined(developmentMethod)) {\r\n      const modal = this.modalService.open(\r\n        DevelopmentMethodIncompleteModalComponent\r\n      );\r\n      const component: DevelopmentMethodIncompleteModalComponent =\r\n        modal.componentInstance;\r\n      component.developmentMethod = developmentMethod;\r\n      return;\r\n    }\r\n    this.modalDevelopmentMethods = null;\r\n    this.modalReference.close();\r\n    await this.modalReference.result;\r\n    this.modalDevelopmentMethod = developmentMethod;\r\n    this.modalDecision = new Decision(undefined, {\r\n      method: this.modalDevelopmentMethod,\r\n      stakeholders: {},\r\n      inputArtifacts: {},\r\n      outputArtifacts: {},\r\n      tools: {},\r\n      stepDecisions: this.modalDevelopmentMethod.executionSteps.map(() => null),\r\n    });\r\n    this.modalReference = this.modalService.open(\r\n      this.methodConfigurationModal,\r\n      { size: 'lg' }\r\n    );\r\n  }\r\n\r\n  updateDecision(updates: any): void {\r\n    this.modalDecision.update(updates);\r\n  }\r\n\r\n  async executeStep(nodeId: string): Promise<void> {\r\n    const selectedFlow = this.runningProcessViewer.getSelectedFlow();\r\n    try {\r\n      await this.runningProcessService.executeStep(\r\n        this.runningProcess,\r\n        nodeId,\r\n        selectedFlow ? selectedFlow.id : null\r\n      );\r\n      const process = await this.runningProcessService.get(\r\n        this.runningProcess._id\r\n      );\r\n      await this.runningProcessService.jumpSteps(process);\r\n    } catch (error) {\r\n      if (error.message === ExecutionErrors.MULTIPLE_OPTIONS) {\r\n        this.focus(nodeId);\r\n        this.modalReference = this.modalService.open(\r\n          this.multipleOptionsInfoModal,\r\n          { size: 'lg' }\r\n        );\r\n      } else {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  async addMethod(): Promise<void> {\r\n    this.modalReference.close();\r\n    await this.runningProcessService.addMethod(\r\n      this.runningProcess,\r\n      this.modalDecision\r\n    );\r\n  }\r\n\r\n  async removeMethod(executionId: string): Promise<void> {\r\n    await this.runningProcessService.removeMethod(\r\n      this.runningProcess,\r\n      executionId\r\n    );\r\n  }\r\n\r\n  sortByDistance<\r\n    T extends {\r\n      _id: string;\r\n      situationalFactors: { list: string; element?: SituationalFactorEntry }[];\r\n    }[]\r\n  >(elements: T): T {\r\n    const distanceMap: { [id: string]: number } = {};\r\n    elements.forEach(\r\n      (element) =>\r\n        (distanceMap[element._id] = this.bmProcessService.distanceToContext(\r\n          this.runningProcess.process,\r\n          element.situationalFactors.map((factor) => factor.element)\r\n        ))\r\n    );\r\n    return elements.sort(\r\n      (elementA, elementB) =>\r\n        distanceMap[elementA._id] - distanceMap[elementB._id]\r\n    );\r\n  }\r\n\r\n  async viewExecution(executionId): Promise<void> {\r\n    await this.router.navigate([\r\n      'runningprocess',\r\n      'runningprocessview',\r\n      this.runningProcess._id,\r\n      'method',\r\n      executionId,\r\n    ]);\r\n  }\r\n\r\n  focus(id: string): void {\r\n    this.runningProcessViewer.focus(id);\r\n  }\r\n\r\n  async startNodeExecution(nodeId: string): Promise<void> {\r\n    await this.runningProcessService.startMethodExecution(\r\n      this.runningProcess._id,\r\n      nodeId\r\n    );\r\n  }\r\n\r\n  async startExecution(executionId: string): Promise<void> {\r\n    await this.runningProcessService.startTodoMethodExecution(\r\n      this.runningProcess._id,\r\n      executionId\r\n    );\r\n  }\r\n\r\n  openCommentsModal(executionId: string): void {\r\n    this.modalRunningMethodInfo = this.runningProcess.getMethod(executionId);\r\n    this.modalReference = this.modalService.open(this.commentsModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  openArtifactExportModal(artifact: RunningArtifact): void {\r\n    this.modalArtifact = artifact;\r\n    this.modalReference = this.modalService.open(this.artifactExportModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async exportArtifact(\r\n    identifier: string,\r\n    artifact: RunningArtifact\r\n  ): Promise<void> {\r\n    artifact = await this.concreteArtifactService.export(\r\n      identifier,\r\n      artifact,\r\n      this.runningProcess.name\r\n    );\r\n    await this.router.navigate([\r\n      '/',\r\n      'concreteArtifacts',\r\n      'detail',\r\n      artifact._id,\r\n    ]);\r\n  }\r\n\r\n  openArtifactImportModal(): void {\r\n    this.modalReference = this.modalService.open(this.artifactImportModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async importArtifact(artifactId: string): Promise<void> {\r\n    const artifact = await this.concreteArtifactService.get(artifactId);\r\n    const copiedArtifact = await this.concreteArtifactService.copy(artifact);\r\n    await this.runningProcessService.importArtifact(\r\n      this.runningProcess._id,\r\n      copiedArtifact\r\n    );\r\n  }\r\n\r\n  openRenameArtifactModal(artifact: RunningArtifact): void {\r\n    this.modalArtifact = artifact;\r\n    this.modalReference = this.modalService.open(this.artifactRenameModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async renameArtifact(\r\n    identifier: string,\r\n    artifact: RunningArtifact\r\n  ): Promise<void> {\r\n    await this.runningProcessService.renameArtifact(\r\n      this.runningProcess,\r\n      artifact,\r\n      identifier\r\n    );\r\n  }\r\n\r\n  getArtifactDataTypeString(): ArtifactDataType {\r\n    return ArtifactDataType.STRING;\r\n  }\r\n\r\n  getArtifactDataTypeReference(): ArtifactDataType {\r\n    return ArtifactDataType.REFERENCE;\r\n  }\r\n\r\n  private async afterReload(runningProcess: RunningProcess): Promise<void> {\r\n    this.decisions =\r\n      await this.runningProcessService.getExecutableDecisionNodes(\r\n        runningProcess\r\n      );\r\n  }\r\n\r\n  get runningProcess(): RunningProcess {\r\n    return this.runningProcessLoaderService.runningProcess;\r\n  }\r\n}\r\n","<ng-template #infoModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Building Block Info</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-development-method-summary\r\n      [decision]=\"modalDecision\"\r\n    ></app-development-method-summary>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #multipleOptionsInfoModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Execution Error</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    You need to select one of the outgoing flows of the exclusive gateway to\r\n    specify which path should be taken for the execution.\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #showArtifactVersionModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Version #{{ modalArtifact.versions.indexOf(modalArtifactVersion) + 1 }} of\r\n      {{ modalArtifact.identifier }} &ndash; {{ modalArtifact.artifact.name }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <ng-container\r\n      *ngIf=\"getArtifactDataTypeString() === modalArtifactVersion.data.type\"\r\n    >\r\n      <h5>Note</h5>\r\n      <quill-view [content]=\"modalArtifactVersion.data.data\"></quill-view>\r\n    </ng-container>\r\n    <ng-container\r\n      *ngIf=\"getArtifactDataTypeReference() === modalArtifactVersion.data.type\"\r\n    >\r\n      <h5>Reference</h5>\r\n      This version points on another object in the database.\r\n      <button\r\n        class=\"btn btn-xs btn-primary\"\r\n        (click)=\"viewArtifactReference(modalArtifactVersion.data.data)\"\r\n      >\r\n        View\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #selectMethodModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Select Method Building Block to add to TODO</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-development-methods-selection-form\r\n      [contextSituationalFactors]=\"runningProcess.process.situationalFactors\"\r\n      [developmentMethods]=\"modalDevelopmentMethods\"\r\n      (selectDevelopmentMethod)=\"configureMethod($event)\"\r\n    ></app-development-methods-selection-form>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #methodConfigurationModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Configure Building Block {{ modalDevelopmentMethod.name }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-method-info\r\n      [contextSituationalFactors]=\"runningProcess.process.situationalFactors\"\r\n      [developmentMethod]=\"modalDevelopmentMethod\"\r\n      [decision]=\"modalDecision\"\r\n      (updateDecisions)=\"updateDecision($event)\"\r\n    ></app-method-info>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button class=\"btn btn-primary\" (click)=\"addMethod()\">Add method</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #commentsModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Comments of {{ modalRunningMethodInfo.methodName }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-running-process-method-comments\r\n      [comments]=\"modalRunningMethodInfo.comments\"\r\n      [editable]=\"false\"\r\n    ></app-running-process-method-comments>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #artifactExportModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Export Artifact</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-running-process-artifact-export-form\r\n      [artifact]=\"modalArtifact\"\r\n      (submitArtifactExportForm)=\"\r\n        exportArtifact($event.value.identifier, modalArtifact); d()\r\n      \"\r\n    ></app-running-process-artifact-export-form>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #artifactImportModal let-d=\"dismiss\" let-c=\"close\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Import Artifact</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-running-process-artifact-import-form\r\n      (selectArtifact)=\"importArtifact($event._id); c()\"\r\n    ></app-running-process-artifact-import-form>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #artifactRenameModal let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Rename Artifact {{ modalArtifact.identifier }} &ndash;\r\n      {{ modalArtifact.artifact.name }}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-running-process-artifact-rename-form\r\n      [artifact]=\"modalArtifact\"\r\n      (submitArtifactExportForm)=\"\r\n        renameArtifact($event.value.identifier, modalArtifact); c()\r\n      \"\r\n    ></app-running-process-artifact-rename-form>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"runningProcess\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\"\r\n      >{{ runningProcess.process.name }} &ndash; {{ runningProcess.name }}</a\r\n    >\r\n  </nav>\r\n</div>\r\n\r\n<main\r\n  *ngIf=\"\r\n    runningProcessLoaderService.error &&\r\n    runningProcessLoaderService.errorStatus === 404\r\n  \"\r\n  role=\"main\"\r\n>\r\n  <div class=\"alert alert-info container my-3\">\r\n    <p>\r\n      This running method does not exist. Reason:\r\n      {{ runningProcessLoaderService.errorReason }}.\r\n    </p>\r\n    <p class=\"mb-0\">\r\n      <a [routerLink]=\"['/', 'runningprocess']\"\r\n        >Go back to overview of running methods</a\r\n      >\r\n    </p>\r\n  </div>\r\n</main>\r\n\r\n<main *ngIf=\"runningProcess\" role=\"main\">\r\n  <app-running-process-viewer\r\n    [runningProcess]=\"runningProcess\"\r\n  ></app-running-process-viewer>\r\n\r\n  <div class=\"container\">\r\n    <div\r\n      class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n      *ngIf=\"decisions.length > 0\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">Decision</h6>\r\n      <ul class=\"list-group\">\r\n        <li *ngFor=\"let decision of decisions\" class=\"list-group-item\">\r\n          <div class=\"d-flex justify-content-between align-items-baseline\">\r\n            <h5>\r\n              Exclusive Gateway<span\r\n                *ngIf=\"decision.businessObject && decision.businessObject.name\"\r\n              >\r\n                {{ decision.businessObject.name }}</span\r\n              >\r\n            </h5>\r\n            <div class=\"d-flex align-items-baseline\">\r\n              <button\r\n                (click)=\"focus(decision.id)\"\r\n                type=\"button\"\r\n                class=\"btn btn-dark btn-xs mr-1\"\r\n              >\r\n                View\r\n              </button>\r\n              <button\r\n                (click)=\"executeStep(decision.id)\"\r\n                type=\"button\"\r\n                class=\"btn btn-primary btn-xs\"\r\n              >\r\n                Next Step\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <h6 class=\"border-bottom border-gray pb-2\">Kanban Board</h6>\r\n      <app-running-process-kanban-board\r\n        [runningProcess]=\"runningProcess\"\r\n        (addTodo)=\"openSelectMethodModal()\"\r\n        (removeTodo)=\"removeMethod($event)\"\r\n        (viewNode)=\"focus($event)\"\r\n        (showInfo)=\"openInfoModal($event)\"\r\n        (startNodeExecution)=\"startNodeExecution($event)\"\r\n        (startExecution)=\"startExecution($event)\"\r\n        (viewExecution)=\"viewExecution($event)\"\r\n        (viewComments)=\"openCommentsModal($event)\"\r\n      ></app-running-process-kanban-board>\r\n    </div>\r\n\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <div\r\n        class=\"\r\n          d-flex\r\n          align-items-baseline\r\n          justify-content-between\r\n          border-bottom border-gray\r\n          mb-2\r\n        \"\r\n      >\r\n        <h6 class=\"pb-2 mb-0\">Artifacts</h6>\r\n        <button class=\"btn btn-xs btn-dark\" (click)=\"openArtifactImportModal()\">\r\n          Import Artifact\r\n        </button>\r\n      </div>\r\n      <div\r\n        *ngIf=\"runningProcess.artifacts.length === 0\"\r\n        class=\"alert alert-info mb-0\"\r\n      >\r\n        There are no artifacts\r\n      </div>\r\n      <ul *ngIf=\"runningProcess.artifacts.length > 0\" class=\"list-group\">\r\n        <li\r\n          *ngFor=\"let artifact of runningProcess.artifacts\"\r\n          class=\"list-group-item\"\r\n        >\r\n          <div class=\"d-flex\">\r\n            <div>\r\n              {{ artifact.identifier }} &ndash; {{ artifact.artifact.name }}\r\n            </div>\r\n            <div class=\"ml-auto\">\r\n              <div\r\n                class=\"btn btn-dark btn-xs mr-1\"\r\n                (click)=\"openRenameArtifactModal(artifact)\"\r\n              >\r\n                Rename\r\n              </div>\r\n              <div\r\n                class=\"btn btn-dark btn-xs\"\r\n                (click)=\"openArtifactExportModal(artifact)\"\r\n              >\r\n                Export\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul *ngIf=\"artifact.versions.length > 0\">\r\n            <li *ngFor=\"let version of artifact.versions; let index = index\">\r\n              <a\r\n                [routerLink]=\"[]\"\r\n                (click)=\"openShowArtifactVersionModal(artifact, version)\"\r\n                >Version #{{ index + 1 }}</a\r\n              >\r\n              &ndash;\r\n              <a\r\n                *ngIf=\"\r\n                  version.createdBy !== 'manual' &&\r\n                  version.createdBy !== 'imported'\r\n                \"\r\n                [routerLink]=\"[]\"\r\n                (click)=\"focus(version.createdBy)\"\r\n              >\r\n                {{\r\n                  runningProcess.process.decisions[version.createdBy].method\r\n                    .name\r\n                }}\r\n              </a>\r\n              <span *ngIf=\"version.createdBy === 'manual'\">\r\n                {{\r\n                  runningProcess.getExecutedMethod(version.executedBy)\r\n                    .methodName\r\n                }}\r\n              </span>\r\n              <span *ngIf=\"version.createdBy === 'imported'\">\r\n                Imported from {{ version.importName }}\r\n              </span>\r\n              &ndash; {{ version.time | date: 'short' }}\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  RunningProcess,\r\n  RunningProcessEntry,\r\n  RunningProcessInit,\r\n} from '../../development-process-registry/running-process/running-process';\r\nimport { RunningProcessService } from '../../development-process-registry/running-process/running-process.service';\r\nimport { BmProcessEntry } from '../../development-process-registry/bm-process/bm-process';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { BmProcessService } from '../../development-process-registry/bm-process/bm-process.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ELEMENT_SERVICE, ListService } from '../../shared/list.service';\r\n\r\n@Component({\r\n  selector: 'app-running-processes',\r\n  templateUrl: './running-processes.component.html',\r\n  styleUrls: ['./running-processes.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: RunningProcessService },\r\n  ],\r\n})\r\nexport class RunningProcessesComponent implements OnInit {\r\n  addRunningProcessForm: FormGroup;\r\n  processes: BmProcessEntry[] = [];\r\n\r\n  modalRunningProcess: RunningProcess;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteProcessModal', { static: true })\r\n  deleteProcessModal: unknown;\r\n\r\n  constructor(\r\n    private bmProcessService: BmProcessService,\r\n    private fb: FormBuilder,\r\n    private listService: ListService<RunningProcess, RunningProcessInit>,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadProcesses();\r\n    this.initForm();\r\n  }\r\n\r\n  initForm(): void {\r\n    this.addRunningProcessForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      process: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  async addRunningProcess(): Promise<void> {\r\n    await this.listService.add({\r\n      process: this.processControl.value,\r\n      name: this.nameControl.value,\r\n    });\r\n    this.initForm();\r\n  }\r\n\r\n  async loadProcesses(): Promise<void> {\r\n    this.processes = await this.bmProcessService.getList();\r\n  }\r\n\r\n  async openDeleteProcessModal(runningProcess: RunningProcess): Promise<void> {\r\n    this.modalRunningProcess = runningProcess;\r\n    this.modalReference = this.modalService.open(this.deleteProcessModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async deleteRunningProcess(id: string): Promise<void> {\r\n    await this.listService.delete(id);\r\n  }\r\n\r\n  get processControl(): FormControl {\r\n    return this.addRunningProcessForm.get('process') as FormControl;\r\n  }\r\n\r\n  get nameControl(): FormControl {\r\n    return this.addRunningProcessForm.get('name') as FormControl;\r\n  }\r\n\r\n  get runningProcessesList(): RunningProcessEntry[] {\r\n    return this.listService.elements;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.listService.noResults;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.listService.loading;\r\n  }\r\n\r\n  get reloading(): boolean {\r\n    return this.listService.reloading;\r\n  }\r\n}\r\n","<ng-template #deleteProcessModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"deleteRunningProcess(modalRunningProcess._id); c()\"\r\n  >\r\n    <div modalTitle>\r\n      Delete Running Method {{ modalRunningProcess.process.name }} &ndash;\r\n      {{ modalRunningProcess.name }}\r\n    </div>\r\n    You are deleting the running method {{ modalRunningProcess.name }}, which\r\n    executes the method {{ modalRunningProcess.process.name }}. By deleting this\r\n    running method all corresponding models are deleted too. This can not be\r\n    undone.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Running Methods</a>\r\n    <a\r\n      *ngFor=\"let runningProcess of runningProcessesList\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['runningprocessview', runningProcess._id]\"\r\n    >\r\n      {{ runningProcess.process.name }} &ndash; {{ runningProcess.name }}\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    A list of all methods that are currently executed. To create such a method\r\n    create a\r\n    <a routerLink=\"/bmprocess\">Business Model Development Method</a> and add the\r\n    method to the running methods in the form below.\r\n  </div>\r\n\r\n  <app-list-wrapper\r\n    listTitle=\"Running Methods\"\r\n    [reloading]=\"reloading\"\r\n    [loading]=\"loading\"\r\n    [noResults]=\"noResults\"\r\n  >\r\n    <div noResults>No running methods available.</div>\r\n    <ul results class=\"list-group\">\r\n      <li\r\n        class=\"\r\n          d-flex\r\n          list-group-item\r\n          justify-content-between\r\n          align-items-baseline\r\n        \"\r\n        *ngFor=\"let runningProcess of runningProcessesList\"\r\n      >\r\n        <div>\r\n          <span\r\n            >{{ runningProcess.process.name }} &ndash;\r\n            {{ runningProcess.name }}</span\r\n          >\r\n        </div>\r\n        <div>\r\n          <a\r\n            [routerLink]=\"['runningprocessview', runningProcess._id]\"\r\n            type=\"button\"\r\n            class=\"btn btn-dark btn-xs mr-1\"\r\n            >View</a\r\n          >\r\n          <button\r\n            (click)=\"openDeleteProcessModal(runningProcess)\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger btn-xs\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </app-list-wrapper>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Add Running Method</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"addRunningProcessForm\"\r\n        (ngSubmit)=\"addRunningProcess()\"\r\n      >\r\n        <div class=\"form-group form-row\">\r\n          <label for=\"processSelector\" class=\"col-sm-4 col-form-label\"\r\n            >Method</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <select\r\n              id=\"processSelector\"\r\n              formControlName=\"process\"\r\n              class=\"form-control\"\r\n              [class.is-invalid]=\"\r\n                processControl.invalid && processControl.touched\r\n              \"\r\n            >\r\n              <option *ngFor=\"let process of processes\" [ngValue]=\"process\">\r\n                {{ process.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group form-row\">\r\n          <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n              [class.is-invalid]=\"nameControl.invalid && nameControl.touched\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!addRunningProcessForm.valid\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Injectable } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  ArtifactMapping,\r\n  ArtifactMappingInit,\r\n} from '../../development-process-registry/development-method/artifact-mapping';\r\n\r\nexport type MappingsFormValue = MappingFormValue[];\r\n\r\nexport interface MappingFormValue {\r\n  output: boolean;\r\n  step?: number;\r\n  group?: number;\r\n  artifact: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ArtifactMappingFormService {\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  createMappingsForm(mappings: ArtifactMapping[]): FormArray {\r\n    return this.fb.array(\r\n      mappings.map((mapping) => this.createMappingForm(mapping))\r\n    );\r\n  }\r\n\r\n  createMappingForm(mapping: ArtifactMapping = null): FormGroup {\r\n    if (!mapping) {\r\n      return this.fb.group({\r\n        output: this.fb.control(false, Validators.required),\r\n        step: this.fb.control(null, Validators.required),\r\n        artifact: this.fb.control(null, Validators.required),\r\n      });\r\n    } else if (mapping.output) {\r\n      return this.fb.group({\r\n        output: this.fb.control(true, Validators.required),\r\n        group: this.fb.control(mapping.group, Validators.required),\r\n        artifact: this.fb.control(mapping.artifact, Validators.required),\r\n      });\r\n    } else {\r\n      return this.fb.group({\r\n        output: this.fb.control(false, Validators.required),\r\n        step: this.fb.control(mapping.step, Validators.required),\r\n        artifact: this.fb.control(mapping.artifact, Validators.required),\r\n      });\r\n    }\r\n  }\r\n\r\n  convertMappingForm(mappingForm: FormGroup): void {\r\n    if (mappingForm.get('output').value) {\r\n      mappingForm.removeControl('step');\r\n      mappingForm.addControl(\r\n        'group',\r\n        this.fb.control(null, Validators.required)\r\n      );\r\n    } else {\r\n      mappingForm.removeControl('group');\r\n      mappingForm.addControl(\r\n        'step',\r\n        this.fb.control(null, Validators.required)\r\n      );\r\n    }\r\n    mappingForm.get('artifact').reset();\r\n  }\r\n\r\n  /**\r\n   * Resets the step and artifact.\r\n   *\r\n   * @param mappingsForm the mappings in which to search\r\n   * @param step the step to which a mapping should point to reset it\r\n   */\r\n  removeMappingTo(mappingsForm: FormArray, step: number): void {\r\n    mappingsForm.controls.forEach((mappingForm: FormGroup) => {\r\n      if (\r\n        mappingForm.get('output').value === false &&\r\n        mappingForm.get('step').value === step\r\n      ) {\r\n        mappingForm.get('step').reset();\r\n        mappingForm.get('artifact').reset();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resets only the artifact.\r\n   *\r\n   * @param mappingsForm the mappings in which to search\r\n   * @param step the step to which a mapping should point to reset it\r\n   */\r\n  resetMappingTo(mappingsForm: FormArray, step: number): void {\r\n    mappingsForm.controls.forEach((mappingForm: FormGroup) => {\r\n      if (\r\n        mappingForm.get('output').value === false &&\r\n        mappingForm.get('step').value === step\r\n      ) {\r\n        mappingForm.get('artifact').reset();\r\n      }\r\n    });\r\n  }\r\n\r\n  getMappings(mappings: MappingsFormValue): ArtifactMappingInit[] {\r\n    return mappings.map((mapping) => this.getMapping(mapping));\r\n  }\r\n\r\n  getMapping(mapping: MappingFormValue): ArtifactMappingInit {\r\n    if (mapping.output) {\r\n      return {\r\n        output: mapping.output,\r\n        group: mapping.group,\r\n        artifact: mapping.artifact,\r\n      };\r\n    } else {\r\n      return {\r\n        output: mapping.output,\r\n        step: mapping.step,\r\n        artifact: mapping.artifact,\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { BmProcess } from '../../development-process-registry/bm-process/bm-process';\r\nimport { BmProcessService } from '../../development-process-registry/bm-process/bm-process.service';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\n\r\n@Injectable()\r\nexport class BmProcessLoaderService extends ElementLoaderService {\r\n  bmProcess: BmProcess = null;\r\n\r\n  constructor(\r\n    private bmProcessService: BmProcessService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const bmProcessId = paramMap.get('id');\r\n    this.changesFeed = this.bmProcessService\r\n      .getChangesFeed(bmProcessId)\r\n      .subscribe(() => this.loadBmProcess(bmProcessId));\r\n    void this.loadBmProcess(bmProcessId);\r\n  }\r\n\r\n  private async loadBmProcess(bmProcessId: string): Promise<void> {\r\n    this.bmProcess = await this.bmProcessService.get(bmProcessId);\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\r\nimport bmProcess from '../bpmn-extensions/bm-process';\r\nimport bmProcessPatterns from '../bpmn-extensions/bm-process-patterns';\r\nimport bmdl from '../../../assets/bpmn_bmdl.json';\r\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\r\nimport { center } from 'diagram-js/lib/util/PositionUtil';\r\nimport { getBBox, selfAndChildren } from 'diagram-js/lib/util/Elements';\r\nimport { pointInRect } from 'diagram-js/lib/util/Geometry';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport { ProcessPattern } from '../../development-process-registry/process-pattern/process-pattern';\r\nimport { Type } from '../../development-process-registry/method-elements/type/type';\r\nimport { Artifact } from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { Decision } from '../../development-process-registry/bm-process/decision';\r\nimport { BpmnViewerService } from '../../development-process-view/shared/bpmn-viewer.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BpmnService extends BpmnViewerService {\r\n  /**\r\n   * Get a BpmnModeler with customizations to support the creation of process patterns\r\n   *\r\n   * @returns the bpmnModeler\r\n   */\r\n  getBpmnProcessPatternModeler(): BpmnModeler {\r\n    return new BpmnModeler({\r\n      additionalModules: [bmProcessPatterns],\r\n      moddleExtensions: {\r\n        bmdl,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get a BpmnModeler with customizations to support the development of business model development processes\r\n   *\r\n   * @returns a bpmnModeler\r\n   */\r\n  getBmProcessModeler(): BpmnModeler {\r\n    return new BpmnModeler({\r\n      additionalModules: [bmProcess],\r\n      moddleExtensions: {\r\n        bmdl,\r\n      },\r\n    });\r\n  }\r\n\r\n  appendBpmn(\r\n    modeler: BpmnModeler,\r\n    processPattern: ProcessPattern,\r\n    lastElement\r\n  ): Promise<void> {\r\n    const processPatternModeler = this.getBmProcessModeler();\r\n    return processPatternModeler\r\n      .importXML(processPattern.pattern)\r\n      .then(() => {\r\n        const operation = new BpmnAttachOperation(\r\n          modeler,\r\n          processPatternModeler,\r\n          lastElement\r\n        );\r\n        operation.init();\r\n        operation.attach(processPattern.name, processPattern._id);\r\n      })\r\n      .finally(() => processPatternModeler.destroy());\r\n  }\r\n\r\n  /**\r\n   * Removes a process pattern from the modeler\r\n   *\r\n   * @param modeler the modeler\r\n   * @param subProcessElement the sub process representing the process pattern\r\n   */\r\n  removeProcessPattern(modeler: BpmnModeler, subProcessElement) {\r\n    const modeling = modeler.get('modeling');\r\n    if (is(subProcessElement.parent, 'bpmn:SubProcess')) {\r\n      const operation = new BpmnRemoveOperation(modeler, subProcessElement);\r\n      operation.init();\r\n      operation.remove();\r\n    } else {\r\n      modeling.removeElements([subProcessElement]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set types of an activity to specify which methods can be used\r\n   *\r\n   * @param modeler the modeler\r\n   * @param activityId the id of the activity\r\n   * @param inherit whether the types should be inherited\r\n   * @param neededTypes the needed types of the method\r\n   * @param forbiddenTypes the forbidden types of the method\r\n   */\r\n  setTypesOfActivity(\r\n    modeler: BpmnModeler,\r\n    activityId: string,\r\n    inherit: boolean,\r\n    neededTypes: { list: string; element: Type }[],\r\n    forbiddenTypes: { list: string; element: Type }[]\r\n  ) {\r\n    const moddle = modeler.get('moddle');\r\n    const modeling = modeler.get('modeling');\r\n    const elementRegistry = modeler.get('elementRegistry');\r\n    modeling.updateProperties(elementRegistry.get(activityId), {\r\n      inherit,\r\n      neededType: neededTypes.map((element) => mapTypes(moddle, element)),\r\n      forbiddenType: forbiddenTypes.map((element) => mapTypes(moddle, element)),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get types of an activity that specify which methods can be used. Also queries parents if types are inherited.\r\n   *\r\n   * @param modeler the modeler\r\n   * @param activityId the id of the activity\r\n   */\r\n  getTypesOfActivity(\r\n    modeler: BpmnModeler,\r\n    activityId: string\r\n  ): {\r\n    neededType: { list: string; element: { _id: string; name: string } }[];\r\n    forbiddenType: { list: string; element: { _id: string; name: string } }[];\r\n  } {\r\n    const elementRegistry = modeler.get('elementRegistry');\r\n    const activity = elementRegistry.get(activityId);\r\n    let businessObject = activity.businessObject;\r\n    while (\r\n      businessObject &&\r\n      (businessObject.inherit || !businessObject.neededType)\r\n    ) {\r\n      businessObject = businessObject.$parent;\r\n    }\r\n    return {\r\n      neededType: businessObject ? businessObject.get('neededType') : [],\r\n      forbiddenType: businessObject ? businessObject.get('forbiddenType') : [],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Selects a development method for a process pattern task and adds the development method to the task\r\n   *\r\n   * @param modeler the modeler\r\n   * @param taskElement the task element\r\n   * @param developmentMethod the development method\r\n   */\r\n  selectDevelopmentMethodForProcessTask(\r\n    modeler: BpmnModeler,\r\n    taskElement,\r\n    developmentMethod: DevelopmentMethod\r\n  ) {\r\n    const moddle = modeler.get('moddle');\r\n    const modeling = modeler.get('modeling');\r\n    modeling.updateProperties(taskElement, {\r\n      method: moddle.create('bmdl:Method', {\r\n        name: developmentMethod.name,\r\n        id: developmentMethod._id,\r\n      }),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes a development method from a task in the process\r\n   *\r\n   * @param modeler the modeler that currently displays the process\r\n   * @param taskElement the task element from which the method should be removed\r\n   */\r\n  removeDevelopmentMethodFromProcessTask(modeler: BpmnModeler, taskElement) {\r\n    const modeling = modeler.get('modeling');\r\n    modeling.updateProperties(taskElement, { method: null });\r\n  }\r\n\r\n  insertProcessPatternIntoCallActivity(\r\n    modeler: BpmnModeler,\r\n    callActivityElement,\r\n    processPattern: ProcessPattern\r\n  ) {\r\n    const processPatternModeler = this.getBmProcessModeler();\r\n    return processPatternModeler\r\n      .importXML(processPattern.pattern)\r\n      .then(() => {\r\n        const operation = new BpmnInsertOperation(\r\n          modeler,\r\n          processPatternModeler,\r\n          callActivityElement\r\n        );\r\n        operation.init();\r\n        operation.insert(processPattern.name, processPattern._id);\r\n      })\r\n      .finally(() => processPatternModeler.destroy());\r\n  }\r\n\r\n  /**\r\n   * Get all activities that have a method defined\r\n   *\r\n   * @param modeler the modeler of the current model\r\n   * @returns elements that have a method defined\r\n   */\r\n  getActivitiesWithMethod(modeler: BpmnModeler): any[] {\r\n    return modeler\r\n      .get('elementRegistry')\r\n      .filter((element) => element.businessObject.get('method'));\r\n  }\r\n\r\n  /**\r\n   * Get all method ids used in the model\r\n   *\r\n   * @param modeler the modeler of the current model\r\n   * @returns used method ids\r\n   */\r\n  getUsedMethodIds(modeler: BpmnModeler): string[] {\r\n    return this.getActivitiesWithMethod(modeler).map((element) =>\r\n      element.businessObject.get('method').get('id')\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all pattern elements of the current model\r\n   *\r\n   * @param modeler the modeler of the current model\r\n   * @returns elements that are used as a pattern\r\n   */\r\n  getPatterns(modeler: BpmnModeler) {\r\n    return modeler\r\n      .get('elementRegistry')\r\n      .filter((element) => element.businessObject.get('processPatternId'));\r\n  }\r\n\r\n  /**\r\n   * Get all pattern ids used in the model\r\n   *\r\n   * @param modeler the modeler of the current model\r\n   * @returns used method ids\r\n   */\r\n  getUsedPatternIds(modeler: BpmnModeler): string[] {\r\n    return this.getPatterns(modeler).map((element) =>\r\n      element.businessObject.get('processPatternId')\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check whether there are artifacts that are not created earlier\r\n   *\r\n   * @param modeler the modeler of the current model\r\n   * @param decisions the decisions of the bm process\r\n   */\r\n  checkArtifacts(\r\n    modeler: BpmnModeler,\r\n    decisions: { [elementId: string]: Decision }\r\n  ): { [elementId: string]: Artifact[] } {\r\n    const operation = new BpmnCheckArtifacts(modeler, decisions);\r\n    return operation.checkArtifacts();\r\n  }\r\n}\r\n\r\nclass BpmnOperation {\r\n  readonly currentElementRegistry;\r\n  readonly currentElementFactory;\r\n  readonly currentBpmnFactory;\r\n  readonly currentModdle;\r\n  readonly currentModeling;\r\n\r\n  constructor(current: BpmnModeler) {\r\n    this.currentElementRegistry = current.get('elementRegistry');\r\n    this.currentElementFactory = current.get('elementFactory');\r\n    this.currentBpmnFactory = current.get('bpmnFactory');\r\n    this.currentModdle = current.get('moddle');\r\n    this.currentModeling = current.get('modeling');\r\n  }\r\n\r\n  init() {}\r\n\r\n  /**\r\n   * Reconnect an already existing connection\r\n   *\r\n   * @param source the new source\r\n   * @param target the new target\r\n   * @param oldConnection the old connection\r\n   */\r\n  reconnect(source, target, oldConnection) {\r\n    const flowBusinessObject = this.currentBpmnFactory.create(\r\n      oldConnection.businessObject.$type,\r\n      {\r\n        name: oldConnection.businessObject.name,\r\n      }\r\n    );\r\n    let waypoints: any[] = oldConnection.waypoints.slice();\r\n    if (oldConnection.source !== source) {\r\n      // Find index of last point that is in the new source\r\n      let index: number = null;\r\n      for (let i = waypoints.length - 1; i >= 0; --i) {\r\n        if (pointInRect(waypoints[i], source, 20)) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n      if (index !== null) {\r\n        waypoints = waypoints.slice(index);\r\n      } else if (waypoints.length > 0) {\r\n        waypoints.unshift({\r\n          x: source.x + source.width / 2,\r\n          y: source.y + source.height / 2,\r\n        });\r\n      }\r\n    }\r\n    if (oldConnection.target !== target) {\r\n      // Find index of first point that is in the new target\r\n      let index: number = null;\r\n      for (let i = 0; i < waypoints.length; ++i) {\r\n        if (pointInRect(waypoints[i], target, 20)) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n      if (index !== null) {\r\n        waypoints = waypoints.slice(0, index + 1);\r\n      } else if (waypoints.length > 0) {\r\n        waypoints.push({\r\n          x: target.x + source.width / 2,\r\n          y: target.y + target.height / 2,\r\n        });\r\n      }\r\n    }\r\n    const flowElement = this.currentElementFactory.createConnection({\r\n      type: oldConnection.type,\r\n      businessObject: flowBusinessObject,\r\n      waypoints: waypoints.length > 1 ? waypoints : undefined,\r\n    });\r\n    this.currentModeling.createConnection(\r\n      source,\r\n      target,\r\n      flowElement,\r\n      oldConnection.parent\r\n    );\r\n    if (flowElement.label) {\r\n      this.currentModeling.updateLabel(\r\n        flowElement,\r\n        oldConnection.businessObject.name,\r\n        {\r\n          x: oldConnection.label.x,\r\n          y: oldConnection.label.y,\r\n          height: oldConnection.label.height,\r\n          width: oldConnection.label.width,\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy BPMN relevant data, like types\r\n   *\r\n   * @param oldElement the old element\r\n   * @param newElement the new element\r\n   */\r\n  copyBpmnData(oldElement, newElement) {\r\n    this.currentModeling.updateProperties(newElement, {\r\n      inherit: oldElement.businessObject.get('inherit'),\r\n      neededType: oldElement.businessObject\r\n        .get('neededType')\r\n        .map((element) => mapTypes(this.currentModdle, element)),\r\n      forbiddenType: oldElement.businessObject\r\n        .get('forbiddenType')\r\n        .map((element) => mapTypes(this.currentModdle, element)),\r\n    });\r\n  }\r\n}\r\n\r\nclass BpmnAppendOperation extends BpmnOperation {\r\n  readonly appendElementRegistry;\r\n\r\n  readonly suffix = '_' + String(Date.now());\r\n\r\n  oldBoundaries: { x: number; y: number; width: number; height: number } = null;\r\n  processPoint: { x: number; y: number } = null;\r\n  processSize: { width: number; height: number };\r\n\r\n  constructor(current: BpmnModeler, append: BpmnModeler) {\r\n    super(current);\r\n    this.appendElementRegistry = append.get('elementRegistry');\r\n  }\r\n\r\n  init() {\r\n    super.init();\r\n    this.calculateOldBoundaries();\r\n    this.calculateProcessSize();\r\n  }\r\n\r\n  private calculateOldBoundaries() {\r\n    const bbox = getBBox(\r\n      this.appendElementRegistry.filter(\r\n        (element) => !is(element, 'bpmn:Process')\r\n      )\r\n    );\r\n    this.oldBoundaries = {\r\n      x: bbox.x,\r\n      y: bbox.y,\r\n      width: bbox.width,\r\n      height: bbox.height,\r\n    };\r\n  }\r\n\r\n  private calculateProcessSize() {\r\n    this.processSize = {\r\n      height: this.oldBoundaries.height + 50,\r\n      width: this.oldBoundaries.width + 40,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Translate a point into the new process\r\n   *\r\n   * @param point the point\r\n   * @returns the translated point\r\n   */\r\n  translatePoint(point: { x: number; y: number }): { x: number; y: number } {\r\n    return {\r\n      x: point.x - this.oldBoundaries.x + this.processPoint.x + 20,\r\n      y: point.y - this.oldBoundaries.y + this.processPoint.y + 30,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create a subprocess\r\n   *\r\n   * @param name the name of the subprocess\r\n   * @param processPatternId the id of the process pattern\r\n   * @param parent the parent of the subprocess\r\n   * @returns the created subprocess\r\n   */\r\n  createSubProcess(name: string, processPatternId: string, parent): any {\r\n    const bmBusinessObject = this.currentBpmnFactory.create('bpmn:SubProcess', {\r\n      name,\r\n    });\r\n    const bmElement = this.currentElementFactory.createShape({\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: true,\r\n      businessObject: bmBusinessObject,\r\n    });\r\n    const subprocess = this.currentModeling.createShape(\r\n      bmElement,\r\n      { ...this.processPoint, ...this.processSize },\r\n      parent\r\n    );\r\n    this.currentModeling.updateProperties(subprocess, {\r\n      processPatternId,\r\n    });\r\n    return subprocess;\r\n  }\r\n\r\n  /**\r\n   * Append all FlowNodes and TextAnnotations to the subprocess\r\n   *\r\n   * @param subProcess the subprocess\r\n   */\r\n  appendNodes(subProcess) {\r\n    this.appendElementRegistry\r\n      .filter(\r\n        (element) =>\r\n          (is(element, 'bpmn:FlowNode') ||\r\n            is(element, 'bpmn:TextAnnotation')) &&\r\n          is(element, element.type)\r\n      )\r\n      .forEach((element) => {\r\n        const bmBusinessObject = this.currentBpmnFactory.create(\r\n          element.businessObject.$type,\r\n          {\r\n            ...element.businessObject,\r\n            id: element.businessObject.id + this.suffix,\r\n            attachedToRef: element.businessObject.attachedToRef\r\n              ? this.currentElementRegistry.get(\r\n                  element.businessObject.attachedToRef.id + this.suffix\r\n                )\r\n              : undefined,\r\n          }\r\n        );\r\n        const bmElement = this.currentElementFactory.createShape({\r\n          type: element.type,\r\n          businessObject: bmBusinessObject,\r\n        });\r\n        this.currentModeling.createShape(\r\n          bmElement,\r\n          {\r\n            ...this.translatePoint(element),\r\n            height: element.height,\r\n            width: element.width,\r\n          },\r\n          subProcess\r\n        );\r\n        if (bmElement.label) {\r\n          this.currentModeling.updateLabel(bmElement, bmBusinessObject.name, {\r\n            ...this.translatePoint(element.label),\r\n            height: element.label.height,\r\n            width: element.label.width,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Create all connections\r\n   *\r\n   * @param subProcess the subprocess in which the connections should be created\r\n   */\r\n  connectNodes(subProcess) {\r\n    this.appendElementRegistry\r\n      .filter(\r\n        (element) =>\r\n          (is(element, 'bpmn:SequenceFlow') ||\r\n            is(element, 'bpmn:Association')) &&\r\n          is(element, element.type)\r\n      )\r\n      .forEach((element) => {\r\n        const connection = element.businessObject;\r\n        const source = this.currentElementRegistry.get(\r\n          connection.sourceRef.id + this.suffix\r\n        );\r\n        const target = this.currentElementRegistry.get(\r\n          connection.targetRef.id + this.suffix\r\n        );\r\n        const waypoints = element.waypoints.map((waypoint) =>\r\n          this.translatePoint(waypoint)\r\n        );\r\n        const flowBusinessObject = this.currentBpmnFactory.create(\r\n          connection.$type,\r\n          {\r\n            id: connection.id + this.suffix,\r\n            name: connection.name,\r\n          }\r\n        );\r\n        const flowElement = this.currentElementFactory.createConnection({\r\n          type: element.type,\r\n          businessObject: flowBusinessObject,\r\n          waypoints,\r\n        });\r\n        this.currentModeling.createConnection(\r\n          source,\r\n          target,\r\n          flowElement,\r\n          subProcess\r\n        );\r\n        if (flowElement.label) {\r\n          this.currentModeling.updateLabel(flowElement, connection.name, {\r\n            ...this.translatePoint(element.label),\r\n            height: element.label.height,\r\n            width: element.label.width,\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nclass BpmnInsertOperation extends BpmnAppendOperation {\r\n  private readonly insertElement;\r\n\r\n  constructor(current: BpmnModeler, append: BpmnModeler, insertElement) {\r\n    super(current, append);\r\n    this.insertElement = insertElement;\r\n  }\r\n\r\n  init() {\r\n    super.init();\r\n    this.calculateProcessPoint();\r\n  }\r\n\r\n  private calculateProcessPoint() {\r\n    const mid = center(this.insertElement);\r\n    this.processPoint = {\r\n      x: mid.x - this.processSize.width / 2,\r\n      y: mid.y - this.processSize.height / 2,\r\n    };\r\n  }\r\n\r\n  insert(processName: string, processPatternId: string) {\r\n    const subprocess = this.insertSubProcess(processName, processPatternId);\r\n    this.appendNodes(subprocess);\r\n    this.connectNodes(subprocess);\r\n  }\r\n\r\n  private insertSubProcess(processName: string, processPatternId: string) {\r\n    this.createSpace();\r\n    const subprocess = this.createSubProcess(\r\n      processName,\r\n      processPatternId,\r\n      this.insertElement.parent\r\n    );\r\n    this.insertElement.incoming.forEach((flow) =>\r\n      this.reconnect(flow.source, subprocess, flow)\r\n    );\r\n    this.insertElement.outgoing.forEach((flow) =>\r\n      this.reconnect(subprocess, flow.target, flow)\r\n    );\r\n    this.currentModeling.removeElements([\r\n      ...this.insertElement.incoming,\r\n      ...this.insertElement.outgoing,\r\n      this.insertElement,\r\n    ]);\r\n    return subprocess;\r\n  }\r\n\r\n  createSubProcess(name: string, processPatternId: string, parent): any {\r\n    const subprocess = super.createSubProcess(name, processPatternId, parent);\r\n    this.copyBpmnData(this.insertElement, subprocess);\r\n    this.currentModeling.updateProperties(subprocess, {\r\n      taskName: this.insertElement.businessObject.name,\r\n    });\r\n    return subprocess;\r\n  }\r\n\r\n  private createSpace() {\r\n    const delta = {\r\n      x: (this.processSize.width - this.insertElement.width) / 2,\r\n      y: (this.processSize.height - this.insertElement.height) / 2,\r\n    };\r\n    const innerSubProcesses = this.getParents();\r\n    const leftRightCheck =\r\n      this.checkLeftSpace(innerSubProcesses) ||\r\n      this.checkRightSpace(innerSubProcesses);\r\n    const topBottomCheck =\r\n      this.checkTopSpace(innerSubProcesses) ||\r\n      this.checkBottomSpace(innerSubProcesses);\r\n    const completeSpaceCheck = this.checkCompleteSpace(innerSubProcesses);\r\n    if (leftRightCheck || (completeSpaceCheck && !topBottomCheck)) {\r\n      this.createLeftSpace(innerSubProcesses, delta.x);\r\n      this.createRightSpace(innerSubProcesses, delta.x);\r\n    }\r\n    if (topBottomCheck) {\r\n      this.createTopSpace(innerSubProcesses, delta.y);\r\n      this.createBottomSpace(innerSubProcesses, delta.y);\r\n    }\r\n  }\r\n\r\n  private checkLeftSpace(innerSubProcesses) {\r\n    const condition = (element) =>\r\n      element.x + element.width < this.processPoint.x ||\r\n      element.x > this.insertElement.x ||\r\n      element.y + element.height < this.insertElement.y ||\r\n      element.y > this.insertElement.y + this.insertElement.height;\r\n    return (\r\n      this.checkSpace(condition, innerSubProcesses) ||\r\n      this.insertElement.parent.x > this.processPoint.x\r\n    );\r\n  }\r\n\r\n  private checkRightSpace(innerSubProcesses) {\r\n    const condition = (element) =>\r\n      element.x + element.width <\r\n        this.insertElement.x + this.insertElement.width ||\r\n      element.x > this.processPoint.x + this.processSize.width ||\r\n      element.y + element.height < this.insertElement.y ||\r\n      element.y > this.insertElement.y + this.insertElement.height;\r\n    return (\r\n      this.checkSpace(condition, innerSubProcesses) ||\r\n      this.insertElement.parent.x + this.insertElement.parent.width <\r\n        this.processPoint.x + this.processSize.width\r\n    );\r\n  }\r\n\r\n  private checkTopSpace(innerSubProcesses) {\r\n    const condition = (element) =>\r\n      element.x + element.width < this.insertElement.x ||\r\n      element.x > this.insertElement.x + this.insertElement.width ||\r\n      element.y + element.height < this.processPoint.y ||\r\n      element.y > this.insertElement.y;\r\n    return (\r\n      this.checkSpace(condition, innerSubProcesses) ||\r\n      this.insertElement.parent.y > this.processPoint.y\r\n    );\r\n  }\r\n\r\n  private checkBottomSpace(innerSubProcesses) {\r\n    const condition = (element) =>\r\n      element.x + element.width < this.insertElement.x ||\r\n      element.x > this.insertElement.x + this.insertElement.width ||\r\n      element.y + element.height <\r\n        this.insertElement.y + this.insertElement.height ||\r\n      element.y > this.processPoint.y + this.processSize.height;\r\n    return (\r\n      this.checkSpace(condition, innerSubProcesses) ||\r\n      this.insertElement.parent.y + this.insertElement.parent.height <\r\n        this.processPoint.y + this.processSize.height\r\n    );\r\n  }\r\n\r\n  private checkCompleteSpace(innerSubProcesses) {\r\n    const condition = (element) =>\r\n      element.x + element.width < this.processPoint.x ||\r\n      element.x > this.processPoint.x + this.processSize.width ||\r\n      element.y + element.height < this.processPoint.y ||\r\n      element.y > this.processPoint.y + this.processSize.height;\r\n    return this.checkSpace(condition, innerSubProcesses);\r\n  }\r\n\r\n  private checkSpace(condition: (element) => boolean, innerSubProcesses) {\r\n    const elements = this.currentElementRegistry.filter(\r\n      (element) =>\r\n        element.id !== this.insertElement.id &&\r\n        !is(element, 'bpmn:Process') &&\r\n        !innerSubProcesses.includes(element)\r\n    );\r\n    const waypointsToLines = (waypoints) => {\r\n      const lines = [];\r\n      for (let i = 0; i < waypoints.length - 1; ++i) {\r\n        lines.push({\r\n          x: Math.min(waypoints[i].x, waypoints[i + 1].x),\r\n          y: Math.min(waypoints[i].y, waypoints[i + 1].y),\r\n          width: Math.abs(waypoints[i + 1].x - waypoints[i].x),\r\n          height: Math.abs(waypoints[i + 1].y - waypoints[i].y),\r\n        });\r\n      }\r\n      return lines;\r\n    };\r\n    return (\r\n      elements.some((element) => !element.waypoints && !condition(element)) ||\r\n      elements.some(\r\n        (element) =>\r\n          element.waypoints &&\r\n          element.source !== this.insertElement &&\r\n          element.target !== this.insertElement &&\r\n          waypointsToLines(element.waypoints).some((line) => !condition(line))\r\n      )\r\n    );\r\n  }\r\n\r\n  private createLeftSpace(innerSubProcesses, xDelta: number) {\r\n    this.createSpaceDirection(\r\n      innerSubProcesses,\r\n      this.insertElement.x,\r\n      'e',\r\n      xDelta\r\n    );\r\n    this.processPoint = {\r\n      x: this.processPoint.x + xDelta,\r\n      y: this.processPoint.y,\r\n    };\r\n  }\r\n\r\n  private createRightSpace(innerSubProcesses, xDelta: number) {\r\n    this.createSpaceDirection(\r\n      innerSubProcesses,\r\n      this.insertElement.x + this.insertElement.width,\r\n      'e',\r\n      xDelta\r\n    );\r\n  }\r\n\r\n  private createTopSpace(innerSubProcesses, yDelta: number) {\r\n    this.createSpaceDirection(\r\n      innerSubProcesses,\r\n      this.insertElement.y,\r\n      's',\r\n      yDelta\r\n    );\r\n    this.processPoint = {\r\n      x: this.processPoint.x,\r\n      y: this.processPoint.y + yDelta,\r\n    };\r\n  }\r\n\r\n  private createBottomSpace(innerSubProcesses, yDelta: number) {\r\n    this.createSpaceDirection(\r\n      innerSubProcesses,\r\n      this.insertElement.y + this.insertElement.height,\r\n      's',\r\n      yDelta\r\n    );\r\n  }\r\n\r\n  private createSpaceDirection(\r\n    innerSubProcesses,\r\n    from: number,\r\n    direction: 'e' | 's',\r\n    delta: number\r\n  ) {\r\n    const elements = this.currentElementRegistry.filter(\r\n      (element) =>\r\n        (direction === 'e' ? element.x : element.y) >= from &&\r\n        (innerSubProcesses.includes(element.parent) ||\r\n          is(element.parent, 'bpmn:Process')) &&\r\n        !innerSubProcesses.includes(element)\r\n    );\r\n    const toMove = selfAndChildren(elements, true, -1);\r\n    this.currentModeling.createSpace(\r\n      toMove,\r\n      innerSubProcesses,\r\n      { x: direction === 'e' ? delta : 0, y: direction === 's' ? delta : 0 },\r\n      direction,\r\n      from\r\n    );\r\n  }\r\n\r\n  private getParents(): any[] {\r\n    const parents = [];\r\n    for (\r\n      let parent = this.insertElement.parent;\r\n      !is(parent, 'bpmn:Process');\r\n      parent = parent.parent\r\n    ) {\r\n      parents.push(parent);\r\n    }\r\n    return parents;\r\n  }\r\n}\r\n\r\nclass BpmnRemoveOperation extends BpmnOperation {\r\n  private readonly subprocess;\r\n\r\n  constructor(current: BpmnModeler, subprocess) {\r\n    super(current);\r\n    this.subprocess = subprocess;\r\n  }\r\n\r\n  remove() {\r\n    const activity = this.createActivity();\r\n    this.reconnectActivity(activity);\r\n    this.removeSubprocess();\r\n  }\r\n\r\n  private createActivity() {\r\n    const bmBusinessObject = this.currentBpmnFactory.create(\r\n      'bpmn:CallActivity',\r\n      { name: this.subprocess.businessObject.get('taskName') }\r\n    );\r\n    const bmElement = this.currentElementFactory.createShape({\r\n      type: 'bpmn:CallActivity',\r\n      businessObject: bmBusinessObject,\r\n    });\r\n    const activity = this.currentModeling.createShape(\r\n      bmElement,\r\n      center(this.subprocess),\r\n      this.subprocess.parent\r\n    );\r\n    this.copyBpmnData(this.subprocess, activity);\r\n    return activity;\r\n  }\r\n\r\n  private reconnectActivity(activity) {\r\n    this.subprocess.incoming.forEach((flow) =>\r\n      this.reconnect(flow.source, activity, flow)\r\n    );\r\n    this.subprocess.outgoing.forEach((flow) =>\r\n      this.reconnect(activity, flow.target, flow)\r\n    );\r\n  }\r\n\r\n  private removeSubprocess() {\r\n    this.currentModeling.removeElements([\r\n      ...this.subprocess.incoming,\r\n      ...this.subprocess.outgoing,\r\n      this.subprocess,\r\n    ]);\r\n  }\r\n}\r\n\r\nclass BpmnAttachOperation extends BpmnAppendOperation {\r\n  private readonly attachmentElement;\r\n\r\n  constructor(current: BpmnModeler, append: BpmnModeler, attachmentElement) {\r\n    super(current, append);\r\n    this.attachmentElement = attachmentElement;\r\n  }\r\n\r\n  init() {\r\n    super.init();\r\n    this.calculateProcessPoint();\r\n  }\r\n\r\n  private calculateProcessPoint() {\r\n    const point = center(this.attachmentElement);\r\n    this.processPoint = {\r\n      x: this.attachmentElement.x + this.attachmentElement.width + 50,\r\n      y: point.y - this.processSize.height / 2,\r\n    };\r\n  }\r\n\r\n  attach(processName: string, processPatternId: string) {\r\n    const subprocess = this.appendSubProcess(processName, processPatternId);\r\n    this.appendNodes(subprocess);\r\n    this.connectNodes(subprocess);\r\n  }\r\n\r\n  private appendSubProcess(processName: string, processPatternId: string) {\r\n    const subprocess = this.createSubProcess(\r\n      processName,\r\n      processPatternId,\r\n      this.attachmentElement.parent\r\n    );\r\n    this.currentModeling.createConnection(\r\n      this.attachmentElement,\r\n      subprocess,\r\n      { type: 'bpmn:SequenceFlow' },\r\n      this.attachmentElement.parent\r\n    );\r\n    return subprocess;\r\n  }\r\n}\r\n\r\nclass BpmnCheckArtifacts {\r\n  private readonly elementRegistry;\r\n  private readonly decisions: { [elementId: string]: Decision };\r\n\r\n  private visitedNodes = new Set();\r\n  private artifacts: { [elementId: string]: Artifact[] } = {};\r\n  private currentNodes = [];\r\n\r\n  constructor(\r\n    modeler: BpmnModeler,\r\n    decisions: { [elementId: string]: Decision }\r\n  ) {\r\n    this.elementRegistry = modeler.get('elementRegistry');\r\n    this.decisions = decisions;\r\n  }\r\n\r\n  checkArtifacts(): { [elementId: string]: Artifact[] | null } {\r\n    const missingMap = {};\r\n    const startingElement = this.elementRegistry.find(\r\n      (element) =>\r\n        is(element, 'bpmn:StartEvent') && is(element.parent, 'bpmn:Process')\r\n    );\r\n    this.currentNodes.push(startingElement);\r\n    while (this.currentNodes.length > 0) {\r\n      const currentNode = this.currentNodes[0];\r\n      this.currentNodes.splice(0, 1);\r\n      let incomingArtifacts;\r\n      if (is(currentNode, 'bpmn:ParallelGateway')) {\r\n        incomingArtifacts = this.getIncomingArtifactsUnion(currentNode);\r\n        if (incomingArtifacts === null) {\r\n          continue;\r\n        }\r\n      } else if (is(currentNode, 'bpmn:ExclusiveGateway')) {\r\n        incomingArtifacts = this.getIncomingArtifactsIntersect(currentNode);\r\n      } else {\r\n        incomingArtifacts = this.getIncomingArtifacts(currentNode);\r\n      }\r\n      this.visitedNodes.add(currentNode);\r\n      const incomingArtifactIds = incomingArtifacts.map(\r\n        (artifact) => artifact._id\r\n      );\r\n      const neededArtifacts = this.getNeededArtifacts(currentNode);\r\n      const missing = neededArtifacts.filter(\r\n        (artifact) => !incomingArtifactIds.includes(artifact._id)\r\n      );\r\n      if (missing.length > 0 || currentNode.id in missingMap) {\r\n        missingMap[currentNode.id] = missing;\r\n      }\r\n      const previousArtifactIds =\r\n        currentNode.id in this.artifacts\r\n          ? this.artifacts[currentNode.id].map((artifact) => artifact._id)\r\n          : null;\r\n      this.artifacts[currentNode.id] = [\r\n        ...incomingArtifacts,\r\n        ...this.getCreatedArtifacts(currentNode),\r\n      ];\r\n      const currentArtifactIds = this.artifacts[currentNode.id].map(\r\n        (artifact) => artifact._id\r\n      );\r\n      if (previousArtifactIds) {\r\n        const unchanged =\r\n          currentArtifactIds.every((id) => previousArtifactIds.includes(id)) &&\r\n          previousArtifactIds.every((id) => currentArtifactIds.includes(id));\r\n        if (unchanged) {\r\n          continue;\r\n        }\r\n      }\r\n      this.currentNodes.push(...this.getTargets(currentNode));\r\n    }\r\n    this.elementRegistry\r\n      .getAll()\r\n      .filter(\r\n        (element) =>\r\n          is(element, 'bpmn:FlowNode') &&\r\n          !this.visitedNodes.has(element) &&\r\n          !is(element, 'bpmn:SubProcess')\r\n      )\r\n      .forEach((element) => (missingMap[element.id] = null));\r\n    return missingMap;\r\n  }\r\n\r\n  getNeededArtifacts(element): Artifact[] {\r\n    return this.getDecisionArtifacts(element, true);\r\n  }\r\n\r\n  getCreatedArtifacts(element): Artifact[] {\r\n    return this.getDecisionArtifacts(element, false);\r\n  }\r\n\r\n  getDecisionArtifacts(element, input = false): Artifact[] {\r\n    if (element.id in this.decisions) {\r\n      const artifacts: Artifact[] = [];\r\n      const decision = this.decisions[element.id];\r\n      const decisionArtifacts = input\r\n        ? decision.inputArtifacts\r\n        : decision.outputArtifacts;\r\n      if (\r\n        decisionArtifacts.selectedGroup === null ||\r\n        decisionArtifacts.selectedGroup === undefined\r\n      ) {\r\n        return [];\r\n      }\r\n      const method = decision.method;\r\n      const group = input\r\n        ? method.inputArtifacts[decisionArtifacts.selectedGroup]\r\n        : method.outputArtifacts[decisionArtifacts.selectedGroup];\r\n      group.forEach((selection, index) => {\r\n        if (selection.element) {\r\n          artifacts.push(selection.element);\r\n        } else {\r\n          artifacts.push(...decisionArtifacts.elements[index].filter((e) => e));\r\n        }\r\n      });\r\n      return artifacts;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getIncomingArtifactsUnion(element): Artifact[] {\r\n    const artifacts: Artifact[] = [];\r\n    const sources = this.getSources(element);\r\n    if (sources.some((source) => !(source.id in this.artifacts))) {\r\n      return null;\r\n    }\r\n    sources.forEach((source) => artifacts.push(...this.getArtifacts(source)));\r\n    return artifacts;\r\n  }\r\n\r\n  getIncomingArtifactsIntersect(element): Artifact[] {\r\n    const artifacts: Artifact[][] = [];\r\n    const sources = this.getSources(element);\r\n    if (sources.length === 0) {\r\n      return [];\r\n    }\r\n    sources\r\n      .filter((source) => source.id in this.artifacts)\r\n      .forEach((source) => artifacts.push(this.getArtifacts(source)));\r\n    const others: string[][] = artifacts.map((group) =>\r\n      group.map((artifact) => artifact._id)\r\n    );\r\n    others.slice(0, 1);\r\n    let resultingArtifacts: Artifact[] = artifacts[0];\r\n    others.forEach(\r\n      (group) =>\r\n        (resultingArtifacts = resultingArtifacts.filter((artifact) =>\r\n          group.includes(artifact._id)\r\n        ))\r\n    );\r\n    return resultingArtifacts;\r\n  }\r\n\r\n  getIncomingArtifacts(element): Artifact[] {\r\n    const artifacts: Artifact[] = [];\r\n    const sources = this.getSources(element);\r\n    sources.forEach((source) => artifacts.push(...this.getArtifacts(source)));\r\n    return artifacts;\r\n  }\r\n\r\n  getArtifacts(element): Artifact[] {\r\n    if (element.id in this.artifacts) {\r\n      return this.artifacts[element.id];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getSources(element): any[] {\r\n    let node;\r\n    let incomingFlows;\r\n    for (\r\n      node = element, incomingFlows = node.incoming;\r\n      incomingFlows.length === 0;\r\n      node = node.parent, incomingFlows = node.incoming\r\n    ) {\r\n      if (is(node.parent, 'bpmn:Process')) {\r\n        return [];\r\n      }\r\n    }\r\n    return incomingFlows\r\n      .map((flow) => flow.source)\r\n      .map((source) => {\r\n        if (is(source, 'bpmn:SubProcess')) {\r\n          return source.children.find((e) => is(e, 'bpmn:EndEvent'));\r\n        } else {\r\n          return source;\r\n        }\r\n      });\r\n  }\r\n\r\n  getTargets(element): any[] {\r\n    let node;\r\n    let outgoingFlows;\r\n    for (\r\n      node = element, outgoingFlows = node.outgoing;\r\n      outgoingFlows.length === 0;\r\n      node = node.parent, outgoingFlows = node.outgoing\r\n    ) {\r\n      if (is(node.parent, 'bpmn:Process')) {\r\n        return [];\r\n      }\r\n    }\r\n    return outgoingFlows\r\n      .map((flow) => flow.target)\r\n      .map((target) => {\r\n        if (is(target, 'bpmn:SubProcess')) {\r\n          return target.children.find((e) => is(e, 'bpmn:StartEvent'));\r\n        } else {\r\n          return target;\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nfunction mapTypes(moddle, element: { list: string; element: Type }) {\r\n  return moddle.create('bmdl:Type', {\r\n    list: element.list,\r\n    element: element.element\r\n      ? moddle.create('bmdl:MethodElement', {\r\n          _id: element.element._id,\r\n          name: element.element.name,\r\n        })\r\n      : null,\r\n  });\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { RunningArtifact } from '../../development-process-registry/running-process/running-artifact';\r\nimport { ConcreteArtifactService } from '../../development-process-registry/running-process/concrete-artifact.service';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\n\r\n@Injectable()\r\nexport class ConcreteArtifactLoaderService extends ElementLoaderService {\r\n  artifact: RunningArtifact = null;\r\n\r\n  constructor(\r\n    private concreteArtifactService: ConcreteArtifactService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const artifactId = paramMap.get('id');\r\n    this.changesFeed = this.concreteArtifactService\r\n      .getChangesFeed(artifactId)\r\n      .subscribe(() => this.loadArtifact(artifactId));\r\n    void this.loadArtifact(artifactId);\r\n  }\r\n\r\n  private async loadArtifact(artifactId: string): Promise<void> {\r\n    this.artifact = await this.concreteArtifactService.get(artifactId);\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { DevelopmentMethod } from '../../development-process-registry/development-method/development-method';\r\nimport { DevelopmentMethodService } from '../../development-process-registry/development-method/development-method.service';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\n\r\n@Injectable()\r\nexport class DevelopmentMethodLoaderService extends ElementLoaderService {\r\n  developmentMethod: DevelopmentMethod = null;\r\n\r\n  constructor(\r\n    private developmentMethodService: DevelopmentMethodService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const developmentMethodId = paramMap.get('id');\r\n    this.changesFeed = this.developmentMethodService\r\n      .getChangesFeed(developmentMethodId)\r\n      .subscribe(() => this.loadDevelopmentMethod(developmentMethodId));\r\n    void this.loadDevelopmentMethod(developmentMethodId);\r\n  }\r\n\r\n  private async loadDevelopmentMethod(\r\n    developmentMethodId: string\r\n  ): Promise<void> {\r\n    this.developmentMethod = await this.developmentMethodService.get(\r\n      developmentMethodId\r\n    );\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanDeactivate,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { DiagramComponentInterface } from './diagram-component-interface';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmLeaveModalComponent } from '../confirm-leave-modal/confirm-leave-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DiagramChangeGuard\r\n  implements CanDeactivate<DiagramComponentInterface>\r\n{\r\n  constructor(private modalService: NgbModal) {}\r\n\r\n  async canDeactivate(\r\n    component: DiagramComponentInterface,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot\r\n  ): Promise<boolean> {\r\n    const changed = await component.diagramChanged();\r\n    if (changed) {\r\n      const modal = this.modalService.open(ConfirmLeaveModalComponent, {\r\n        size: 'lg',\r\n      });\r\n      try {\r\n        const result = await modal.result;\r\n        if (result) {\r\n          await component.saveDiagram();\r\n        }\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Domain } from '../../development-process-registry/knowledge/domain';\r\nimport { DomainService } from '../../development-process-registry/knowledge/domain.service';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\n\r\n@Injectable()\r\nexport class DomainLoaderService extends ElementLoaderService {\r\n  domain: Domain = null;\r\n\r\n  constructor(private domainService: DomainService, route: ActivatedRoute) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const domainId = paramMap.get('id');\r\n    this.changesFeed = this.domainService\r\n      .getChangesFeed(domainId)\r\n      .subscribe(() => this.loadDomain(domainId));\r\n    void this.loadDomain(domainId);\r\n  }\r\n\r\n  private async loadDomain(domainId: string): Promise<void> {\r\n    this.domain = await this.domainService.get(domainId);\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Module } from '../../development-process-registry/module-api/module';\r\nimport { ExecutionStep } from '../../development-process-registry/development-method/execution-step';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ModuleService } from '../../development-process-registry/module-api/module.service';\r\nimport { ArtifactMapping } from '../../development-process-registry/development-method/artifact-mapping';\r\nimport {\r\n  ArtifactMappingFormService,\r\n  MappingsFormValue,\r\n} from './artifact-mapping-form.service';\r\nimport { ModuleMethod } from '../../development-process-registry/module-api/module-method';\r\n\r\nexport type ExecutionStepsFormValue = ExecutionStepFormValue[];\r\n\r\nexport interface ExecutionStepFormValue {\r\n  module: Module;\r\n  method: ModuleMethod;\r\n  outputMappings: MappingsFormValue[];\r\n  predefinedInput: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExecutionStepsFormService {\r\n  constructor(\r\n    private artifactMappingService: ArtifactMappingFormService,\r\n    private fb: FormBuilder,\r\n    private moduleService: ModuleService\r\n  ) {}\r\n\r\n  createForm(executionSteps: ExecutionStep[]): FormArray {\r\n    return this.fb.array(\r\n      executionSteps.map((step) => this.createExecutionStepForm(step))\r\n    );\r\n  }\r\n\r\n  createExecutionStepForm(executionStep: ExecutionStep = null): FormGroup {\r\n    let module: Module = null;\r\n    let method = null;\r\n    if (executionStep) {\r\n      module = this.moduleService.getModule(executionStep.module);\r\n      method = module.methods[executionStep.method];\r\n    }\r\n    return this.fb.group({\r\n      module: this.fb.control(module, Validators.required),\r\n      method: this.fb.control(method, Validators.required),\r\n      outputMappings: this.createMappingsForm(\r\n        method,\r\n        executionStep ? executionStep.outputMappings : null\r\n      ),\r\n      predefinedInput: this.createPredefinedInputForm(\r\n        method,\r\n        executionStep ? executionStep.predefinedInput : null\r\n      ),\r\n    });\r\n  }\r\n\r\n  createMappingsForm(\r\n    method: ModuleMethod,\r\n    outputMappings: ArtifactMapping[][]\r\n  ): FormArray {\r\n    let outputs = [];\r\n    if (method) {\r\n      outputs = method.output.map((output, index) => {\r\n        let mappings = [];\r\n        if (outputMappings && index < outputMappings.length) {\r\n          mappings = outputMappings[index];\r\n        }\r\n        return this.artifactMappingService.createMappingsForm(mappings);\r\n      });\r\n    }\r\n    return this.fb.array(outputs);\r\n  }\r\n\r\n  createPredefinedInputForm(\r\n    method: ModuleMethod,\r\n    predefinedInput: any\r\n  ): FormGroup {\r\n    if (method != null && method.createConfigurationForm != null) {\r\n      return method.createConfigurationForm(predefinedInput);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Add an execution step to the form.\r\n   *\r\n   * @param executionStepForm the execution step form\r\n   */\r\n  addExecutionStep(executionStepForm: FormArray): void {\r\n    executionStepForm.push(this.createExecutionStepForm());\r\n  }\r\n\r\n  /**\r\n   * Called if the method of an execution step has changed.\r\n   *\r\n   * @param executionStepForm the execution step form\r\n   * @param step the index of the step to remove\r\n   */\r\n  executionStepMethodChange(executionStepForm: FormArray, step: number): void {\r\n    executionStepForm.controls.forEach((control) => {\r\n      const outputMappings = control.get('outputMappings') as FormArray;\r\n      outputMappings.controls.forEach((control: FormArray) => {\r\n        this.artifactMappingService.resetMappingTo(control, step);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove an execution step from the form and remove all mappings to it.\r\n   *\r\n   * @param executionStepForm the execution step form\r\n   * @param step the index of the step to remove\r\n   */\r\n  removeExecutionStep(executionStepForm: FormArray, step: number): void {\r\n    executionStepForm.controls.forEach((control) => {\r\n      const outputMappings = control.get('outputMappings') as FormArray;\r\n      outputMappings.controls.forEach((control: FormArray) => {\r\n        this.artifactMappingService.removeMappingTo(control, step);\r\n      });\r\n    });\r\n    executionStepForm.removeAt(step);\r\n  }\r\n\r\n  getExecutionSteps(form: ExecutionStepsFormValue): ExecutionStep[] {\r\n    return form.map(\r\n      (step) =>\r\n        new ExecutionStep(undefined, {\r\n          module: step.module ? step.module.name : null,\r\n          method: step.method ? step.method.name : null,\r\n          outputMappings: step.outputMappings.map((output) =>\r\n            this.artifactMappingService.getMappings(output)\r\n          ),\r\n          predefinedInput: step.predefinedInput,\r\n        })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport {\r\n  MethodElement,\r\n  MethodElementInit,\r\n} from '../../development-process-registry/method-elements/method-element';\r\nimport { MethodElementService } from '../../development-process-registry/method-elements/method-element.service';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\n\r\n@Injectable()\r\nexport class MethodElementLoaderService<\r\n  T extends MethodElement,\r\n  S extends MethodElementInit\r\n> extends ElementLoaderService {\r\n  methodElement: T = null;\r\n  listNames: string[] = [];\r\n\r\n  constructor(\r\n    private methodElementService: MethodElementService<T, S>,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const methodElementId = paramMap.get('id');\r\n    this.changesFeed = this.methodElementService\r\n      .getChangesFeed(methodElementId)\r\n      .subscribe(() => this.loadMethodElement(methodElementId));\r\n    void this.loadMethodElement(methodElementId);\r\n  }\r\n\r\n  private async loadMethodElement(methodElementId: string): Promise<void> {\r\n    this.methodElement = await this.methodElementService.get(methodElementId);\r\n    this.listNames = (await this.methodElementService.getLists()).map(\r\n      (list) => list.listName\r\n    );\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ExecutionStep } from '../../development-process-registry/development-method/execution-step';\r\nimport { ModuleService } from '../../development-process-registry/module-api/module.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MethodInfoStepsFormService {\r\n  constructor(private fb: FormBuilder, private moduleService: ModuleService) {}\r\n\r\n  createForm(executionSteps: ExecutionStep[], stepDecisions: any[]): FormArray {\r\n    return this.fb.array(\r\n      stepDecisions.map((step, index) =>\r\n        this.createStepDecisionForm(executionSteps[index], step)\r\n      )\r\n    );\r\n  }\r\n\r\n  createStepDecisionForm(\r\n    executionStep: ExecutionStep,\r\n    stepDecision: any\r\n  ): FormGroup {\r\n    const method = this.moduleService.getModuleMethod(\r\n      executionStep.module,\r\n      executionStep.method\r\n    );\r\n    if (method != null && method.createDecisionConfigurationForm != null) {\r\n      return method.createDecisionConfigurationForm(stepDecision);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  getStepDecisions(form: any[]): any[] {\r\n    return form;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Artifact } from '../../development-process-registry/method-elements/artifact/artifact';\r\nimport { ArtifactDataType } from '../../development-process-registry/running-process/artifact-data';\r\nimport { OutputArtifactMapping } from '../../development-process-registry/running-process/output-artifact-mapping';\r\n\r\nexport interface OutputArtifactMappingFormValue {\r\n  isDefinition: boolean;\r\n  artifact?: number;\r\n  artifactName?: string;\r\n  data: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OutputArtifactMappingFormService {\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  createForm(\r\n    artifacts: Artifact[],\r\n    outputArtifacts?: OutputArtifactMapping[]\r\n  ): FormGroup {\r\n    const form = this.fb.group({\r\n      outputArtifacts: this.fb.array([]),\r\n    });\r\n    let formGroups: FormGroup[];\r\n    if (outputArtifacts != null) {\r\n      formGroups = artifacts.map((artifact, index) =>\r\n        this.createOutputArtifactMappingControl(outputArtifacts[index])\r\n      );\r\n    } else {\r\n      formGroups = artifacts.map(() =>\r\n        this.createOutputArtifactMappingControl()\r\n      );\r\n    }\r\n    form.setControl('outputArtifacts', this.fb.array(formGroups));\r\n    return form;\r\n  }\r\n\r\n  createOutputArtifactMappingControl(\r\n    outputArtifact?: OutputArtifactMapping\r\n  ): FormGroup {\r\n    if (outputArtifact == null) {\r\n      outputArtifact = new OutputArtifactMapping(undefined, {\r\n        isDefinition: false,\r\n        artifact: null,\r\n        artifactName: null,\r\n        data: {\r\n          type: ArtifactDataType.STRING,\r\n          data: '',\r\n        },\r\n      });\r\n    }\r\n    return this.fb.group(\r\n      {\r\n        isDefinition: this.fb.control(\r\n          outputArtifact.isDefinition,\r\n          Validators.required\r\n        ),\r\n        artifact: this.fb.control(outputArtifact.artifact),\r\n        artifactName: this.fb.control(outputArtifact.artifactName),\r\n        data: this.fb.control(\r\n          outputArtifact.data.type === ArtifactDataType.STRING\r\n            ? outputArtifact.data.data\r\n            : ''\r\n        ),\r\n      },\r\n      {\r\n        validators: (group) => {\r\n          if (group.get('isDefinition').value) {\r\n            if (!group.get('artifactName').value) {\r\n              return { requiredName: true };\r\n            } else {\r\n              return null;\r\n            }\r\n          } else {\r\n            if (\r\n              group.get('artifact').value === null ||\r\n              group.get('artifact').value === undefined\r\n            ) {\r\n              return { requiredArtifact: true };\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  get(formValue: OutputArtifactMappingFormValue[]): OutputArtifactMapping[] {\r\n    return formValue.map((item) => {\r\n      return new OutputArtifactMapping(undefined, {\r\n        isDefinition: item.isDefinition,\r\n        artifact: item.artifact,\r\n        artifactName: item.artifactName,\r\n        data: {\r\n          data: item.data,\r\n          type: ArtifactDataType.STRING,\r\n        },\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { ProcessPattern } from '../../development-process-registry/process-pattern/process-pattern';\r\nimport { ProcessPatternService } from '../../development-process-registry/process-pattern/process-pattern.service';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\n\r\n@Injectable()\r\nexport class ProcessPatternLoaderService extends ElementLoaderService {\r\n  processPattern: ProcessPattern = null;\r\n\r\n  constructor(\r\n    private processPatternService: ProcessPatternService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const processPatternId = paramMap.get('id');\r\n    this.changesFeed = this.processPatternService\r\n      .getChangesFeed(processPatternId)\r\n      .subscribe(() => this.loadProcessPattern(processPatternId));\r\n    void this.loadProcessPattern(processPatternId);\r\n  }\r\n\r\n  private async loadProcessPattern(processPatternId: string): Promise<void> {\r\n    this.processPattern = await this.processPatternService.get(\r\n      processPatternId\r\n    );\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RunningProcessLoaderService } from './running-process-loader.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { RunningMethod } from '../../development-process-registry/running-process/running-method';\r\nimport { RunningProcessService } from '../../development-process-registry/running-process/running-process.service';\r\n\r\n@Injectable()\r\nexport class RunningMethodLoaderService extends RunningProcessLoaderService {\r\n  runningMethod: RunningMethod;\r\n  private executionId: string;\r\n\r\n  constructor(\r\n    runningProcessService: RunningProcessService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(runningProcessService, route);\r\n    this.loaded.subscribe(() => this.loadRunningMethod());\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    this.executionId = paramMap.get('executionId');\r\n    super.initParams(paramMap);\r\n  }\r\n\r\n  private loadRunningMethod(): void {\r\n    this.runningMethod = this.runningProcess.getRunningMethod(this.executionId);\r\n    if (this.runningMethod == null) {\r\n      this.runningMethod = null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RunningProcess } from '../../development-process-registry/running-process/running-process';\r\nimport { RunningProcessService } from '../../development-process-registry/running-process/running-process.service';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class RunningProcessLoaderService extends ElementLoaderService {\r\n  runningProcess: RunningProcess;\r\n\r\n  error: boolean;\r\n  errorStatus: number;\r\n  errorReason: string;\r\n\r\n  constructor(\r\n    private runningProcessService: RunningProcessService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const runningProcessId = paramMap.get('id');\r\n    this.changesFeed = this.runningProcessService\r\n      .getChangesFeed(runningProcessId)\r\n      .subscribe(() => this.loadRunningProcess(runningProcessId));\r\n    void this.loadRunningProcess(runningProcessId);\r\n  }\r\n\r\n  private async loadRunningProcess(runningProcessId: string): Promise<void> {\r\n    try {\r\n      this.runningProcess = await this.runningProcessService.get(\r\n        runningProcessId\r\n      );\r\n    } catch (error) {\r\n      this.runningProcess = null;\r\n      this.error = true;\r\n      this.errorStatus = error.status;\r\n      this.errorReason = error.reason;\r\n      console.error(error);\r\n      return;\r\n    }\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SituationalFactorDefinition } from '../../development-process-registry/method-elements/situational-factor/situational-factor-definition';\r\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, map, tap } from 'rxjs/operators';\r\nimport { equalsListString, getTypeaheadInputPipe } from '../../shared/utils';\r\n\r\n@Component({\r\n  selector: 'app-situational-factor-form',\r\n  templateUrl: './situational-factor-form.component.html',\r\n  styleUrls: ['./situational-factor-form.component.css'],\r\n})\r\nexport class SituationalFactorFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() situationalFactor: SituationalFactorDefinition;\r\n  @Input() listNames: string[];\r\n\r\n  @Output() submitSituationalFactorForm = new EventEmitter<FormGroup>();\r\n\r\n  form: FormGroup = this.fb.group({\r\n    list: ['', Validators.required],\r\n    values: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  openListInput = new Subject<string>();\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.changeSubscription = this.form.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !this.equals(this.situationalFactor, value))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.situationalFactor) {\r\n      const oldSituationalFactor: SituationalFactorDefinition =\r\n        changes.situationalFactor.previousValue;\r\n      const newSituationalFactor: SituationalFactorDefinition =\r\n        changes.situationalFactor.currentValue;\r\n      if (!this.equals(newSituationalFactor, oldSituationalFactor)) {\r\n        this.loadForm(newSituationalFactor);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n    this.openListInput.complete();\r\n  }\r\n\r\n  searchLists = (input: Observable<string>) => {\r\n    return merge(getTypeaheadInputPipe(input), this.openListInput).pipe(\r\n      map((term) =>\r\n        this.listNames\r\n          .filter((listItem) =>\r\n            listItem.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 10)\r\n      )\r\n    );\r\n  };\r\n\r\n  private equals(\r\n    situationalFactorA: SituationalFactorDefinition,\r\n    situationalFactorB: SituationalFactorDefinition\r\n  ) {\r\n    if (situationalFactorA == null && situationalFactorB == null) {\r\n      return true;\r\n    }\r\n    if (situationalFactorA == null || situationalFactorB == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      situationalFactorA.list === situationalFactorB.list &&\r\n      equalsListString(situationalFactorA.values, situationalFactorB.values)\r\n    );\r\n  }\r\n\r\n  private loadForm(situationalFactor: SituationalFactorDefinition) {\r\n    this.form.patchValue(situationalFactor);\r\n    this.valuesFormArray.clear();\r\n    situationalFactor.values.forEach((value, index) =>\r\n      this.valuesFormArray.setControl(\r\n        index,\r\n        this.fb.control(value, Validators.required)\r\n      )\r\n    );\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitSituationalFactorForm.emit(this.form);\r\n  }\r\n\r\n  get valuesFormArray() {\r\n    return this.form.get('values') as FormArray;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"listName\" class=\"col-sm-4 col-form-label\">List Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        formControlName=\"list\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"listName\"\r\n        [ngbTypeahead]=\"searchLists\"\r\n        (click)=\"openListInput.next($any($event.target).value)\"\r\n        (focus)=\"openListInput.next($any($event.target).value)\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">\r\n      Values<span *ngIf=\"situationalFactor.ordered\"> from low to high</span>\r\n    </h6>\r\n    <div class=\"form-group\" formArrayName=\"values\">\r\n      <app-form-array-list\r\n        elementName=\"Value\"\r\n        [formArray]=\"valuesFormArray\"\r\n        [ordered]=\"situationalFactor.ordered\"\r\n      ></app-form-array-list>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!form.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormGroupDirective,\r\n} from '@angular/forms';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport {\r\n  SituationalFactorDefinition,\r\n  SituationalFactorDefinitionEntry,\r\n} from '../../development-process-registry/method-elements/situational-factor/situational-factor-definition';\r\nimport { getTypeaheadInputPipe } from '../../shared/utils';\r\nimport { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-situational-factor-selection-form',\r\n  templateUrl: './situational-factor-selection-form.component.html',\r\n  styleUrls: ['./situational-factor-selection-form.component.css'],\r\n})\r\nexport class SituationalFactorSelectionFormComponent\r\n  implements OnInit, OnDestroy\r\n{\r\n  @Input() methodElements: SituationalFactorDefinitionEntry[];\r\n  @Input() listNames: string[];\r\n\r\n  @Output() remove = new EventEmitter<void>();\r\n\r\n  private listChangeSubscription: Subscription;\r\n  private factorChangeSubscription: Subscription;\r\n\r\n  openListInput = new Subject<string>();\r\n  openElementInput = new Subject<string>();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private formGroupDirective: FormGroupDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.listChangeSubscription = this.listControl.valueChanges\r\n      .pipe(\r\n        filter(\r\n          (value) =>\r\n            this.factorControl.value && this.factorControl.value.list !== value\r\n        ),\r\n        tap(() =>\r\n          this.elementControl.setValue({\r\n            factor: null,\r\n            value: null,\r\n          })\r\n        )\r\n      )\r\n      .subscribe();\r\n    this.factorChangeSubscription = this.factorControl.valueChanges\r\n      .pipe(\r\n        tap(() => this.valueControl.setValue(null)),\r\n        filter((value) => value && this.listControl.value !== value.list),\r\n        tap((value) => this.listControl.setValue(value.list))\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.listChangeSubscription) {\r\n      this.listChangeSubscription.unsubscribe();\r\n    }\r\n    if (this.factorChangeSubscription) {\r\n      this.factorChangeSubscription.unsubscribe();\r\n    }\r\n    this.openListInput.complete();\r\n    this.openElementInput.complete();\r\n  }\r\n\r\n  searchLists = (input: Observable<string>): Observable<string[]> => {\r\n    return merge(getTypeaheadInputPipe(input), this.openListInput).pipe(\r\n      map((term) =>\r\n        this.listNames\r\n          .filter((listItem) =>\r\n            listItem.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 7)\r\n      )\r\n    );\r\n  };\r\n\r\n  searchElements = (\r\n    input: Observable<string>\r\n  ): Observable<SituationalFactorDefinitionEntry[]> => {\r\n    return merge(getTypeaheadInputPipe(input), this.openElementInput).pipe(\r\n      map((term) =>\r\n        this.methodElements\r\n          .filter(\r\n            (methodElement) =>\r\n              (!this.listControl.value ||\r\n                methodElement.list.toLowerCase() ===\r\n                  this.listControl.value.toLowerCase()) &&\r\n              methodElement.name.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 7)\r\n      )\r\n    );\r\n  };\r\n\r\n  selectFactor(\r\n    event: NgbTypeaheadSelectItemEvent<SituationalFactorDefinitionEntry>\r\n  ): void {\r\n    event.preventDefault();\r\n    this.factorControl.setValue(\r\n      new SituationalFactorDefinition(event.item, undefined)\r\n    );\r\n  }\r\n\r\n  get values(): string[] {\r\n    if (this.factorValue == null) {\r\n      return [];\r\n    }\r\n    return this.factorValue.values;\r\n  }\r\n\r\n  formatter(x: { name: string }): string {\r\n    return x.name;\r\n  }\r\n\r\n  get listControl(): FormControl {\r\n    return this.formGroup.get('list') as FormControl;\r\n  }\r\n\r\n  get elementControl(): FormControl {\r\n    return this.formGroup.get('element') as FormControl;\r\n  }\r\n\r\n  get factorControl(): FormControl {\r\n    return this.elementControl.get('factor') as FormControl;\r\n  }\r\n\r\n  get factorValue(): SituationalFactorDefinition | undefined {\r\n    return this.factorControl.value;\r\n  }\r\n\r\n  get valueControl(): FormControl {\r\n    return this.elementControl.get('value') as FormControl;\r\n  }\r\n\r\n  get formGroup(): FormGroup {\r\n    return this.formGroupDirective.control;\r\n  }\r\n}\r\n","<div [formGroup]=\"formGroup\" class=\"form-row\">\r\n  <div class=\"form-group col\">\r\n    <label for=\"listInput\">List</label>\r\n    <input\r\n      type=\"text\"\r\n      formControlName=\"list\"\r\n      class=\"form-control\"\r\n      [class.is-invalid]=\"listControl.invalid\"\r\n      id=\"listInput\"\r\n      aria-describedby=\"listInputFeedback\"\r\n      [ngbTypeahead]=\"searchLists\"\r\n      (click)=\"openListInput.next($any($event.target).value)\"\r\n      (focus)=\"openListInput.next($any($event.target).value)\"\r\n    />\r\n    <div id=\"listInputFeedback\" class=\"invalid-feedback\">\r\n      <span *ngIf=\"listControl.hasError('required')\"\r\n        >This field is required.</span\r\n      >\r\n    </div>\r\n  </div>\r\n  <ng-container formGroupName=\"element\">\r\n    <div class=\"form-group col\">\r\n      <label for=\"elementInput\">Situational Factor</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"factor\"\r\n        class=\"form-control\"\r\n        id=\"elementInput\"\r\n        [ngbTypeahead]=\"searchElements\"\r\n        [editable]=\"false\"\r\n        [resultFormatter]=\"formatter\"\r\n        [inputFormatter]=\"formatter\"\r\n        (selectItem)=\"selectFactor($event)\"\r\n        (click)=\"openElementInput.next($any($event.target).value)\"\r\n        (focus)=\"openElementInput.next($any($event.target).value)\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group col\">\r\n      <label for=\"factorValue\">Value</label>\r\n      <div class=\"input-group\">\r\n        <select class=\"form-control\" formControlName=\"value\" id=\"factorValue\">\r\n          <option *ngFor=\"let value of values\" [ngValue]=\"value\">\r\n            {{ value }}\r\n          </option>\r\n        </select>\r\n        <div class=\"input-group-append\">\r\n          <button\r\n            (click)=\"remove.emit()\"\r\n            class=\"btn btn-secondary align-self-baseline\"\r\n            type=\"button\"\r\n          >\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SituationalFactorService } from '../../development-process-registry/method-elements/situational-factor/situational-factor.service';\r\nimport {\r\n  SituationalFactorDefinition,\r\n  SituationalFactorDefinitionInit,\r\n} from '../../development-process-registry/method-elements/situational-factor/situational-factor-definition';\r\nimport { MethodElementLoaderService } from '../shared/method-element-loader.service';\r\nimport { MethodElementService } from '../../development-process-registry/method-elements/method-element.service';\r\n\r\n@Component({\r\n  selector: 'app-situational-factor',\r\n  templateUrl: './situational-factor.component.html',\r\n  styleUrls: ['./situational-factor.component.css'],\r\n  providers: [\r\n    MethodElementLoaderService,\r\n    { provide: MethodElementService, useExisting: SituationalFactorService },\r\n  ],\r\n})\r\nexport class SituationalFactorComponent implements OnInit, OnDestroy {\r\n  orderedForm: FormGroup = this.fb.group({\r\n    ordered: [false, Validators.required],\r\n  });\r\n\r\n  private orderedSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private situationalFactorLoaderService: MethodElementLoaderService<\r\n      SituationalFactorDefinition,\r\n      SituationalFactorDefinitionInit\r\n    >,\r\n    private situationalFactorService: SituationalFactorService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.situationalFactorLoaderService.loaded.subscribe(() => {\r\n      this.orderedForm.patchValue(this.situationalFactor, { emitEvent: false });\r\n    });\r\n    this.orderedSubscription = this.orderedForm.valueChanges.subscribe(\r\n      (formValue) => this.updateSituationalFactorValue(formValue)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.orderedSubscription) {\r\n      this.orderedSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async updateSituationalFactor(form: FormGroup): Promise<void> {\r\n    await this.updateSituationalFactorValue(form.value);\r\n  }\r\n\r\n  async updateSituationalFactorValue(value: any): Promise<void> {\r\n    await this.situationalFactorService.update(\r\n      this.situationalFactor._id,\r\n      value\r\n    );\r\n  }\r\n\r\n  get situationalFactor(): SituationalFactorDefinition {\r\n    return this.situationalFactorLoaderService.methodElement;\r\n  }\r\n\r\n  get listNames(): string[] {\r\n    return this.situationalFactorLoaderService.listNames;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"situationalFactor\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">{{\r\n      situationalFactor.name\r\n    }}</a>\r\n  </nav>\r\n</div>\r\n\r\n<main class=\"container\" *ngIf=\"situationalFactor\">\r\n  <div class=\"alert alert-info mt-3\" role=\"alert\">\r\n    Create a situational factor and define its values. Additionally, it is\r\n    possible to specify whether the values are ordered. If the values are\r\n    ordered, a lower value will include the higher values.\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Situational Factor</h6>\r\n    <div class=\"text-muted\">\r\n      <app-situational-factor-form\r\n        [situationalFactor]=\"situationalFactor\"\r\n        [listNames]=\"listNames\"\r\n        (submitSituationalFactorForm)=\"updateSituationalFactor($event)\"\r\n      ></app-situational-factor-form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Situational Factor Values Ordered\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form [formGroup]=\"orderedForm\">\r\n        <div\r\n          class=\"btn-group btn-group-toggle\"\r\n          ngbRadioGroup\r\n          name=\"ordered\"\r\n          formControlName=\"ordered\"\r\n        >\r\n          <label ngbButtonLabel class=\"btn-primary\">\r\n            <input ngbButton type=\"radio\" [value]=\"false\" /> unordered\r\n          </label>\r\n          <label ngbButtonLabel class=\"btn-primary\">\r\n            <input ngbButton type=\"radio\" [value]=\"true\" /> ordered\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">\r\n      Situational Factor Description\r\n    </h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-description-form\r\n        [description]=\"situationalFactor.description\"\r\n        (submitDescriptionForm)=\"updateSituationalFactor($event)\"\r\n      ></app-description-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { SituationalFactor } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\nimport { SituationalFactorDefinition } from '../../development-process-registry/method-elements/situational-factor/situational-factor-definition';\r\n\r\n@Component({\r\n  selector: 'app-situational-factors-overview',\r\n  templateUrl: './situational-factors-overview.component.html',\r\n  styleUrls: ['./situational-factors-overview.component.css'],\r\n})\r\nexport class SituationalFactorsOverviewComponent implements OnChanges {\r\n  @Input() needed: SituationalFactor[];\r\n  @Input() provided: SituationalFactor[];\r\n\r\n  factors: {\r\n    list: string;\r\n    name: string;\r\n    needed: string;\r\n    provided: string;\r\n    fulfills: boolean | undefined;\r\n  }[] = [];\r\n  factorsMap: { [list: string]: { [name: string]: string } };\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.provided) {\r\n      this.createFactorsMap();\r\n    }\r\n    if (changes.needed || changes.provided) {\r\n      this.calculateFactors();\r\n    }\r\n  }\r\n\r\n  calculateFactors() {\r\n    this.factors = this.needed.map((factor) => {\r\n      const provided = this.getProvidedValue(factor.factor);\r\n      let fulfills: boolean;\r\n      if (provided) {\r\n        if (provided === factor.value) {\r\n          fulfills = true;\r\n        } else {\r\n          if (factor.factor.ordered) {\r\n            fulfills =\r\n              factor.factor.values.indexOf(factor.value) <=\r\n              factor.factor.values.indexOf(provided);\r\n          } else {\r\n            fulfills = false;\r\n          }\r\n        }\r\n      } else {\r\n        fulfills = undefined;\r\n      }\r\n      return {\r\n        list: factor.factor.list,\r\n        name: factor.factor.name,\r\n        needed: factor.value,\r\n        provided: provided ? provided : '-',\r\n        fulfills,\r\n      };\r\n    });\r\n  }\r\n\r\n  private createFactorsMap() {\r\n    this.factorsMap = SituationalFactor.createMap(this.provided);\r\n  }\r\n\r\n  private getProvidedValue(factor: SituationalFactorDefinition) {\r\n    if (factor.list in this.factorsMap) {\r\n      const provided = this.factorsMap[factor.list][factor.name];\r\n      if (provided) {\r\n        return provided;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","<table class=\"table mb-0\">\r\n  <tbody>\r\n    <tr>\r\n      <th scope=\"col\">List</th>\r\n      <th scope=\"col\">Situational Factor</th>\r\n      <th scope=\"col\">Needed Context</th>\r\n      <th scope=\"col\">Provided by Element</th>\r\n      <th scope=\"col\" class=\"text-center\">Fulfilled</th>\r\n    </tr>\r\n    <tr *ngFor=\"let factor of factors\">\r\n      <td>{{ factor.list }}</td>\r\n      <td>{{ factor.name }}</td>\r\n      <td>{{ factor.needed }}</td>\r\n      <td>{{ factor.provided }}</td>\r\n      <td class=\"text-center\">\r\n        <i\r\n          *ngIf=\"factor.fulfills === undefined\"\r\n          class=\"fas fa-question text-muted\"\r\n        ></i>\r\n        <i\r\n          *ngIf=\"factor.fulfills === false\"\r\n          class=\"fas fa-times text-danger\"\r\n        ></i>\r\n        <i\r\n          *ngIf=\"factor.fulfills === true\"\r\n          class=\"fas fa-check text-success\"\r\n        ></i>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SituationalFactor } from '../../development-process-registry/method-elements/situational-factor/situational-factor';\r\nimport { SituationalFactorDefinitionEntry } from '../../development-process-registry/method-elements/situational-factor/situational-factor-definition';\r\nimport { SituationalFactorService } from '../../development-process-registry/method-elements/situational-factor/situational-factor.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { Selection } from '../../development-process-registry/development-method/selection';\r\nimport { equalsList } from '../../shared/utils';\r\n\r\n@Component({\r\n  selector: 'app-situational-factors-selection-form',\r\n  templateUrl: './situational-factors-selection-form.component.html',\r\n  styleUrls: ['./situational-factors-selection-form.component.css'],\r\n})\r\nexport class SituationalFactorsSelectionFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() situationalFactors: Selection<SituationalFactor>[];\r\n\r\n  @Output() submitSituationalFactorsForm = new EventEmitter<FormArray>();\r\n\r\n  situationalFactorsForm: FormGroup = this.fb.group({\r\n    situationalFactors: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  methodElements: SituationalFactorDefinitionEntry[] = [];\r\n  listNames: string[] = [];\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private situationalFactorService: SituationalFactorService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadFactors();\r\n    this.changeSubscription = this.situationalFactorsForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !equalsList(\r\n              this.situationalFactors,\r\n              value.situationalFactors\r\n            ))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.situationalFactors) {\r\n      const oldFactors: Selection<SituationalFactor>[] =\r\n        changes.situationalFactors.previousValue;\r\n      const newFactors: Selection<SituationalFactor>[] =\r\n        changes.situationalFactors.currentValue;\r\n      if (!equalsList(oldFactors, newFactors)) {\r\n        this.loadForm(newFactors);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitSituationalFactorsForm.emit(\r\n      this.situationalFactorsForm.get('situationalFactors') as FormArray\r\n    );\r\n  }\r\n\r\n  private loadForm(situationalFactors: Selection<SituationalFactor>[]): void {\r\n    const formGroups = situationalFactors.map((factor) =>\r\n      this.fb.group({\r\n        list: [factor.list, Validators.required],\r\n        element: this.fb.group({\r\n          factor: [factor.element.factor, Validators.required],\r\n          value: [factor.element.value, Validators.required],\r\n        }),\r\n      })\r\n    );\r\n    this.situationalFactorsForm.setControl(\r\n      'situationalFactors',\r\n      this.fb.array(formGroups)\r\n    );\r\n  }\r\n\r\n  private async loadFactors(): Promise<void> {\r\n    this.methodElements = await this.situationalFactorService.getList();\r\n    this.listNames = [\r\n      ...new Set(this.methodElements.map((element) => element.list)),\r\n    ];\r\n  }\r\n\r\n  createFormGroupFactory = (): FormGroup =>\r\n    this.fb.group({\r\n      list: ['', Validators.required],\r\n      element: this.fb.group({\r\n        factor: [null, Validators.required],\r\n        value: [null, Validators.required],\r\n      }),\r\n    });\r\n}\r\n","<ng-template\r\n  #situationalFactorSelectionForm\r\n  let-remove=\"remove\"\r\n  let-formGroup=\"formGroup\"\r\n  let-index=\"index\"\r\n>\r\n  <app-situational-factor-selection-form\r\n    [formGroup]=\"formGroup\"\r\n    [methodElements]=\"methodElements\"\r\n    [listNames]=\"listNames\"\r\n    (remove)=\"remove(index)\"\r\n  ></app-situational-factor-selection-form>\r\n</ng-template>\r\n\r\n<form [formGroup]=\"situationalFactorsForm\" (ngSubmit)=\"submitForm()\">\r\n  <app-method-elements-selection-form\r\n    class=\"form-group\"\r\n    formArrayName=\"situationalFactors\"\r\n    [createFormGroupFactory]=\"createFormGroupFactory\"\r\n    [listNames]=\"listNames\"\r\n    [methodElementFormTemplate]=\"situationalFactorSelectionForm\"\r\n    [methodElements]=\"methodElements\"\r\n    methodElementName=\"Situational Factor\"\r\n  ></app-method-elements-selection-form>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!situationalFactorsForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SituationalFactorService } from '../../development-process-registry/method-elements/situational-factor/situational-factor.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  SituationalFactorDefinition,\r\n  SituationalFactorDefinitionEntry,\r\n} from '../../development-process-registry/method-elements/situational-factor/situational-factor-definition';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-situational-factors',\r\n  templateUrl: './situational-factors.component.html',\r\n  styleUrls: ['./situational-factors.component.css'],\r\n})\r\nexport class SituationalFactorsComponent implements OnInit {\r\n  elementLists: {\r\n    listName: string;\r\n    elements: SituationalFactorDefinitionEntry[];\r\n  }[] = null;\r\n  listNames: string[] = [];\r\n\r\n  modalSituationalFactor: SituationalFactorDefinition;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteSituationalFactorModal', { static: true })\r\n  deleteSituationalFactorModal: unknown;\r\n\r\n  constructor(\r\n    private situationalFactorService: SituationalFactorService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadSituationalFactors();\r\n  }\r\n\r\n  private async loadSituationalFactors(): Promise<void> {\r\n    this.elementLists = await this.situationalFactorService.getLists();\r\n    this.listNames = this.elementLists.map((list) => list.listName);\r\n  }\r\n\r\n  openDeleteSituationalFactorModal(\r\n    situationalFactor: SituationalFactorDefinition\r\n  ): void {\r\n    this.modalSituationalFactor = situationalFactor;\r\n    this.modalReference = this.modalService.open(\r\n      this.deleteSituationalFactorModal,\r\n      {\r\n        size: 'lg',\r\n      }\r\n    );\r\n  }\r\n\r\n  async deleteSituationalFactor(id: string): Promise<void> {\r\n    await this.situationalFactorService.delete(id);\r\n    await this.loadSituationalFactors();\r\n  }\r\n\r\n  async addSituationalFactor(situationalFactorForm: FormGroup): Promise<void> {\r\n    await this.situationalFactorService.add(situationalFactorForm.value);\r\n    await this.loadSituationalFactors();\r\n  }\r\n}\r\n","<ng-template #deleteSituationalFactorModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"deleteSituationalFactor(modalSituationalFactor._id); c()\"\r\n  >\r\n    <div modalTitle>\r\n      Delete Situational Factor {{ modalSituationalFactor.name }}\r\n    </div>\r\n    You are deleting the situational factor {{ modalSituationalFactor.name }}.\r\n    This can not be undone. This action will not delete the situational factor\r\n    from method building blocks that are using it.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Situational Factors</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create situational Factors to use them for the definition of the context and\r\n    in Method Building Blocks\r\n  </div>\r\n\r\n  <app-method-element-list\r\n    listTitle=\"Situational Factors\"\r\n    [elementLists]=\"elementLists\"\r\n    (deleteElement)=\"openDeleteSituationalFactorModal($event)\"\r\n  ></app-method-element-list>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Add Situational Factor</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-method-element-form\r\n        [listNames]=\"listNames\"\r\n        (submitMethodElementForm)=\"addSituationalFactor($event)\"\r\n      ></app-method-element-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport {\r\n  Stakeholder,\r\n  StakeholderInit,\r\n} from '../../development-process-registry/method-elements/stakeholder/stakeholder';\r\nimport { StakeholderService } from '../../development-process-registry/method-elements/stakeholder/stakeholder.service';\r\nimport { MethodElementLoaderService } from '../shared/method-element-loader.service';\r\nimport { MethodElementService } from '../../development-process-registry/method-elements/method-element.service';\r\n\r\n@Component({\r\n  selector: 'app-stakeholder',\r\n  templateUrl: './stakeholder.component.html',\r\n  styleUrls: ['./stakeholder.component.css'],\r\n  providers: [\r\n    MethodElementLoaderService,\r\n    { provide: MethodElementService, useExisting: StakeholderService },\r\n  ],\r\n})\r\nexport class StakeholderComponent {\r\n  constructor(\r\n    private stakeholderLoaderService: MethodElementLoaderService<\r\n      Stakeholder,\r\n      StakeholderInit\r\n    >,\r\n    private stakeholderService: StakeholderService\r\n  ) {}\r\n\r\n  async updateValue(value: any): Promise<void> {\r\n    await this.stakeholderService.update(this.stakeholder._id, value);\r\n  }\r\n\r\n  get stakeholder(): Stakeholder {\r\n    return this.stakeholderLoaderService.methodElement;\r\n  }\r\n\r\n  get listNames(): string[] {\r\n    return this.stakeholderLoaderService.listNames;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"stakeholder\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">{{ stakeholder.name }}</a>\r\n  </nav>\r\n</div>\r\n\r\n<main class=\"container\" *ngIf=\"stakeholder\">\r\n  <div class=\"alert alert-info mt-3\" role=\"alert\">\r\n    Update a Stakeholder and define its values.\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Stakeholder</h6>\r\n    <div class=\"text-muted\">\r\n      <app-method-element-form\r\n        [methodElement]=\"stakeholder\"\r\n        [listNames]=\"listNames\"\r\n        (submitMethodElementForm)=\"updateValue($event.value)\"\r\n      ></app-method-element-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n  Stakeholder,\r\n  StakeholderEntry,\r\n} from '../../development-process-registry/method-elements/stakeholder/stakeholder';\r\nimport { StakeholderService } from '../../development-process-registry/method-elements/stakeholder/stakeholder.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { GroupSelection } from '../../development-process-registry/bm-process/decision';\r\nimport { MultipleSelection } from '../../development-process-registry/development-method/multiple-selection';\r\n\r\n@Component({\r\n  selector: 'app-stakeholders-group-info',\r\n  templateUrl: './stakeholders-group-info.component.html',\r\n  styleUrls: ['./stakeholders-group-info.component.css'],\r\n})\r\nexport class StakeholdersGroupInfoComponent implements OnInit {\r\n  @Input() groups: MultipleSelection<Stakeholder>[][];\r\n  @Input() selection: GroupSelection<Stakeholder>;\r\n\r\n  @Output() submitGroupsForm = new EventEmitter<FormGroup>();\r\n\r\n  methodElements: StakeholderEntry[] = [];\r\n\r\n  constructor(private stakeholderService: StakeholderService) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadMethodElements();\r\n  }\r\n\r\n  private async loadMethodElements(): Promise<void> {\r\n    this.methodElements = await this.stakeholderService.getList();\r\n  }\r\n}\r\n","<app-method-element-group-info\r\n  [groups]=\"groups\"\r\n  [selection]=\"selection\"\r\n  [methodElements]=\"methodElements\"\r\n  methodElementName=\"Stakeholder\"\r\n  (submitGroupsForm)=\"submitGroupsForm.emit($event)\"\r\n></app-method-element-group-info>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Stakeholder,\r\n  StakeholderEntry,\r\n} from '../../development-process-registry/method-elements/stakeholder/stakeholder';\r\nimport { StakeholderService } from '../../development-process-registry/method-elements/stakeholder/stakeholder.service';\r\nimport { MultipleSelection } from '../../development-process-registry/development-method/multiple-selection';\r\nimport { Subscription } from 'rxjs';\r\nimport { equalsListOfLists } from '../../shared/utils';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-stakeholders-selection-form',\r\n  templateUrl: './stakeholders-selection-form.component.html',\r\n  styleUrls: ['./stakeholders-selection-form.component.css'],\r\n})\r\nexport class StakeholdersSelectionFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() stakeholders: MultipleSelection<Stakeholder>[][];\r\n\r\n  @Output() submitStakeholdersForm = new EventEmitter<FormArray>();\r\n\r\n  stakeholdersForm: FormGroup = this.fb.group({\r\n    stakeholders: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  methodElements: StakeholderEntry[] = [];\r\n  listNames: string[] = [];\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private stakeholderService: StakeholderService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadStakeholders();\r\n    this.changeSubscription = this.stakeholdersForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !equalsListOfLists(\r\n              this.stakeholders,\r\n              value.stakeholders\r\n            ))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.stakeholders) {\r\n      const oldStakeholderGroups: MultipleSelection<Stakeholder>[][] =\r\n        changes.stakeholders.previousValue;\r\n      const newStakeholderGroups: MultipleSelection<Stakeholder>[][] =\r\n        changes.stakeholders.currentValue;\r\n      if (!equalsListOfLists(oldStakeholderGroups, newStakeholderGroups)) {\r\n        this.loadForm(changes.stakeholders.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  add(): void {\r\n    this.formArray.push(this.fb.array([]));\r\n  }\r\n\r\n  remove(index: number): void {\r\n    this.formArray.removeAt(index);\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitStakeholdersForm.emit(\r\n      this.stakeholdersForm.get('stakeholders') as FormArray\r\n    );\r\n  }\r\n\r\n  private loadForm(stakeholders: MultipleSelection<Stakeholder>[][]): void {\r\n    const formArrays = stakeholders.map((group) =>\r\n      this.fb.array(\r\n        group.map((element) =>\r\n          this.fb.group({\r\n            list: [element.list, Validators.required],\r\n            element: { value: element.element, disabled: element.multiple },\r\n            multiple: element.multiple,\r\n            multipleElements: {\r\n              value: element.multipleElements,\r\n              disabled: element.multiple,\r\n            },\r\n          })\r\n        )\r\n      )\r\n    );\r\n    this.stakeholdersForm.setControl('stakeholders', this.fb.array(formArrays));\r\n  }\r\n\r\n  private async loadStakeholders(): Promise<void> {\r\n    this.methodElements = await this.stakeholderService.getList();\r\n    this.listNames = [\r\n      ...new Set(this.methodElements.map((element) => element.list)),\r\n    ];\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.stakeholdersForm.get('stakeholders') as FormArray;\r\n  }\r\n\r\n  createFormGroupFactory = (): FormGroup =>\r\n    this.fb.group({\r\n      list: ['', Validators.required],\r\n      element: null,\r\n      multiple: false,\r\n      multipleElements: false,\r\n    });\r\n}\r\n","<form [formGroup]=\"stakeholdersForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group\" formGroupName=\"stakeholders\">\r\n    <div\r\n      *ngFor=\"\r\n        let control of formArray.controls;\r\n        let index = index;\r\n        let first = first\r\n      \"\r\n      [class.mt-3]=\"!first\"\r\n      class=\"p-3 mb-3 bg-white rounded shadow-sm\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">Group</h6>\r\n      <app-method-elements-selection-form\r\n        class=\"form-group\"\r\n        formArrayName=\"{{ index }}\"\r\n        [createFormGroupFactory]=\"createFormGroupFactory\"\r\n        [listNames]=\"listNames\"\r\n        [methodElements]=\"methodElements\"\r\n        [multipleAllowed]=\"true\"\r\n        methodElementName=\"Stakeholder\"\r\n      ></app-method-elements-selection-form>\r\n      <div class=\"form-group d-flex\">\r\n        <button\r\n          (click)=\"remove(index)\"\r\n          type=\"button\"\r\n          class=\"btn btn-secondary ml-auto\"\r\n        >\r\n          Remove OR Group\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group d-flex\">\r\n    <button (click)=\"add()\" type=\"button\" class=\"btn btn-secondary ml-auto\">\r\n      Add OR Group\r\n    </button>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!stakeholdersForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { StakeholderService } from '../../development-process-registry/method-elements/stakeholder/stakeholder.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  Stakeholder,\r\n  StakeholderEntry,\r\n} from '../../development-process-registry/method-elements/stakeholder/stakeholder';\r\n\r\n@Component({\r\n  selector: 'app-stakeholders',\r\n  templateUrl: './stakeholders.component.html',\r\n  styleUrls: ['./stakeholders.component.css'],\r\n})\r\nexport class StakeholdersComponent implements OnInit {\r\n  elementLists: { listName: string; elements: StakeholderEntry[] }[] = null;\r\n  listNames: string[] = [];\r\n\r\n  modalStakeholder: Stakeholder;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteStakeholderModal', { static: true })\r\n  deleteStakeholderModal: unknown;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private stakeholderService: StakeholderService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  private load(): void {\r\n    this.stakeholderService\r\n      .getLists()\r\n      .then((lists) => {\r\n        this.elementLists = lists;\r\n        this.listNames = this.elementLists.map((list) => list.listName);\r\n      })\r\n      .catch((error) => console.log('Load: ' + error));\r\n  }\r\n\r\n  openDeleteStakeholderModal(stakeholder: Stakeholder): void {\r\n    this.modalStakeholder = stakeholder;\r\n    this.modalReference = this.modalService.open(this.deleteStakeholderModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  delete(id: string): void {\r\n    this.stakeholderService\r\n      .delete(id)\r\n      .then(() => this.load())\r\n      .catch((error) => console.log('Delete: ' + error));\r\n  }\r\n\r\n  add(form: FormGroup): void {\r\n    this.stakeholderService\r\n      .add(form.value)\r\n      .then(() => this.load())\r\n      .catch((error) => console.log('Add: ' + error));\r\n  }\r\n}\r\n","<ng-template #deleteStakeholderModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"delete(modalStakeholder._id); c()\"\r\n  >\r\n    <div modalTitle>Delete Stakeholder {{ modalStakeholder.name }}</div>\r\n    You are deleting the stakeholder {{ modalStakeholder.name }}. This can not\r\n    be undone. This action will not delete the stakeholder from method building\r\n    blocks that are using it.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Stakeholders</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create Stakeholders to use them for the definition of Method Fragments\r\n  </div>\r\n\r\n  <app-method-element-list\r\n    listTitle=\"Stakeholders\"\r\n    [elementLists]=\"elementLists\"\r\n    (deleteElement)=\"openDeleteStakeholderModal($event)\"\r\n  ></app-method-element-list>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Add Stakeholder</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-method-element-form\r\n        [listNames]=\"listNames\"\r\n        (submitMethodElementForm)=\"add($event)\"\r\n      ></app-method-element-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport {\r\n  Tool,\r\n  ToolInit,\r\n} from '../../development-process-registry/method-elements/tool/tool';\r\nimport { ToolService } from '../../development-process-registry/method-elements/tool/tool.service';\r\nimport { MethodElementLoaderService } from '../shared/method-element-loader.service';\r\nimport { MethodElementService } from '../../development-process-registry/method-elements/method-element.service';\r\n\r\n@Component({\r\n  selector: 'app-tool',\r\n  templateUrl: './tool.component.html',\r\n  styleUrls: ['./tool.component.css'],\r\n  providers: [\r\n    MethodElementLoaderService,\r\n    { provide: MethodElementService, useExisting: ToolService },\r\n  ],\r\n})\r\nexport class ToolComponent {\r\n  constructor(\r\n    private toolLoaderService: MethodElementLoaderService<Tool, ToolInit>,\r\n    private toolService: ToolService\r\n  ) {}\r\n\r\n  async updateValue(value: any): Promise<void> {\r\n    await this.toolService.update(this.tool._id, value);\r\n  }\r\n\r\n  get tool(): Tool {\r\n    return this.toolLoaderService.methodElement;\r\n  }\r\n\r\n  get listNames(): string[] {\r\n    return this.toolLoaderService.listNames;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"tool\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">{{ tool.name }}</a>\r\n  </nav>\r\n</div>\r\n\r\n<main class=\"container\" *ngIf=\"tool\">\r\n  <div class=\"alert alert-info mt-3\" role=\"alert\">\r\n    Update a Tool and define its values.\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Tool</h6>\r\n    <div class=\"text-muted\">\r\n      <app-method-element-form\r\n        [methodElement]=\"tool\"\r\n        [listNames]=\"listNames\"\r\n        (submitMethodElementForm)=\"updateValue($event.value)\"\r\n      ></app-method-element-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MultipleSelection } from '../../development-process-registry/development-method/multiple-selection';\r\nimport { GroupSelection } from '../../development-process-registry/bm-process/decision';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  Tool,\r\n  ToolEntry,\r\n} from '../../development-process-registry/method-elements/tool/tool';\r\nimport { ToolService } from '../../development-process-registry/method-elements/tool/tool.service';\r\n\r\n@Component({\r\n  selector: 'app-tools-group-info',\r\n  templateUrl: './tools-group-info.component.html',\r\n  styleUrls: ['./tools-group-info.component.css'],\r\n})\r\nexport class ToolsGroupInfoComponent implements OnInit {\r\n  @Input() groups: MultipleSelection<Tool>[][];\r\n  @Input() selection: GroupSelection<Tool>;\r\n\r\n  @Output() submitGroupsForm = new EventEmitter<FormGroup>();\r\n\r\n  methodElements: ToolEntry[] = [];\r\n\r\n  constructor(private toolService: ToolService) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadMethodElements();\r\n  }\r\n\r\n  private async loadMethodElements(): Promise<void> {\r\n    this.methodElements = await this.toolService.getList();\r\n  }\r\n}\r\n","<app-method-element-group-info\r\n  [groups]=\"groups\"\r\n  [selection]=\"selection\"\r\n  [methodElements]=\"methodElements\"\r\n  methodElementName=\"Tool\"\r\n  (submitGroupsForm)=\"submitGroupsForm.emit($event)\"\r\n></app-method-element-group-info>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToolService } from '../../development-process-registry/method-elements/tool/tool.service';\r\nimport {\r\n  Tool,\r\n  ToolEntry,\r\n} from '../../development-process-registry/method-elements/tool/tool';\r\nimport { MultipleSelection } from '../../development-process-registry/development-method/multiple-selection';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { equalsListOfLists } from '../../shared/utils';\r\nimport { ModuleService } from '../../development-process-registry/module-api/module.service';\r\n\r\n@Component({\r\n  selector: 'app-tools-selection-form',\r\n  templateUrl: './tools-selection-form.component.html',\r\n  styleUrls: ['./tools-selection-form.component.css'],\r\n})\r\nexport class ToolsSelectionFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() tools: MultipleSelection<Tool>[][];\r\n\r\n  @Output() submitToolsForm = new EventEmitter<FormArray>();\r\n\r\n  toolsForm: FormGroup = this.fb.group({\r\n    tools: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  methodElements: ToolEntry[] = [];\r\n  listNames: string[] = [];\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private moduleService: ModuleService,\r\n    private toolService: ToolService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadTools();\r\n    this.changeSubscription = this.toolsForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = !equalsListOfLists(this.tools, value.tools))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.tools) {\r\n      const oldToolGroups: MultipleSelection<Tool>[][] =\r\n        changes.tools.previousValue;\r\n      const newToolGroups: MultipleSelection<Tool>[][] =\r\n        changes.tools.currentValue;\r\n      if (!equalsListOfLists(oldToolGroups, newToolGroups)) {\r\n        this.loadForm(newToolGroups);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  add(): void {\r\n    this.formArray.push(this.fb.array([]));\r\n  }\r\n\r\n  remove(index: number): void {\r\n    this.formArray.removeAt(index);\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitToolsForm.emit(this.toolsForm.get('tools') as FormArray);\r\n  }\r\n\r\n  private loadForm(tools: MultipleSelection<Tool>[][]): void {\r\n    const formArrays = tools.map((group) =>\r\n      this.fb.array(\r\n        group.map((element) =>\r\n          this.fb.group({\r\n            list: [element.list, Validators.required],\r\n            element: { value: element.element, disabled: element.multiple },\r\n            multiple: element.multiple,\r\n            multipleElements: {\r\n              value: element.multipleElements,\r\n              disabled: element.multiple,\r\n            },\r\n          })\r\n        )\r\n      )\r\n    );\r\n    this.toolsForm.setControl('tools', this.fb.array(formArrays));\r\n  }\r\n\r\n  private async loadTools(): Promise<void> {\r\n    const tools = await this.toolService.getList();\r\n    this.methodElements = tools.concat(\r\n      this.moduleService.modules.map((module) => {\r\n        return new Tool(undefined, {\r\n          name: module.name,\r\n          list: module.list,\r\n        }).toDb();\r\n      })\r\n    );\r\n    this.listNames = [\r\n      ...new Set(\r\n        this.methodElements\r\n          .map((element) => element.list)\r\n          .concat(this.moduleService.modules.map((module) => module.list))\r\n      ),\r\n    ];\r\n  }\r\n\r\n  get formArray(): FormArray {\r\n    return this.toolsForm.get('tools') as FormArray;\r\n  }\r\n\r\n  createFormGroupFactory = (): FormGroup =>\r\n    this.fb.group({\r\n      list: ['', Validators.required],\r\n      element: null,\r\n      multiple: false,\r\n      multipleElements: false,\r\n    });\r\n}\r\n","<form [formGroup]=\"toolsForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group\" formGroupName=\"tools\">\r\n    <div\r\n      *ngFor=\"\r\n        let control of formArray.controls;\r\n        let index = index;\r\n        let first = first\r\n      \"\r\n      [class.mt-3]=\"!first\"\r\n      class=\"p-3 mb-3 bg-white rounded shadow-sm\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">Group</h6>\r\n      <app-method-elements-selection-form\r\n        class=\"form-group\"\r\n        formArrayName=\"{{ index }}\"\r\n        [createFormGroupFactory]=\"createFormGroupFactory\"\r\n        [listNames]=\"listNames\"\r\n        [methodElements]=\"methodElements\"\r\n        [multipleAllowed]=\"true\"\r\n        methodElementName=\"Tool\"\r\n      ></app-method-elements-selection-form>\r\n      <div class=\"form-group d-flex\">\r\n        <button\r\n          (click)=\"remove(index)\"\r\n          type=\"button\"\r\n          class=\"btn btn-secondary ml-auto\"\r\n        >\r\n          Remove OR Group\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group d-flex\">\r\n    <button (click)=\"add()\" type=\"button\" class=\"btn btn-secondary ml-auto\">\r\n      Add OR Group\r\n    </button>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!toolsForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ToolService } from '../../development-process-registry/method-elements/tool/tool.service';\r\nimport { ModuleService } from '../../development-process-registry/module-api/module.service';\r\nimport { Module } from '../../development-process-registry/module-api/module';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  Tool,\r\n  ToolEntry,\r\n} from '../../development-process-registry/method-elements/tool/tool';\r\n\r\n@Component({\r\n  selector: 'app-tools',\r\n  templateUrl: './tools.component.html',\r\n  styleUrls: ['./tools.component.css'],\r\n})\r\nexport class ToolsComponent implements OnInit {\r\n  elementLists: { listName: string; elements: ToolEntry[] }[] = null;\r\n  listNames: string[] = [];\r\n\r\n  moduleLists: { listName: string; elements: Module[] }[] = null;\r\n\r\n  modalTool: Tool;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteToolModal', { static: true }) deleteToolModal: unknown;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private moduleService: ModuleService,\r\n    private toolService: ToolService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n    this.moduleLists = this.moduleService.getLists();\r\n  }\r\n\r\n  private load(): void {\r\n    this.toolService\r\n      .getLists()\r\n      .then((lists) => {\r\n        this.elementLists = lists;\r\n        this.listNames = this.elementLists.map((list) => list.listName);\r\n      })\r\n      .catch((error) => console.log('Load: ' + error));\r\n  }\r\n\r\n  openDeleteToolModal(tool: Tool): void {\r\n    this.modalTool = tool;\r\n    this.modalReference = this.modalService.open(this.deleteToolModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  delete(id: string): void {\r\n    this.toolService\r\n      .delete(id)\r\n      .then(() => this.load())\r\n      .catch((error) => console.log('Delete: ' + error));\r\n  }\r\n\r\n  add(form: FormGroup): void {\r\n    this.toolService\r\n      .add(form.value)\r\n      .then(() => this.load())\r\n      .catch((error) => console.log('Add: ' + error));\r\n  }\r\n}\r\n","<ng-template #deleteToolModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal (dismiss)=\"d()\" (delete)=\"delete(modalTool._id); c()\">\r\n    <div modalTitle>Delete Tool {{ modalTool.name }}</div>\r\n    You are deleting the tool {{ modalTool.name }}. This can not be undone. This\r\n    action will not delete the tool from method building blocks that are using\r\n    it.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Tools</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create Tools to use them for the definition of Method Fragments\r\n  </div>\r\n\r\n  <app-method-element-list\r\n    listTitle=\"Tools\"\r\n    [elementLists]=\"elementLists\"\r\n    (deleteElement)=\"openDeleteToolModal($event)\"\r\n  ></app-method-element-list>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Add Tool</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-method-element-form\r\n        [listNames]=\"listNames\"\r\n        (submitMethodElementForm)=\"add($event)\"\r\n      ></app-method-element-form>\r\n    </div>\r\n  </div>\r\n\r\n  <app-list-wrapper\r\n    listTitle=\"Loaded Modules\"\r\n    [loading]=\"moduleLists == null\"\r\n    [noResults]=\"moduleLists && moduleLists.length === 0\"\r\n  >\r\n    <div noResults>No modules loaded.</div>\r\n    <div\r\n      results\r\n      *ngFor=\"let list of moduleLists\"\r\n      class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n    >\r\n      <h6 class=\"border-bottom border-gray pb-2\">{{ list.listName }}</h6>\r\n      <ul class=\"list-group\">\r\n        <li class=\"list-group-item\" *ngFor=\"let module of list.elements\">\r\n          <h6>{{ module.name }}</h6>\r\n          Methods:\r\n          <ul>\r\n            <li *ngFor=\"let method of module.methodNames\">{{ method }}</li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </app-list-wrapper>\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport {\r\n  Type,\r\n  TypeInit,\r\n} from '../../development-process-registry/method-elements/type/type';\r\nimport { TypeService } from '../../development-process-registry/method-elements/type/type.service';\r\nimport { MethodElementLoaderService } from '../shared/method-element-loader.service';\r\nimport { MethodElementService } from '../../development-process-registry/method-elements/method-element.service';\r\n\r\n@Component({\r\n  selector: 'app-type',\r\n  templateUrl: './type.component.html',\r\n  styleUrls: ['./type.component.css'],\r\n  providers: [\r\n    MethodElementLoaderService,\r\n    { provide: MethodElementService, useExisting: TypeService },\r\n  ],\r\n})\r\nexport class TypeComponent {\r\n  constructor(\r\n    private typeLoaderService: MethodElementLoaderService<Type, TypeInit>,\r\n    private typeService: TypeService\r\n  ) {}\r\n\r\n  async updateValue(value: any): Promise<void> {\r\n    await this.typeService.update(this.type._id, value);\r\n  }\r\n\r\n  get type(): Type {\r\n    return this.typeLoaderService.methodElement;\r\n  }\r\n\r\n  get listNames(): string[] {\r\n    return this.typeLoaderService.listNames;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"type\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">{{ type.name }}</a>\r\n  </nav>\r\n</div>\r\n\r\n<main class=\"container\" *ngIf=\"type\">\r\n  <div class=\"alert alert-info mt-3\" role=\"alert\">\r\n    Update a Type and define its values.\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Type</h6>\r\n    <div class=\"text-muted\">\r\n      <app-method-element-form\r\n        [methodElement]=\"type\"\r\n        [listNames]=\"listNames\"\r\n        (submitMethodElementForm)=\"updateValue($event.value)\"\r\n      ></app-method-element-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  Type,\r\n  TypeEntry,\r\n} from '../../development-process-registry/method-elements/type/type';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TypeService } from '../../development-process-registry/method-elements/type/type.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { equalsList } from '../../shared/utils';\r\nimport { Selection } from '../../development-process-registry/development-method/selection';\r\n\r\n@Component({\r\n  selector: 'app-types-selection-form',\r\n  templateUrl: './types-selection-form.component.html',\r\n  styleUrls: ['./types-selection-form.component.css'],\r\n})\r\nexport class TypesSelectionFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() types: Selection<Type>[];\r\n  /**\r\n   * Whether the internal types 'initialisation' and 'generic' should be\r\n   * displayed in auto complete.\r\n   */\r\n  @Input() internalTypes: boolean = false;\r\n\r\n  @Output() submitTypesForm = new EventEmitter<FormArray>();\r\n\r\n  typesForm: FormGroup = this.fb.group({\r\n    types: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  methodElements: TypeEntry[] = [];\r\n  listNames: string[] = [];\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder, private typeService: TypeService) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadTypes();\r\n    this.changeSubscription = this.typesForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap((value) => (this.changed = !equalsList(this.types, value.types)))\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.types) {\r\n      const oldTypes: Selection<Type>[] = changes.types.previousValue;\r\n      const newTypes: Selection<Type>[] = changes.types.currentValue;\r\n      if (!equalsList(oldTypes, newTypes)) {\r\n        this.loadForm(changes.types.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitTypesForm.emit(this.typesForm.get('types') as FormArray);\r\n  }\r\n\r\n  private loadForm(types: Selection<Type>[]): void {\r\n    const formGroups = types.map((type) =>\r\n      this.fb.group({\r\n        list: [type.list, Validators.required],\r\n        element: type.element,\r\n      })\r\n    );\r\n    this.typesForm.setControl('types', this.fb.array(formGroups));\r\n  }\r\n\r\n  private async loadTypes(): Promise<void> {\r\n    this.methodElements = await this.typeService.getList();\r\n    this.listNames = [\r\n      ...new Set(this.methodElements.map((element) => element.list)),\r\n    ];\r\n    if (this.internalTypes) {\r\n      this.listNames.push('initialisation', 'generic');\r\n    }\r\n  }\r\n\r\n  createFormGroupFactory = (): FormGroup =>\r\n    this.fb.group({\r\n      list: ['', Validators.required],\r\n      element: null,\r\n    });\r\n}\r\n","<form [formGroup]=\"typesForm\" (ngSubmit)=\"submitForm()\">\r\n  <app-method-elements-selection-form\r\n    class=\"form-group\"\r\n    formArrayName=\"types\"\r\n    [createFormGroupFactory]=\"createFormGroupFactory\"\r\n    [listNames]=\"listNames\"\r\n    [methodElements]=\"methodElements\"\r\n    methodElementName=\"Type\"\r\n  ></app-method-elements-selection-form>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!typesForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TypeService } from '../../development-process-registry/method-elements/type/type.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  Type,\r\n  TypeEntry,\r\n} from '../../development-process-registry/method-elements/type/type';\r\n\r\n@Component({\r\n  selector: 'app-types',\r\n  templateUrl: './types.component.html',\r\n  styleUrls: ['./types.component.css'],\r\n})\r\nexport class TypesComponent implements OnInit {\r\n  elementLists: { listName: string; elements: TypeEntry[] }[] = null;\r\n  listNames: string[] = [];\r\n\r\n  modalType: Type;\r\n  private modalReference: NgbModalRef;\r\n\r\n  @ViewChild('deleteTypeModal', { static: true }) deleteTypeModal: unknown;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private typeService: TypeService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.load();\r\n  }\r\n\r\n  private async load(): Promise<void> {\r\n    this.elementLists = await this.typeService.getLists();\r\n    this.listNames = this.elementLists.map((list) => list.listName);\r\n  }\r\n\r\n  openDeleteTypeModal(type: Type): void {\r\n    this.modalType = type;\r\n    this.modalReference = this.modalService.open(this.deleteTypeModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  async delete(id: string): Promise<void> {\r\n    await this.typeService.delete(id);\r\n    await this.load();\r\n  }\r\n\r\n  async add(form: FormGroup): Promise<void> {\r\n    await this.typeService.add(form.value);\r\n    await this.load();\r\n  }\r\n}\r\n","<ng-template #deleteTypeModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal (dismiss)=\"d()\" (delete)=\"delete(modalType._id); c()\">\r\n    <div modalTitle>Delete Type {{ modalType.name }}</div>\r\n    You are deleting the type {{ modalType.name }}. This can not be undone. This\r\n    action will not delete the type from method building blocks that are using\r\n    it.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Types</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create Types to use them for the definition of Method Fragments\r\n  </div>\r\n\r\n  <app-method-element-list\r\n    listTitle=\"Types\"\r\n    [elementLists]=\"elementLists\"\r\n    (deleteElement)=\"openDeleteTypeModal($event)\"\r\n  ></app-method-element-list>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Add Type</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <app-method-element-form\r\n        [listNames]=\"listNames\"\r\n        (submitMethodElementForm)=\"add($event)\"\r\n      ></app-method-element-form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  NgbCarousel,\r\n  NgbPagination,\r\n  NgbSlideEvent,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-enaction-explanation',\r\n  templateUrl: './enaction-explanation.component.html',\r\n  styleUrls: ['./enaction-explanation.component.css'],\r\n})\r\nexport class EnactionExplanationComponent {\r\n  @ViewChild(NgbCarousel) carousel: NgbCarousel;\r\n  @ViewChild(NgbPagination) pagination: NgbPagination;\r\n\r\n  updateCarousel(tab: number) {\r\n    this.carousel.select(String(tab));\r\n  }\r\n\r\n  updatePagination(slideEvent: NgbSlideEvent) {\r\n    this.pagination.selectPage(Number(slideEvent.current));\r\n  }\r\n}\r\n","<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">\r\n    Explanation of the Situational Business Model Developer (SBMD)\r\n  </h6>\r\n  <p>\r\n    The Situational Business Model Developer that allows the enaction of\r\n    situation-specific Business Model Development Methods. It uses the Method\r\n    Modeler together with the Feature Modeler to support the business modeler in\r\n    the enaction. The business modeler is guided through the method in a kanban\r\n    board and also sees the enacted method.\r\n  </p>\r\n\r\n  <p class=\"mb-0\">\r\n    Additionally, the Situational Business Model Developer redirects the\r\n    business developer to the correct locations in the Feature Modeler to\r\n    support the creation of different canvases, e.g., business model canvas and\r\n    value proposition canvas.\r\n  </p>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Execution Steps</h6>\r\n\r\n    <ngb-carousel\r\n      interval=\"0\"\r\n      [showNavigationArrows]=\"false\"\r\n      [showNavigationIndicators]=\"false\"\r\n      (slide)=\"updatePagination($event)\"\r\n    >\r\n      <ng-template ngbSlide id=\"1\">\r\n        <figure class=\"figure\">\r\n          <img\r\n            src=\"assets/create_running_method.png\"\r\n            alt=\"Create running method\"\r\n            class=\"carousel-image figure-img\"\r\n          />\r\n          <figcaption class=\"figure-caption\">\r\n            1. Create a running method\r\n          </figcaption>\r\n        </figure>\r\n      </ng-template>\r\n      <ng-template ngbSlide id=\"2\">\r\n        <figure class=\"figure\">\r\n          <img\r\n            src=\"assets/kanban_board.png\"\r\n            alt=\"Kanban board to manage the enaction\"\r\n            class=\"carousel-image figure-img\"\r\n          />\r\n          <figcaption class=\"figure-caption\">\r\n            2. Manage the enaction in a kanban board\r\n          </figcaption>\r\n        </figure>\r\n      </ng-template>\r\n      <ng-template ngbSlide id=\"3\">\r\n        <figure class=\"figure\">\r\n          <img\r\n            src=\"assets/execute_method.png\"\r\n            alt=\"The building block execution page\"\r\n            class=\"carousel-image figure-img\"\r\n          />\r\n          <figcaption class=\"figure-caption\">\r\n            3. Execute building blocks\r\n          </figcaption>\r\n        </figure>\r\n      </ng-template>\r\n    </ngb-carousel>\r\n\r\n    <ngb-pagination\r\n      aria-label=\"Controls for the above images\"\r\n      class=\"d-flex justify-content-center\"\r\n      [collectionSize]=\"3\"\r\n      [pageSize]=\"1\"\r\n      (pageChange)=\"updateCarousel($event)\"\r\n    ></ngb-pagination>\r\n\r\n    <p class=\"mt-2\">Information about the execution steps:</p>\r\n\r\n    <ol class=\"mb-0\">\r\n      <li>\r\n        <strong>Create a running method:</strong> In the first step, an business\r\n        developer has to create a running method by selecting a method to enact\r\n        and giving it a name.\r\n      </li>\r\n      <li>\r\n        <strong>Manage the enaction in a kanban board:</strong> In a kanban\r\n        board it is visible which building blocks are currently ready to be\r\n        executed, are executed, and were executed.\r\n      </li>\r\n      <li>\r\n        <strong>Execute building blocks:</strong> On a page for the execution of\r\n        building blocks an overview of a building block is given and the steps\r\n        to execute are shown. On this page it is also possible to communicate\r\n        with other stakeholders through comments.\r\n      </li>\r\n    </ol>\r\n  </div>\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  NgbCarousel,\r\n  NgbPagination,\r\n  NgbSlideEvent,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-feature-modeler-explanation',\r\n  templateUrl: './feature-modeler-explanation.component.html',\r\n  styleUrls: ['./feature-modeler-explanation.component.css'],\r\n})\r\nexport class FeatureModelerExplanationComponent {\r\n  @ViewChild(NgbCarousel) carousel: NgbCarousel;\r\n  @ViewChild(NgbPagination) pagination: NgbPagination;\r\n\r\n  updateCarousel(tab: number) {\r\n    this.carousel.select(String(tab));\r\n  }\r\n\r\n  updatePagination(slideEvent: NgbSlideEvent) {\r\n    this.pagination.selectPage(Number(slideEvent.current));\r\n  }\r\n}\r\n","<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">\r\n    Explanation of the Model Engine\r\n  </h6>\r\n  <p>\r\n    The Model Engine is a tool to describe Business Models through a combination\r\n    of the Business Model Canvas (BMC) and a Software Product Line (SPL). We\r\n    call this concept Business Model Decision Line (BMDL), where each feature\r\n    describes a single business model decision. Features can be ordered in\r\n    hierarchies and marked as mandatory or optional for the business models.\r\n    Moreover, there can be Or (at least one sub-feature is selected) and\r\n    Alternate (exactly one sub-feature is selected) relationships between a\r\n    parent and a child feature. To refine the business models, cross-tree\r\n    constraints for requiring and excluding dependencies can be made.\r\n  </p>\r\n\r\n  <p>\r\n    The current state of the tool allows the creation, import and export of\r\n    canvas building blocks. The tool guides the user through the different steps\r\n    to create a canvas building block and can show errors if a canvas building\r\n    block does not allow the creation of consistent derived business models due\r\n    to too restrictive constraints. After creating or importing canvas building\r\n    blocks the user is able to merge these blocks into composed models.\r\n  </p>\r\n\r\n  <p>\r\n    Canvas building blocks support the creation of patterns and example business\r\n    models. These patterns and examples can be used in composed models later to\r\n    compare derived business models with them or to give hints about possible\r\n    patterns to the user.\r\n  </p>\r\n\r\n  <p>\r\n    New business model decisions of single business models are synchronized with\r\n    the corresponding composed model to ensure consistency. Moreover, the\r\n    conformance of business models can be checked with the composed model and\r\n    occurring conformance errors are explained. Additionally the tool checks for\r\n    strengths and weaknesses of the business model and gives hints about\r\n    patterns and possible supportive features. It is also possible to compare\r\n    the business model with other business models or to show used patterns.\r\n  </p>\r\n</div>\r\n\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">Execution Steps</h6>\r\n\r\n  <ngb-carousel\r\n    interval=\"0\"\r\n    [showNavigationArrows]=\"false\"\r\n    [showNavigationIndicators]=\"false\"\r\n    (slide)=\"updatePagination($event)\"\r\n  >\r\n    <ng-template ngbSlide id=\"1\">\r\n      <figure class=\"figure\">\r\n        <img\r\n          src=\"assets/bmdl_expert.png\"\r\n          alt=\"Canvas building block page\"\r\n          class=\"carousel-image figure-img\"\r\n        />\r\n        <figcaption class=\"figure-caption\">\r\n          1. Create the canvas building block by following the steps on the\r\n          canvas building block page\r\n        </figcaption>\r\n      </figure>\r\n    </ng-template>\r\n    <ng-template ngbSlide id=\"2\">\r\n      <figure class=\"figure\">\r\n        <img\r\n          src=\"assets/bmdl_company.png\"\r\n          alt=\"Composed Model page\"\r\n          class=\"carousel-image figure-img\"\r\n        />\r\n        <figcaption class=\"figure-caption\">\r\n          2. Create the composed model by merging canvas building blocks\r\n        </figcaption>\r\n      </figure>\r\n    </ng-template>\r\n    <ng-template ngbSlide id=\"3\">\r\n      <figure class=\"figure\">\r\n        <img\r\n          src=\"assets/bmdl_business.png\"\r\n          alt=\"Business model page\"\r\n          class=\"carousel-image figure-img\"\r\n        />\r\n        <figcaption class=\"figure-caption\">\r\n          3. Derive Business Models when enacting a method\r\n        </figcaption>\r\n      </figure>\r\n    </ng-template>\r\n  </ngb-carousel>\r\n\r\n  <ngb-pagination\r\n    aria-label=\"Controls for the above images\"\r\n    class=\"d-flex justify-content-center\"\r\n    [collectionSize]=\"3\"\r\n    [pageSize]=\"1\"\r\n    (pageChange)=\"updateCarousel($event)\"\r\n  ></ngb-pagination>\r\n\r\n  <p class=\"mt-2\">Information about the execution steps:</p>\r\n\r\n  <ol>\r\n    <li>\r\n      <strong>Create / Import Canvas Building Block:</strong> In the first step,\r\n      the user has to create or import a canvas building block with expert\r\n      knowledge. If creating such a model the conformance checking process can\r\n      be supported by defining mandatory and optional features, features that\r\n      have at least one subfeature (OR), features that have exactly one\r\n      subfeature (XOR) and creating dependencies (requires, excludes) between\r\n      the features. To support the hints the tool can give users of the canvas\r\n      building block, it is possible to define dependencies (supports, hurts)\r\n      that are later shown as hints, strengths and weaknesses. To support\r\n      pattern hints it is possible to define patterns as instances of the canvas\r\n      building block. To give users of the canvas building block examples of\r\n      possible business models, which they can later use to compare their\r\n      derived business models with, it is possible to define examples as\r\n      instances of the canvas building block.\r\n    </li>\r\n    <li>\r\n      <strong>Create Composed Model:</strong> In the second step, a method\r\n      engineer can create a composed model. While creating it the developer\r\n      selects canvas building blocks that should be merged into the composed\r\n      model and later merge it manually into the composed model. After that the\r\n      method engineer can edit the composed model and adapt it. In this step it\r\n      is also possible to see conflicting requirements that lead to the\r\n      impossibility to create conform derived business models.\r\n    </li>\r\n    <li>\r\n      <strong>Derive Business Models:</strong> In the third step, the business\r\n      developer can derive different business models from the composed model.\r\n      Here, he can use the existing features from the composed model or add new\r\n      business model decisions. These new feature decisions will be added to the\r\n      composed model to save consistency. Here it also possible to check the\r\n      conformance between the composed model and the business model. Conformance\r\n      errors will be explained to support the resolution. It is also possible to\r\n      show weaknesses (due to hurts cross-tree relation) and strengths (due to\r\n      supports cross-tree relation), hints about supportive features, hints\r\n      about patterns and used patterns. Moreover, it is possible to compare with\r\n      patterns of canvas building blocks. It is also possible to compare the\r\n      business model with other business models of the same composed model or\r\n      with examples of the merged canvas building blocks (if merged completely).\r\n      The corresponding views are automatically accessed, when the business\r\n      developer enacts a method.\r\n    </li>\r\n  </ol>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../database/auth.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  form = this.fb.group({\r\n    username: ['', Validators.required],\r\n    password: ['', Validators.required],\r\n  });\r\n  errorReason: string = null;\r\n\r\n  expired = false;\r\n  passwordChanged = false;\r\n  dbError = false;\r\n\r\n  private loginSubscription: Subscription;\r\n  private querySubscription: Subscription;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.modalService.dismissAll();\r\n    this.querySubscription = this.route.queryParamMap.subscribe(\r\n      (queryParamMap) => {\r\n        this.expired =\r\n          queryParamMap.has('expired') &&\r\n          queryParamMap.get('expired') === 'true';\r\n        this.passwordChanged =\r\n          queryParamMap.has('passwordChanged') &&\r\n          queryParamMap.get('passwordChanged') === 'true';\r\n        this.dbError =\r\n          queryParamMap.has('dbError') &&\r\n          queryParamMap.get('dbError') === 'true';\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.loginSubscription) {\r\n      this.loginSubscription.unsubscribe();\r\n    }\r\n    if (this.querySubscription) {\r\n      this.querySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async closeAlert() {\r\n    await this.router.navigate([]);\r\n  }\r\n\r\n  async login() {\r\n    if (this.loginSubscription) {\r\n      this.loginSubscription.unsubscribe();\r\n    }\r\n    this.errorReason = null;\r\n    this.loginSubscription = this.authService\r\n      .login(this.form.get('username').value, this.form.get('password').value)\r\n      .subscribe(\r\n        () => (this.errorReason = null),\r\n        (error) => {\r\n          console.error(error);\r\n          if (error.message != null) {\r\n            this.errorReason = error.message;\r\n          }\r\n          if (error.error != null && error.error.reason != null) {\r\n            this.errorReason = error.error.reason;\r\n          }\r\n        }\r\n      );\r\n  }\r\n}\r\n","<main role=\"main\">\r\n  <ngb-alert\r\n    *ngIf=\"expired\"\r\n    type=\"warning\"\r\n    class=\"container\"\r\n    (closed)=\"closeAlert()\"\r\n  >\r\n    The session has expired, because of inactivity.\r\n  </ngb-alert>\r\n  <ngb-alert\r\n    *ngIf=\"passwordChanged\"\r\n    type=\"success\"\r\n    class=\"container\"\r\n    (closed)=\"closeAlert()\"\r\n  >\r\n    The password has been changed successfully.\r\n  </ngb-alert>\r\n  <ngb-alert\r\n    *ngIf=\"dbError\"\r\n    type=\"danger\"\r\n    class=\"container\"\r\n    (closed)=\"closeAlert()\"\r\n  >\r\n    Critical error in database.\r\n  </ngb-alert>\r\n  <div class=\"m-auto my-3 p-3 bg-white rounded shadow-sm\" style=\"width: 20rem\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Login</h6>\r\n    <div class=\"text-muted\">\r\n      <form [formGroup]=\"form\" (submit)=\"login()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"inputUser\">Username</label>\r\n          <input\r\n            class=\"form-control\"\r\n            id=\"inputUser\"\r\n            formControlName=\"username\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"passwordInput\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"passwordInput\"\r\n            aria-describedby=\"passwordInput\"\r\n            formControlName=\"password\"\r\n          />\r\n          <small id=\"passwordInputHelp\" class=\"form-text text-muted\">\r\n            This is <strong>not</strong> your IMT Password.\r\n          </small>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary\"\r\n            [disabled]=\"!form.valid\"\r\n          >\r\n            Login\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <small class=\"text-danger\" *ngIf=\"errorReason != null\">{{\r\n            errorReason\r\n          }}</small>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  NgbCarousel,\r\n  NgbPagination,\r\n  NgbSlideEvent,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-method-modeler-explanation',\r\n  templateUrl: './method-modeler-explanation.component.html',\r\n  styleUrls: ['./method-modeler-explanation.component.css'],\r\n})\r\nexport class MethodModelerExplanationComponent {\r\n  @ViewChild(NgbCarousel) carousel: NgbCarousel;\r\n  @ViewChild(NgbPagination) pagination: NgbPagination;\r\n\r\n  updateCarousel(tab: number) {\r\n    this.carousel.select(String(tab));\r\n  }\r\n\r\n  updatePagination(slideEvent: NgbSlideEvent) {\r\n    this.pagination.selectPage(Number(slideEvent.current));\r\n  }\r\n}\r\n","<!-- Show Explanation -->\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">\r\n    Explanation of the BMDL Modeler\r\n  </h6>\r\n  <p>\r\n    The BMDL Method Modeler is a tool to describe situation-specific Business\r\n    Model Development Methods. Business Model Development Methods can be\r\n    described by combining Method Patterns and inserting Method Building Blocks\r\n    into them. Method Patterns and Method Building Blocks are constructed from\r\n    Method Elements. Method Elements are Artifacts, Situational Factors,\r\n    Stakeholders, Tools and Types. Types are special, as they are used to\r\n    determine which Method Building Blocks or Method Patterns can be inserted\r\n    into activities of Method Patterns.\r\n  </p>\r\n\r\n  <p class=\"mb-0\">\r\n    Additionally, Method Building Blocks allow to select abstract list types for\r\n    input/output Artifacts, Stakeholders and Tools. The user can later decide\r\n    when developing the Business Model Development Methods, which concrete\r\n    Method Element to use, e.g. an expert selected the abstract list type Users\r\n    for stakeholders and the business developer can choose whether these are\r\n    Customers, Experts or Early Adopters. Furthermore, the tool allows to define\r\n    that a user is later able to select multiple instances of an abstract list\r\n    type, e.g., in the example above, Customers and Experts. It is also possible\r\n    to select between different Groups of input artifacts, output artifacts and\r\n    Stakeholders.\r\n  </p>\r\n</div>\r\n\r\n<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">Execution Steps</h6>\r\n\r\n  <ngb-carousel\r\n    interval=\"0\"\r\n    [showNavigationArrows]=\"false\"\r\n    [showNavigationIndicators]=\"false\"\r\n    (slide)=\"updatePagination($event)\"\r\n  >\r\n    <ng-template ngbSlide id=\"1\">\r\n      <figure class=\"figure\">\r\n        <img\r\n          src=\"assets/situational-factor.png\"\r\n          alt=\"Situational factor page\"\r\n          class=\"carousel-image figure-img\"\r\n        />\r\n        <figcaption class=\"figure-caption\">\r\n          1. Create Method Elements (in Picture: a situational factor)\r\n        </figcaption>\r\n      </figure>\r\n    </ng-template>\r\n    <ng-template ngbSlide id=\"2\">\r\n      <figure class=\"figure\">\r\n        <img\r\n          src=\"assets/building-block.png\"\r\n          alt=\"Method Building Block page\"\r\n          class=\"carousel-image figure-img\"\r\n        />\r\n        <figcaption class=\"figure-caption\">\r\n          2. Create Method Building Blocks\r\n        </figcaption>\r\n      </figure>\r\n    </ng-template>\r\n    <ng-template ngbSlide id=\"3\">\r\n      <figure class=\"figure\">\r\n        <img\r\n          src=\"assets/pattern.png\"\r\n          alt=\"Method Pattern page\"\r\n          class=\"carousel-image figure-img\"\r\n        />\r\n        <figcaption class=\"figure-caption\">\r\n          3. Create Method Patterns\r\n        </figcaption>\r\n      </figure>\r\n    </ng-template>\r\n    <ng-template ngbSlide id=\"4\">\r\n      <figure class=\"figure\">\r\n        <img\r\n          src=\"assets/process.png\"\r\n          alt=\"Business Model Development Method page\"\r\n          class=\"carousel-image figure-img\"\r\n        />\r\n        <figcaption class=\"figure-caption\">\r\n          4. Create Business Model Development Methods\r\n        </figcaption>\r\n      </figure>\r\n    </ng-template>\r\n  </ngb-carousel>\r\n\r\n  <ngb-pagination\r\n    aria-label=\"Controls for the above images\"\r\n    class=\"d-flex justify-content-center\"\r\n    [collectionSize]=\"4\"\r\n    [pageSize]=\"1\"\r\n    (pageChange)=\"updateCarousel($event)\"\r\n  ></ngb-pagination>\r\n\r\n  <p class=\"mt-2\">Information about the execution steps:</p>\r\n\r\n  <ol class=\"mb-0\">\r\n    <li>\r\n      <strong>Create Method Elements:</strong> In the first step, an expert has\r\n      to create Method Elements that are later used to define Method Building\r\n      Blocks and Method Patterns. Method Elements are Artifacts, Situational\r\n      Factors, Stakeholders, Tools and Types. Every Method Element belongs to a\r\n      list of other Method Elements to group them. Later, when creating Method\r\n      Building Blocks or Method Patterns, it is possible to reference such an\r\n      abstract list of Method Elements to allow the user to select a fitting\r\n      concrete Method Element when defining the Business Model Development\r\n      Method. Special Method Elements are Types and Situational Factors. Types\r\n      are used to filter which Method Building Blocks and Method Patterns can be\r\n      used together and Situational Factors are used to analyze whether the used\r\n      Method Patterns and Method Building Blocks fit to the development context.\r\n      Additionally, Situational Factors can define values. In this tool examples\r\n      for Method Elements are already created.\r\n    </li>\r\n    <li>\r\n      <strong>Create Method Building Blocks:</strong> In the second step, an\r\n      expert can create Method Building Blocks. Method Building Blocks consist\r\n      of input and output artifacts, involved stakeholders and tools.\r\n      Additionally, they have types and situational factors. Examples for Method\r\n      Building Blocks are already defined in this tool.\r\n    </li>\r\n    <li>\r\n      <strong>Create Method Patterns:</strong> In the third step, the expert can\r\n      create Method Patterns. They define the structure of the later Business\r\n      Model Development Methods. Method Patterns have types. A special type is\r\n      <i>initialisation</i> that defines that the pattern can be used as a\r\n      starting point. Additionally, a Method Pattern defines activities. The\r\n      expert can choose whether only Method Building Blocks or Method Building\r\n      Blocks and Method Patterns can be inserted into a single activity when the\r\n      Business Model Development Method is defined. Examples for Method Patterns\r\n      are already included in this tool.\r\n    </li>\r\n    <li>\r\n      <strong>Create Business Model Development Methods</strong> In the last\r\n      step, a business developer can create Business Model Development Methods.\r\n      To do this, the business developer first has to choose a Method Pattern as\r\n      a starting point. Then, it is possible to insert fitting Method Building\r\n      Blocks or Method Patterns into the activities of the Method Pattern.\r\n      Additionally, the business developer can use situational factors to define\r\n      the development context. This context is checked against the internal\r\n      situational factors of the used Method Patterns and Method Building Blocks\r\n      and mismatches are reported. Furthermore, the business developer can\r\n      select per Method Building Block how the Method Building Block should be\r\n      used, e.g., the business developer can select from lists which tools to\r\n      use if the Method Building Block was created with an abstract definition.\r\n    </li>\r\n  </ol>\r\n</div>\r\n","import { DatabaseModelPart } from '../database/database-model-part';\r\nimport { Equality } from '../shared/equality';\r\nimport { DatabaseEntry, DatabaseInit } from '../database/database-entry';\r\n\r\nexport interface AuthorInit extends DatabaseInit {\r\n  name?: string;\r\n  company?: string;\r\n  email?: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface AuthorEntry extends DatabaseEntry {\r\n  name: string;\r\n  company: string;\r\n  email: string;\r\n  website: string;\r\n}\r\n\r\nexport class Author implements AuthorInit, Equality<Author>, DatabaseModelPart {\r\n  // JSON Schema (stored)\r\n  name: string;\r\n  company: string;\r\n  email: string;\r\n  website: string;\r\n\r\n  constructor(entry: AuthorEntry | undefined, init: AuthorInit | undefined) {\r\n    const element = entry ?? init;\r\n    this.name = element.name;\r\n    this.company = element.company;\r\n    this.email = element.email;\r\n    this.website = element.website;\r\n  }\r\n\r\n  /**\r\n   * Update this author with new values\r\n   *\r\n   * @param author the new values of this author (values will be copied to the current object)\r\n   */\r\n  update(author: Partial<AuthorInit>): void {\r\n    Object.assign(this, author);\r\n  }\r\n\r\n  toDb(): AuthorEntry {\r\n    return {\r\n      name: this.name,\r\n      company: this.company,\r\n      email: this.email,\r\n      website: this.website,\r\n    };\r\n  }\r\n\r\n  equals(other: Author): boolean {\r\n    if (other == null) {\r\n      return false;\r\n    }\r\n    return (\r\n      this.name === other.name &&\r\n      this.company === other.company &&\r\n      this.email === other.email &&\r\n      this.website === other.website\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Convert a name to an id\r\n *\r\n * @param name the name\r\n */\r\nexport function nameToId(name: string): string {\r\n  return name.toLowerCase().replace(/ /g, '-');\r\n}\r\n\r\n/**\r\n * Get the next unique id by name\r\n *\r\n * @param name the name to get the id from\r\n * @param currentIdList all ids currently used\r\n */\r\nexport function getId(name: string, currentIdList: string[]): string {\r\n  const id = nameToId(name);\r\n  const ids = currentIdList.filter((i) => i.startsWith(id));\r\n  if (ids.length === 0) {\r\n    return id;\r\n  }\r\n  const currentCount = Math.max(\r\n    ...ids\r\n      .map((i) => i.substring(id.length + 1))\r\n      .filter((i) => /^[0-9]+$/.test(i))\r\n      .map((i) => parseInt(i, 10)),\r\n    0\r\n  );\r\n  return id + '-' + (currentCount + 1);\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { InternalRoles, UserService } from '../user.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nclass NavItem {\r\n  name: string;\r\n  route?: string[];\r\n  roles: string[];\r\n}\r\n\r\nclass RootNavItem extends NavItem {\r\n  submenu?: RootNavItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n  navItems: RootNavItem[] = [\r\n    {\r\n      name: 'Method Enactment',\r\n      route: ['runningprocess'],\r\n      roles: [InternalRoles.BUSINESSDEVELOPER],\r\n    },\r\n    {\r\n      name: 'Artifacts',\r\n      route: ['concreteArtifacts'],\r\n      roles: [InternalRoles.BUSINESSDEVELOPER],\r\n    },\r\n    {\r\n      name: 'Method Composition',\r\n      route: ['bmprocess'],\r\n      roles: [InternalRoles.EXPERT],\r\n    },\r\n    {\r\n      name: 'Method Repository',\r\n      submenu: [\r\n        {\r\n          name: 'Method Patterns',\r\n          route: ['process'],\r\n          roles: [InternalRoles.EXPERT],\r\n        },\r\n        {\r\n          name: 'Method Building Blocks',\r\n          route: ['methods'],\r\n          roles: [InternalRoles.EXPERT],\r\n        },\r\n        {\r\n          name: 'Method Elements',\r\n          route: ['methodElements'],\r\n          roles: [InternalRoles.EXPERT],\r\n        },\r\n      ],\r\n      roles: [InternalRoles.EXPERT],\r\n    },\r\n    {\r\n      name: 'Model Composition',\r\n      route: ['companyModels'],\r\n      roles: [InternalRoles.EXPERT],\r\n    },\r\n    {\r\n      name: 'Canvas Model Repository',\r\n      submenu: [\r\n        {\r\n          name: 'Canvas Building Blocks',\r\n          route: ['expertModels'],\r\n          roles: [InternalRoles.EXPERT],\r\n        },\r\n        {\r\n          name: 'Canvas Models',\r\n          route: ['canvas', 'definitions'],\r\n          roles: [InternalRoles.EXPERT],\r\n        },\r\n        {\r\n          name: 'Canvas Elements',\r\n          route: ['canvasElements'],\r\n          roles: [InternalRoles.EXPERT],\r\n        },\r\n      ],\r\n      roles: [InternalRoles.EXPERT],\r\n    },\r\n    {\r\n      name: 'Templates',\r\n      route: ['whiteboard', 'templates'],\r\n      roles: [InternalRoles.EXPERT],\r\n    },\r\n    {\r\n      name: 'Explanation',\r\n      route: ['explanation'],\r\n      roles: [InternalRoles.EXPERT, InternalRoles.BUSINESSDEVELOPER],\r\n    },\r\n  ];\r\n  navExpanded = false;\r\n\r\n  roleForm = this.fb.group({\r\n    role: [],\r\n  });\r\n\r\n  private roleSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.roleForm.setValue({ role: this.userService.activatedRole });\r\n    this.roleSubscription = this.roleForm\r\n      .get('role')\r\n      .valueChanges.subscribe((role) => {\r\n        this.userService.activatedRole = role;\r\n        void this.router.navigate(['/', 'start']);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.roleSubscription) {\r\n      this.roleSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  get roles(): InternalRoles[] {\r\n    return Object.values(InternalRoles);\r\n  }\r\n\r\n  get currentRole(): InternalRoles {\r\n    return this.userService.activatedRole;\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-xl fixed-top navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand mr-auto mr-xl-0\" [routerLink]=\"['/']\">SBMD</a>\r\n  <button\r\n    class=\"navbar-toggler p-0 border-0\"\r\n    type=\"button\"\r\n    aria-controls=\"bmdlNavbar\"\r\n    [attr.aria-expanded]=\"navExpanded\"\r\n    aria-label=\"Toggle navigation\"\r\n    (click)=\"navExpanded = !navExpanded\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div\r\n    [class.open]=\"navExpanded\"\r\n    class=\"navbar-collapse offcanvas-collapse\"\r\n    id=\"bmdlNavbar\"\r\n  >\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <ng-container *ngFor=\"let navItem of navItems\">\r\n        <ng-container *ngIf=\"navItem.roles.includes(currentRole)\">\r\n          <li\r\n            *ngIf=\"!navItem.submenu\"\r\n            class=\"nav-item\"\r\n            routerLinkActive=\"active\"\r\n            #itemActive=\"routerLinkActive\"\r\n          >\r\n            <a class=\"nav-link text-nowrap\" [routerLink]=\"navItem.route\">\r\n              {{ navItem.name }}\r\n              <span *ngIf=\"itemActive.isActive\" class=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li *ngIf=\"navItem.submenu\" class=\"nav-item\" ngbDropdown>\r\n            <a\r\n              class=\"nav-link\"\r\n              type=\"button\"\r\n              id=\"dropdown\"\r\n              ngbDropdownToggle\r\n              role=\"button\"\r\n            >\r\n              {{ navItem.name }}\r\n            </a>\r\n            <div ngbDropdownMenu aria-labelledby=\"dropdown\">\r\n              <a\r\n                *ngFor=\"let item of navItem.submenu\"\r\n                [routerLink]=\"item.route\"\r\n                ngbDropdownItem\r\n                routerLinkActive=\"active\"\r\n                #active=\"routerLinkActive\"\r\n                >{{ item.name }}\r\n                <span *ngIf=\"active.isActive\" class=\"sr-only\"\r\n                  >(current)</span\r\n                ></a\r\n              >\r\n            </div>\r\n          </li>\r\n        </ng-container>\r\n      </ng-container>\r\n    </ul>\r\n    <form [formGroup]=\"roleForm\" class=\"form-inline my-2 my-xl-0\">\r\n      <label for=\"roleSelector\" class=\"mr-2 text-light\">Role</label>\r\n      <select formControlName=\"role\" class=\"form-control\" id=\"roleSelector\">\r\n        <option *ngFor=\"let role of roles\" [ngValue]=\"role\">{{ role }}</option>\r\n      </select>\r\n    </form>\r\n  </div>\r\n</nav>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from '../database/auth.service';\r\nimport { environment } from '../../environments/environment';\r\nimport { PouchdbService } from '../database/pouchdb.service';\r\nimport { saveAs } from 'file-saver';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  ValidationErrors,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ImportExportService } from '../database/import-export.service';\r\n\r\n@Component({\r\n  selector: 'app-options',\r\n  templateUrl: './options.component.html',\r\n  styleUrls: ['./options.component.css'],\r\n})\r\nexport class OptionsComponent {\r\n  passwordChangeError = false;\r\n  passwordChangeForbidden = false;\r\n\r\n  readonly verifyString = 'resetDB';\r\n  file?: File;\r\n  form = this.fb.group({\r\n    file: [null, Validators.required],\r\n    verify: [\r\n      '',\r\n      [\r\n        Validators.required,\r\n        (control: AbstractControl): ValidationErrors | null => {\r\n          return control.value !== this.verifyString\r\n            ? { notVerified: true }\r\n            : null;\r\n        },\r\n      ],\r\n    ],\r\n  });\r\n  importError?: string;\r\n\r\n  @ViewChild('importModal', { static: true }) importModal: unknown;\r\n  private modalReference?: NgbModalRef;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private importExportService: ImportExportService,\r\n    private modalService: NgbModal,\r\n    private pouchdbService: PouchdbService\r\n  ) {}\r\n\r\n  changePassword(newPassword: string): void {\r\n    this.passwordChangeError = false;\r\n    this.passwordChangeForbidden = false;\r\n    this.authService.changePassword(newPassword).subscribe(\r\n      () => console.log('Password changed.'),\r\n      (error) => {\r\n        console.error(error);\r\n        console.log('Password NOT changed.');\r\n        if (error.status === 403) {\r\n          this.passwordChangeForbidden = true;\r\n        } else {\r\n          this.passwordChangeError = true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  openImportDatabase(): void {\r\n    this.modalReference = this.modalService.open(this.importModal, {\r\n      size: 'lg',\r\n    });\r\n  }\r\n\r\n  fileChange(event: Event): void {\r\n    this.importError = null;\r\n    const fileInput = event.target as HTMLInputElement;\r\n    this.file = fileInput.files[0];\r\n  }\r\n\r\n  async submitForm(): Promise<void> {\r\n    try {\r\n      await this.importExportService.importDatabase(this.file);\r\n    } catch (error) {\r\n      if (typeof error === 'string') {\r\n        this.importError = error;\r\n      } else if (error instanceof Error) {\r\n        this.importError = error.message;\r\n      } else {\r\n        this.importError =\r\n          \"Unknown Error. See browser's console for more info.\";\r\n      }\r\n      throw error;\r\n    }\r\n    this.modalReference!.close();\r\n  }\r\n\r\n  async exportDatabase(): Promise<void> {\r\n    saveAs(await this.importExportService.exportDatabase(), 'db.json');\r\n  }\r\n\r\n  get username(): string | undefined {\r\n    return this.authService.username;\r\n  }\r\n\r\n  isLocalDatabase(): boolean {\r\n    return environment.localDatabase === true;\r\n  }\r\n\r\n  /**\r\n   * Reset the local database.\r\n   */\r\n  async resetDatabase(): Promise<void> {\r\n    console.log('Delete Database');\r\n    await this.pouchdbService.clearDatabase();\r\n    console.log('Add default data');\r\n    await this.pouchdbService.addDefaultData();\r\n  }\r\n\r\n  get verifyControl(): AbstractControl {\r\n    return this.form.get('verify');\r\n  }\r\n}\r\n","<ng-template #importModal let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Import Database</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"alert alert-danger\">\r\n      This step will do the following:\r\n      <ol>\r\n        <li>\r\n          <strong>Delete all documents in the current database</strong><br />\r\n          This will remove everything that is in the database. After this step\r\n          the database is empty. <strong>This can not be undone.</strong>\r\n        </li>\r\n        <li>\r\n          <strong>Import the file</strong><br />\r\n          Then the given file will be imported. On any error the database will\r\n          <strong>remain empty</strong>. So please have a backup of the current\r\n          state.\r\n        </li>\r\n      </ol>\r\n      You should be really sure when executing this step. To confirm this step\r\n      enter \"{{ verifyString }}\" into the verify input field.<br />\r\n      Again, this step <strong>can not be undone</strong>.\r\n    </div>\r\n    <div class=\"text-muted pt-3\">\r\n      <form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n        <div class=\"form-group form-row\">\r\n          <label for=\"file\" class=\"col-sm-4 col-form-label\">File</label>\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"file\"\r\n              class=\"form-control\"\r\n              [class.is-invalid]=\"importError != null\"\r\n              id=\"file\"\r\n              aria-describedby=\"fileErrorDescription\"\r\n              formControlName=\"file\"\r\n              (change)=\"fileChange($event)\"\r\n            />\r\n            <div id=\"fileErrorDescription\" class=\"invalid-feedback\">\r\n              {{ importError }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group form-row\">\r\n          <label for=\"inputVerify\" class=\"col-sm-4 col-form-label\"\r\n            >Verify</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              [class.is-invalid]=\"verifyControl.invalid\"\r\n              id=\"inputVerify\"\r\n              formControlName=\"verify\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group form-row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              [disabled]=\"!form.valid\"\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n            >\r\n              Reset database and import file into database\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<main class=\"container\">\r\n  <app-profile></app-profile>\r\n\r\n  <div *ngIf=\"isLocalDatabase()\" class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Reset Database</h6>\r\n    <button\r\n      type=\"button\"\r\n      (click)=\"resetDatabase()\"\r\n      class=\"btn btn-dark btn-sm btn-block\"\r\n    >\r\n      Reset Database to Default\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Database Import/Export</h6>\r\n    <button\r\n      type=\"button\"\r\n      (click)=\"openImportDatabase()\"\r\n      class=\"btn btn-dark btn-sm btn-block\"\r\n    >\r\n      Import database\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      (click)=\"exportDatabase()\"\r\n      class=\"btn btn-dark btn-sm btn-block\"\r\n    >\r\n      Export database\r\n    </button>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"username != null && !isLocalDatabase()\"\r\n    class=\"my-3 p-3 bg-white rounded shadow-sm\"\r\n  >\r\n    <h6 class=\"border-bottom border-gray pb-2\">Change Password</h6>\r\n    <app-change-password-form\r\n      (changePassword)=\"changePassword($event)\"\r\n    ></app-change-password-form>\r\n    <div class=\"alert alert-danger\" *ngIf=\"passwordChangeError\">\r\n      Password not changed due to an error.\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"passwordChangeForbidden\">\r\n      You do not have the permission to change your password.\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css'],\r\n})\r\nexport class PageNotFoundComponent {}\r\n","<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">404 Not Found</h6>\r\n    This page does not exist.\r\n  </div>\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthService } from '../database/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n})\r\nexport class ProfileComponent {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  get username(): string | undefined {\r\n    return this.authService.username;\r\n  }\r\n\r\n  get group(): string | undefined {\r\n    return this.authService.group;\r\n  }\r\n\r\n  isLocalDatabase(): boolean {\r\n    return environment.localDatabase === true;\r\n  }\r\n}\r\n","<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h6 class=\"border-bottom border-gray pb-2\">Profile</h6>\r\n  <table class=\"table\" *ngIf=\"username != null || group != null\">\r\n    <tbody>\r\n      <tr *ngIf=\"username != null\">\r\n        <th scope=\"row\">Username</th>\r\n        <td>{{ username }}</td>\r\n      </tr>\r\n      <tr *ngIf=\"group != null\">\r\n        <th scope=\"row\">Group</th>\r\n        <td>{{ group }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <span *ngIf=\"isLocalDatabase()\">Connected to a local database</span>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { ProcessApiService } from '../../development-process-registry/module-api/process-api.service';\r\nimport { RunningProcess } from '../../development-process-registry/running-process/running-process';\r\nimport { RunningMethod } from '../../development-process-registry/running-process/running-method';\r\n\r\n@Component({\r\n  selector: 'app-api-navigation',\r\n  templateUrl: './api-navigation.component.html',\r\n  styleUrls: ['./api-navigation.component.css'],\r\n})\r\nexport class ApiNavigationComponent {\r\n  @Input() apiName?: string;\r\n\r\n  constructor(private processApiService: ProcessApiService) {}\r\n\r\n  get runningProcess(): RunningProcess {\r\n    return this.processApiService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  get queryParams(): {\r\n    step: number;\r\n    runningProcessId: string;\r\n    executionId: string;\r\n  } {\r\n    return this.processApiService.queryParams;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\" *ngIf=\"runningProcess\">\r\n    <a\r\n      class=\"nav-link\"\r\n      [routerLink]=\"[\r\n        '/',\r\n        'runningprocess',\r\n        'runningprocessview',\r\n        runningProcess._id\r\n      ]\"\r\n    >\r\n      {{ runningProcess.process.name }} &ndash;\r\n      {{ runningProcess.name }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"runningMethod != null\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"[\r\n        '/',\r\n        'runningprocess',\r\n        'runningprocessview',\r\n        runningProcess._id,\r\n        'method',\r\n        runningMethod.executionId\r\n      ]\"\r\n    >\r\n      {{ runningMethod.methodName }}\r\n    </a>\r\n    <ng-content></ng-content>\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\" [queryParams]=\"queryParams\">\r\n      {{ apiName ?? 'Step' }}\r\n    </a>\r\n  </nav>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Author } from '../../model/author';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-author-form',\r\n  templateUrl: './author-form.component.html',\r\n  styleUrls: ['./author-form.component.css'],\r\n})\r\nexport class AuthorFormComponent implements OnInit, OnChanges {\r\n  @Input() author: Author = null;\r\n\r\n  @Output() submitAuthorForm = new EventEmitter<FormGroup>();\r\n\r\n  authorForm: FormGroup = this.fb.group({\r\n    name: '',\r\n    company: '',\r\n    email: ['', Validators.email],\r\n    website: '',\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.author === null) {\r\n      this.loadForm();\r\n    }\r\n    this.changeSubscription = this.authorForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) =>\r\n            (this.changed = this.author != null && !this.author.equals(value))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.author) {\r\n      const oldAuthor: Author = changes.author.previousValue;\r\n      const newAuthor: Author = changes.author.currentValue;\r\n      if (!newAuthor.equals(oldAuthor)) {\r\n        this.loadForm(changes.author.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitAuthorForm.emit(this.authorForm);\r\n  }\r\n\r\n  private loadForm(author: Author = new Author(undefined, {})): void {\r\n    this.authorForm.patchValue(author);\r\n  }\r\n}\r\n","<form [formGroup]=\"authorForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"company\" class=\"col-sm-4 col-form-label\">Company</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"company\"\r\n        class=\"form-control\"\r\n        id=\"company\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"email\" class=\"col-sm-4 col-form-label\">Email</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"email\"\r\n        formControlName=\"email\"\r\n        class=\"form-control\"\r\n        id=\"email\"\r\n        aria-describedby=\"eMailErrorDescription\"\r\n        [class.is-invalid]=\"authorForm.get('email').hasError('email')\"\r\n      />\r\n      <div id=\"eMailErrorDescription\" class=\"invalid-feedback\">\r\n        Email is not valid.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <label for=\"website\" class=\"col-sm-4 col-form-label\">Website</label>\r\n    <div class=\"col-sm-8\">\r\n      <input\r\n        type=\"url\"\r\n        formControlName=\"website\"\r\n        class=\"form-control\"\r\n        id=\"website\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!authorForm.valid\"\r\n      >\r\n        Update Author Info<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Author, AuthorEntry } from '../../model/author';\r\n\r\n@Component({\r\n  selector: 'app-author-info',\r\n  templateUrl: './author-info.component.html',\r\n  styleUrls: ['./author-info.component.css'],\r\n})\r\nexport class AuthorInfoComponent {\r\n  @Input() author: Author | AuthorEntry;\r\n}\r\n","<div class=\"text-muted small\">\r\n  <div *ngIf=\"author && author.name\">\r\n    Author: {{ author.name }}\r\n    <ng-container *ngIf=\"author.email\"> ({{ author.email }}) </ng-container>\r\n    <ng-container *ngIf=\"author.company\">\r\n      from {{ author.company }}</ng-container\r\n    >\r\n  </div>\r\n  <div *ngIf=\"author.website\">Website: {{ author.website }}</div>\r\n</div>\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete-modal',\r\n  templateUrl: './delete-modal.component.html',\r\n  styleUrls: ['./delete-modal.component.css'],\r\n})\r\nexport class DeleteModalComponent {\r\n  @Output() delete = new EventEmitter();\r\n  @Output() dismiss = new EventEmitter();\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">\r\n    <ng-content select=\"[modalTitle]\"></ng-content>\r\n  </h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close\"\r\n    aria-label=\"Close\"\r\n    (click)=\"dismiss.emit()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n    <span class=\"sr-only\">Close Window</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"alert alert-warning\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer d-flex\">\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"dismiss.emit()\">\r\n    Abort deletion\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-danger ml-auto\" (click)=\"delete.emit()\">\r\n    Delete anyway\r\n  </button>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-description-form',\r\n  templateUrl: './description-form.component.html',\r\n  styleUrls: ['./description-form.component.css'],\r\n})\r\nexport class DescriptionFormComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() description: string;\r\n\r\n  @Output() submitDescriptionForm = new EventEmitter<FormGroup>();\r\n\r\n  descriptionForm: FormGroup = this.fb.group({\r\n    description: this.fb.control(''),\r\n  });\r\n  changed = false;\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.changeSubscription = this.descriptionForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap((value) => (this.changed = this.description !== value.description))\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.description) {\r\n      this.loadForm(changes.description.currentValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitDescriptionForm.emit(this.descriptionForm);\r\n  }\r\n\r\n  private loadForm(description: string) {\r\n    if (description) {\r\n      this.descriptionForm.setValue({ description });\r\n    } else {\r\n      this.descriptionForm.setValue({ description: '' });\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"descriptionForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"description\">Description</label>\r\n    <textarea\r\n      formControlName=\"description\"\r\n      class=\"form-control\"\r\n      id=\"description\"\r\n      rows=\"3\"\r\n    ></textarea>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!descriptionForm.valid\"\r\n      >\r\n        Update Description<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport {\r\n  Domain,\r\n  DomainEntry,\r\n} from '../../development-process-registry/knowledge/domain';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport { getTypeaheadInputPipe } from '../utils';\r\nimport { map } from 'rxjs/operators';\r\nimport { ControlContainer, FormControl } from '@angular/forms';\r\nimport { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-domain-selection-form',\r\n  templateUrl: './domain-selection-form.component.html',\r\n  styleUrls: ['./domain-selection-form.component.css'],\r\n})\r\nexport class DomainSelectionFormComponent {\r\n  @Input() domainDefinitions: DomainEntry[] = [];\r\n  @Input() index: number;\r\n\r\n  @Output() remove = new EventEmitter<void>();\r\n\r\n  openDomainInput = new Subject<string>();\r\n\r\n  constructor(private controlContainer: ControlContainer) {}\r\n\r\n  searchDomains = (input: Observable<string>): Observable<DomainEntry[]> => {\r\n    return merge(getTypeaheadInputPipe(input), this.openDomainInput).pipe(\r\n      map((term) =>\r\n        this.domainDefinitions\r\n          .filter((domain) =>\r\n            domain.name.toLowerCase().includes(term.toLowerCase())\r\n          )\r\n          .slice(0, 7)\r\n      )\r\n    );\r\n  };\r\n\r\n  formatter(x: { name: string }): string {\r\n    return x.name;\r\n  }\r\n\r\n  selectItem(event: NgbTypeaheadSelectItemEvent<DomainEntry>): void {\r\n    event.preventDefault();\r\n    this.formControl.setValue(new Domain(event.item, undefined));\r\n  }\r\n\r\n  get formControl(): FormControl {\r\n    return this.controlContainer.control as FormControl;\r\n  }\r\n}\r\n","<div class=\"form-row\">\r\n  <div class=\"form-group col\">\r\n    <label for=\"domainSelection{{ index }}\">Domain</label>\r\n    <div class=\"input-group\">\r\n      <input\r\n        type=\"text\"\r\n        [formControl]=\"formControl\"\r\n        class=\"form-control\"\r\n        id=\"domainSelection{{ index }}\"\r\n        [ngbTypeahead]=\"searchDomains\"\r\n        [editable]=\"false\"\r\n        [resultFormatter]=\"formatter\"\r\n        [inputFormatter]=\"formatter\"\r\n        (selectItem)=\"selectItem($event)\"\r\n        (click)=\"openDomainInput.next($any($event.target).value)\"\r\n        (focus)=\"openDomainInput.next($any($event.target).value)\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          (click)=\"remove.emit()\"\r\n          class=\"btn btn-secondary align-self-baseline\"\r\n          type=\"button\"\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  Domain,\r\n  DomainEntry,\r\n} from '../../development-process-registry/knowledge/domain';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DomainService } from '../../development-process-registry/knowledge/domain.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { equalsList } from '../utils';\r\n\r\n@Component({\r\n  selector: 'app-domains-selection-form',\r\n  templateUrl: './domains-selection-form.component.html',\r\n  styleUrls: ['./domains-selection-form.component.css'],\r\n})\r\nexport class DomainsSelectionFormComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  @Input() domains: Domain[];\r\n\r\n  /**\r\n   * Emits a form array containing of real domains,\r\n   * i.e., of type Domain\r\n   */\r\n  @Output() submitDomainsForm = new EventEmitter<FormArray>();\r\n\r\n  domainsForm: FormGroup = this.fb.group({\r\n    domains: this.fb.array([]),\r\n  });\r\n  changed = false;\r\n\r\n  domainDefinitions: DomainEntry[] = [];\r\n\r\n  private changeSubscription: Subscription;\r\n\r\n  constructor(private domainService: DomainService, private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadDomains();\r\n    this.changeSubscription = this.domainsForm.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(\r\n          (value) => (this.changed = !equalsList(this.domains, value.domains))\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.domains) {\r\n      const oldDomains: Domain[] = changes.domains.previousValue;\r\n      const newDomains: Domain[] = changes.domains.currentValue;\r\n      if (!equalsList(oldDomains, newDomains)) {\r\n        this.loadForm(newDomains);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.changeSubscription) {\r\n      this.changeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  add(): void {\r\n    this.domainsFormArray.push(this.fb.control(null, Validators.required));\r\n  }\r\n\r\n  remove(index: number): void {\r\n    this.domainsFormArray.removeAt(index);\r\n  }\r\n\r\n  private loadForm(domains: Domain[]): void {\r\n    const formGroups = domains.map((domain) =>\r\n      this.fb.control(domain, Validators.required)\r\n    );\r\n    this.domainsForm.setControl('domains', this.fb.array(formGroups));\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.submitDomainsForm.emit(this.domainsFormArray);\r\n  }\r\n\r\n  get domainsFormArray(): FormArray {\r\n    return this.domainsForm.get('domains') as FormArray;\r\n  }\r\n\r\n  private async loadDomains(): Promise<void> {\r\n    this.domainDefinitions = await this.domainService.getList();\r\n  }\r\n}\r\n","<form [formGroup]=\"domainsForm\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"form-group\" formArrayName=\"domains\">\r\n    <app-domain-selection-form\r\n      *ngFor=\"let control of domainsFormArray.controls; let index = index\"\r\n      [formGroupName]=\"index.toString()\"\r\n      [domainDefinitions]=\"domainDefinitions\"\r\n      [index]=\"index\"\r\n      (remove)=\"remove(index)\"\r\n    ></app-domain-selection-form>\r\n  </div>\r\n  <div class=\"form-group d-flex\">\r\n    <button (click)=\"add()\" type=\"button\" class=\"btn btn-secondary ml-auto\">\r\n      Add Domain\r\n    </button>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-12\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-sm btn-block\"\r\n        [class.btn-dark]=\"!changed\"\r\n        [class.btn-primary]=\"changed\"\r\n        [disabled]=\"!domainsForm.valid\"\r\n      >\r\n        Update<span *ngIf=\"changed\"> (unsaved changes)</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  ValidationErrors,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-form-array-list',\r\n  templateUrl: './form-array-list.component.html',\r\n  styleUrls: ['./form-array-list.component.css'],\r\n})\r\nexport class FormArrayListComponent {\r\n  @Input() elementName: string;\r\n  @Input() formArray: FormArray;\r\n  @Input() validators: ((control: AbstractControl) => ValidationErrors)[] = [\r\n    Validators.required,\r\n  ];\r\n\r\n  @Input() ordered = false;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  add(): void {\r\n    this.formArray.push(this.fb.control('', this.validators));\r\n  }\r\n\r\n  up(position: number): void {\r\n    this.changePosition(position, -1);\r\n  }\r\n\r\n  down(position: number): void {\r\n    this.changePosition(position, 1);\r\n  }\r\n\r\n  changePosition(position: number, delta: number): void {\r\n    const control = this.formArray.controls[position];\r\n    const newPosition = position + delta;\r\n    this.formArray.removeAt(position);\r\n    this.formArray.insert(newPosition, control);\r\n  }\r\n\r\n  remove(index: number): void {\r\n    this.formArray.removeAt(index);\r\n  }\r\n\r\n  asFormControl(control: AbstractControl): FormControl {\r\n    return control as FormControl;\r\n  }\r\n}\r\n","<div\r\n  *ngFor=\"\r\n    let control of formArray.controls;\r\n    let index = index;\r\n    let first = first;\r\n    let last = last\r\n  \"\r\n  class=\"form-group row\"\r\n>\r\n  <label for=\"elementName\" class=\"col-sm-4 col-form-label\">{{\r\n    elementName\r\n  }}</label>\r\n  <div class=\"col-sm-8 input-group\">\r\n    <input\r\n      type=\"text\"\r\n      [formControl]=\"asFormControl(control)\"\r\n      class=\"form-control\"\r\n      [class.is-invalid]=\"control.invalid\"\r\n      id=\"elementName\"\r\n      aria-describedby=\"elementNameFeedback\"\r\n    />\r\n    <div class=\"input-group-append\">\r\n      <ng-container *ngIf=\"ordered\">\r\n        <button\r\n          [disabled]=\"first\"\r\n          (click)=\"up(index)\"\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n        >\r\n          Up\r\n        </button>\r\n        <button\r\n          [disabled]=\"last\"\r\n          (click)=\"down(index)\"\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n        >\r\n          Down\r\n        </button>\r\n      </ng-container>\r\n      <button\r\n        (click)=\"remove(index)\"\r\n        class=\"btn btn-outline-secondary\"\r\n        type=\"button\"\r\n      >\r\n        Remove\r\n      </button>\r\n    </div>\r\n    <div id=\"elementNameFeedback\" class=\"invalid-feedback\">\r\n      <span *ngIf=\"control.hasError('required')\">This field is required.</span>\r\n      <span\r\n        *ngIf=\"!control.hasError('required') && control.hasError('lowercase')\"\r\n      >\r\n        The name of the element should consist of letters only and be written in\r\n        lower case.\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"d-flex\">\r\n  <button (click)=\"add()\" type=\"button\" class=\"btn btn-secondary ml-auto\">\r\n    Add {{ elementName }}\r\n  </button>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-list-wrapper',\r\n  templateUrl: './list-wrapper.component.html',\r\n  styleUrls: ['./list-wrapper.component.css'],\r\n})\r\nexport class ListWrapperComponent {\r\n  @Input() listTitle: string;\r\n  @Input() loading: boolean = false;\r\n  @Input() reloading: boolean = false;\r\n  @Input() noResults: boolean = false;\r\n}\r\n","<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <div class=\"d-flex border-bottom border-gray mb-2\">\r\n    <h6 class=\"pb-2 mb-0\">{{ listTitle }}</h6>\r\n    <div\r\n      *ngIf=\"!loading && reloading\"\r\n      class=\"spinner-border spinner-border-sm ml-auto\"\r\n      role=\"status\"\r\n    >\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"loading\">\r\n    <div class=\"d-flex justify-content-center\">\r\n      <div class=\"spinner-border\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!loading && noResults\">\r\n    <ng-content select=\"[noResults]\"></ng-content>\r\n  </div>\r\n  <div *ngIf=\"!loading && !noResults\">\r\n    <ng-content select=\"[results]\"></ng-content>\r\n  </div>\r\n</div>\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { DatabaseModel } from '../database/database-model';\r\nimport { ElementService } from '../database/element.service';\r\nimport { DatabaseRootInit } from '../database/database-entry';\r\nimport { EntryType } from '../database/database-model-part';\r\n\r\nexport const ELEMENT_SERVICE = new InjectionToken<\r\n  ElementService<DatabaseModel, DatabaseRootInit>\r\n>('Element service');\r\n\r\n@Injectable()\r\nexport class ListService<T extends DatabaseModel, S extends DatabaseRootInit> {\r\n  private _elements: EntryType<T>[];\r\n  get elements(): EntryType<T>[] {\r\n    return this._elements;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.elements == null;\r\n  }\r\n\r\n  private _reloading: boolean;\r\n  get reloading(): boolean {\r\n    return this._reloading;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.elements != null && this.elements.length === 0;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(ELEMENT_SERVICE) private elementService: ElementService<T, S>\r\n  ) {\r\n    void this.load();\r\n  }\r\n\r\n  async add(element: S): Promise<void> {\r\n    this._reloading = true;\r\n    await this.elementService.add(element);\r\n    await this.load();\r\n  }\r\n\r\n  async delete(elementId: string): Promise<void> {\r\n    this._reloading = true;\r\n    const elements = this._elements;\r\n    await this.elementService.delete(elementId);\r\n    // check that no reload happened before updating the local version\r\n    if (elements === this._elements) {\r\n      this._elements = this._elements.filter(\r\n        (element) => element._id !== elementId\r\n      );\r\n    }\r\n    await this.load();\r\n  }\r\n\r\n  /**\r\n   * Loads the elements list.\r\n   * Calling this method should be necessary only in some edge cases.\r\n   */\r\n  async load(): Promise<void> {\r\n    this._reloading = true;\r\n    this._elements = await this.elementService.getList();\r\n    this._reloading = false;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-results-list-item',\r\n  templateUrl: './results-list-item.component.html',\r\n  styleUrls: ['./results-list-item.component.css'],\r\n})\r\nexport class ResultsListItemComponent {\r\n  @Input() viewLink: string[];\r\n  @Output() delete = new EventEmitter();\r\n}\r\n","<div class=\"d-flex justify-content-between align-items-baseline\">\r\n  <div class=\"mr-3\">\r\n    <span><ng-content select=\"[itemTitle]\"></ng-content></span>\r\n    <div class=\"text-muted small\">\r\n      <ng-content select=\"[itemDescription]\"></ng-content>\r\n    </div>\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <div class=\"d-flex\">\r\n    <a [routerLink]=\"viewLink\" type=\"button\" class=\"btn btn-dark btn-xs\">\r\n      View\r\n    </a>\r\n    <button\r\n      (click)=\"delete.emit()\"\r\n      type=\"button\"\r\n      class=\"btn btn-danger btn-xs ml-1\"\r\n    >\r\n      Delete\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\ntype SearchFunction<T> = (searchValue: string, item: T) => boolean;\r\n\r\nexport const SEARCH_FUNCTION = new InjectionToken<SearchFunction<any>>(\r\n  'Search function'\r\n);\r\n\r\nexport function searchFunction<T extends { name: string }>(\r\n  searchValue: string,\r\n  item: T\r\n): boolean {\r\n  return item.name.toLowerCase().includes(searchValue);\r\n}\r\n\r\n@Injectable()\r\nexport class SearchService<T> implements OnDestroy {\r\n  searchForm: FormGroup = this.fb.group({\r\n    search: [''],\r\n  });\r\n\r\n  private _items: T[];\r\n  set items(items: T[]) {\r\n    this._items = items;\r\n    this.search(this.searchForm.value.search);\r\n  }\r\n\r\n  private _filteredResults: T[];\r\n  get filteredResults() {\r\n    return this._filteredResults;\r\n  }\r\n\r\n  private searchSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    @Inject(SEARCH_FUNCTION) private searchFunction: SearchFunction<T>\r\n  ) {\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    this.searchSubscription = this.searchForm\r\n      .get('search')\r\n      .valueChanges.pipe(debounceTime(300))\r\n      .subscribe((value) => this.search(value));\r\n  }\r\n\r\n  private search(value?: string) {\r\n    if (value != null) {\r\n      value = value.toLowerCase();\r\n      this._filteredResults = this._items.filter((item) =>\r\n        this.searchFunction(value, item)\r\n      );\r\n    } else {\r\n      this._filteredResults = this._items;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.searchSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { SearchService } from '../search.service';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css'],\r\n  providers: [SearchService],\r\n})\r\nexport class SearchComponent<T> implements OnChanges {\r\n  @Input() heading: string;\r\n  @Input() itemName: string;\r\n  @Input() content: TemplateRef<unknown>;\r\n  @Input() items: T[];\r\n\r\n  constructor(private searchService: SearchService<T>) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.items) {\r\n      this.searchForm.reset();\r\n      this.searchService.items = changes.items.currentValue;\r\n    }\r\n  }\r\n\r\n  get searchForm(): FormGroup {\r\n    return this.searchService.searchForm;\r\n  }\r\n\r\n  get filteredResults(): T[] {\r\n    return this.searchService.filteredResults;\r\n  }\r\n}\r\n","<form [formGroup]=\"searchForm\" class=\"form-inline\">\r\n  <label class=\"sr-only\" for=\"search\">Search</label>\r\n  <input\r\n    formControlName=\"search\"\r\n    type=\"text\"\r\n    class=\"form-control mb-2 mr-sm-2\"\r\n    id=\"search\"\r\n    placeholder=\"Search\"\r\n  />\r\n</form>\r\n<h5>{{ heading }}</h5>\r\n<div *ngIf=\"!items\" class=\"alert alert-info\">Loading...</div>\r\n<div *ngIf=\"items && items.length === 0\" class=\"alert alert-info\">\r\n  No fitting {{ itemName }}\r\n</div>\r\n<div\r\n  *ngIf=\"\r\n    items && items.length > 0 && filteredResults && filteredResults.length === 0\r\n  \"\r\n>\r\n  No fitting {{ itemName }} for search {{ searchForm.value.search }}.\r\n</div>\r\n<ul\r\n  *ngIf=\"filteredResults && filteredResults.length > 0\"\r\n  class=\"list-group shadow-sm\"\r\n>\r\n  <li *ngFor=\"let item of filteredResults\" class=\"list-group-item\">\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"content\"\r\n      [ngTemplateOutletContext]=\"{ $implicit: item }\"\r\n    ></ng-container>\r\n  </li>\r\n</ul>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthorFormComponent } from './author-form/author-form.component';\r\nimport { AuthorInfoComponent } from './author-info/author-info.component';\r\nimport { DescriptionFormComponent } from './description-form/description-form.component';\r\nimport { DevelopmentProcessViewModule } from '../development-process-view/development-process-view.module';\r\nimport { FormArrayListComponent } from './form-array-list/form-array-list.component';\r\nimport { DomainSelectionFormComponent } from './domain-selection-form/domain-selection-form.component';\r\nimport { DomainsSelectionFormComponent } from './domains-selection-form/domains-selection-form.component';\r\nimport { DeleteModalComponent } from './delete-modal/delete-modal.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { ListWrapperComponent } from './list-wrapper/list-wrapper.component';\r\nimport { ResultsListItemComponent } from './results-list-item/results-list-item.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ApiNavigationComponent } from './api-navigation/api-navigation.component';\r\nimport { StepErrorsComponent } from './step-errors/step-errors.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ApiNavigationComponent,\r\n    AuthorFormComponent,\r\n    AuthorInfoComponent,\r\n    DescriptionFormComponent,\r\n    FormArrayListComponent,\r\n    DomainSelectionFormComponent,\r\n    DomainsSelectionFormComponent,\r\n    DeleteModalComponent,\r\n    SearchComponent,\r\n    ListWrapperComponent,\r\n    ResultsListItemComponent,\r\n    StepErrorsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DevelopmentProcessViewModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n\r\n    ApiNavigationComponent,\r\n    AuthorFormComponent,\r\n    AuthorInfoComponent,\r\n    DeleteModalComponent,\r\n    DescriptionFormComponent,\r\n    DevelopmentProcessViewModule,\r\n    FormArrayListComponent,\r\n    DomainsSelectionFormComponent,\r\n    SearchComponent,\r\n    ListWrapperComponent,\r\n    ResultsListItemComponent,\r\n    StepErrorsComponent,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Component } from '@angular/core';\r\nimport { ProcessApiService } from '../../development-process-registry/module-api/process-api.service';\r\n\r\n@Component({\r\n  selector: 'app-step-errors',\r\n  templateUrl: './step-errors.component.html',\r\n  styleUrls: ['./step-errors.component.css'],\r\n})\r\nexport class StepErrorsComponent {\r\n  constructor(public processApiService: ProcessApiService) {}\r\n}\r\n","<main\r\n  *ngIf=\"\r\n    processApiService.runningProcess == null && processApiService.errorLoading\r\n  \"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <div class=\"alert alert-info my-3\">\r\n    <p>The running method can not be loaded.</p>\r\n    <p class=\"mb-0\">\r\n      <a [routerLink]=\"['/', 'runningprocess']\"\r\n        >Go back to overview of running methods</a\r\n      >\r\n    </p>\r\n  </div>\r\n</main>\r\n\r\n<main\r\n  *ngIf=\"\r\n    processApiService.runningMethod == null &&\r\n    processApiService.runningProcess != null &&\r\n    processApiService.errorLoading\r\n  \"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <div class=\"alert alert-info my-3\">\r\n    <p>\r\n      Selected development step is currently not executed or has been canceled.\r\n    </p>\r\n    <p class=\"mb-0\">\r\n      <a\r\n        [routerLink]=\"[\r\n          '/',\r\n          'runningprocess',\r\n          'runningprocessview',\r\n          processApiService.runningProcess._id\r\n        ]\"\r\n      >\r\n        Go back to kanban board of running method\r\n      </a>\r\n    </p>\r\n  </div>\r\n</main>\r\n\r\n<main\r\n  *ngIf=\"\r\n    processApiService.runningMethod != null &&\r\n    !processApiService.isCorrectStep()\r\n  \"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <div class=\"alert alert-info my-3\">\r\n    <p\r\n      *ngIf=\"\r\n        processApiService.stepInfo.step >\r\n        processApiService.runningMethod.currentStepNumber\r\n      \"\r\n    >\r\n      This step cannot be executed yet, because the previous step has not been\r\n      completed.\r\n    </p>\r\n    <p\r\n      *ngIf=\"\r\n        processApiService.stepInfo.step <\r\n        processApiService.runningMethod.currentStepNumber\r\n      \"\r\n    >\r\n      Step already executed.\r\n    </p>\r\n    <p class=\"mb-0\">\r\n      <a\r\n        [routerLink]=\"[\r\n          '/',\r\n          'runningprocess',\r\n          'runningprocessview',\r\n          processApiService.runningProcess._id,\r\n          'method',\r\n          processApiService.runningMethod.executionId\r\n        ]\"\r\n      >\r\n        Go back to development step overview\r\n      </a>\r\n    </p>\r\n  </div>\r\n</main>\r\n","import { Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { Equality } from './equality';\r\n\r\nexport function getTypeaheadInputPipe(input: Observable<string>) {\r\n  return input.pipe(debounceTime(150), distinctUntilChanged());\r\n}\r\n\r\n/**\r\n * Check whether list of lists is equal to another list of lists\r\n *\r\n * @param listsA the first list of lists\r\n * @param listsB the second list of lists\r\n * @return true if the lists are both null/undefined or have the same amount of elements and all elements are equal at the same index\r\n */\r\nexport function equalsListOfLists<T>(\r\n  listsA: Equality<T>[][],\r\n  listsB: T[][]\r\n): boolean {\r\n  return equalsListGeneric<Equality<T>[], T[]>(listsA, listsB, (a, b) =>\r\n    equalsList(a, b)\r\n  );\r\n}\r\n\r\n/**\r\n * Check whether is a list is equal to another list\r\n *\r\n * @param listA the first list\r\n * @param listB the second list\r\n * @return true if the lists are both null/undefined or have the same amount of elements and all elements are equal at the same index\r\n */\r\nexport function equalsList<T>(listA: Equality<T>[], listB: T[]): boolean {\r\n  return equalsListGeneric<Equality<T>, T>(listA, listB, (a, b) => a.equals(b));\r\n}\r\n\r\n/**\r\n * Check whether a list of strings is equal to another list of strings\r\n *\r\n * @param listA the first list of strings\r\n * @param listB the second list of strings\r\n * @return true if the lists are both null/undefined or have the same amount of elements and all elements are equal at the same index\r\n */\r\nexport function equalsListString(listA: string[], listB: string[]): boolean {\r\n  return equalsListGeneric<string, string>(listA, listB, (a, b) => a === b);\r\n}\r\n\r\n/**\r\n * Check whether a list is equal to another list\r\n *\r\n * @param listA the first list\r\n * @param listB the second list\r\n * @param compare the function used to compare the elements\r\n * @return true if the lists are both null/undefined or have the same amount of elements and all elements are equal at the same index\r\n */\r\nexport function equalsListGeneric<T, S>(\r\n  listA: T[],\r\n  listB: S[],\r\n  compare: (a: T, b: S) => boolean\r\n): boolean {\r\n  if (listA == null && listB == null) {\r\n    return true;\r\n  }\r\n  if (listA == null || listB == null) {\r\n    return false;\r\n  }\r\n  return (\r\n    listA.length === listB.length &&\r\n    listB.every((itemB, index) => {\r\n      const itemA = listA[index];\r\n      if (itemA == null && itemB == null) {\r\n        return true;\r\n      }\r\n      if (itemA == null || itemB == null) {\r\n        return false;\r\n      }\r\n      return compare(itemA, itemB);\r\n    })\r\n  );\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-start-business-developer',\r\n  templateUrl: './start-business-developer.component.html',\r\n  styleUrls: ['./start-business-developer.component.css'],\r\n})\r\nexport class StartBusinessDeveloperComponent {}\r\n","<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h2 class=\"border-bottom border-gray pb-2\">Business Developer Role</h2>\r\n  <p class=\"mb-0\">\r\n    The Business Developer Role is used to enact the defined Business Model\r\n    Development Methods.\r\n  </p>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-start-method-engineer',\r\n  templateUrl: './start-method-engineer.component.html',\r\n  styleUrls: ['./start-method-engineer.component.css'],\r\n})\r\nexport class StartMethodEngineerComponent {}\r\n","<div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n  <h2 class=\"border-bottom border-gray pb-2\">Method Engineer Role</h2>\r\n  <p>\r\n    The Method Engineer Role is used to define Business Model Development\r\n    Methods.\r\n  </p>\r\n  <p class=\"mb-0\">The process to do this is separated into multiple steps:</p>\r\n  <ol class=\"mb-0\">\r\n    <li>\r\n      <a [routerLink]=\"['/', 'methodElements']\">\r\n        Create Method Elements in the Method Repository\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a [routerLink]=\"['/', 'methods']\">\r\n        Assemble Method Building Blocks from these Method Elements\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a [routerLink]=\"['/', 'process']\">\r\n        Create Method Patterns that will be used to connect different Method\r\n        Building Blocks\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a [routerLink]=\"['/', 'bmprocess']\">\r\n        Compose Business Model Development Methods by selecting Method Patterns\r\n        and filling them with Method Building Blocks\r\n      </a>\r\n    </li>\r\n  </ol>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { InternalRoles, UserService } from '../user.service';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-start',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.css'],\r\n})\r\nexport class StartComponent {\r\n  constructor(private userService: UserService) {}\r\n\r\n  get currentRole(): InternalRoles {\r\n    return this.userService.activatedRole;\r\n  }\r\n\r\n  get roles(): typeof InternalRoles {\r\n    return InternalRoles;\r\n  }\r\n\r\n  isLocalDatabase(): boolean {\r\n    return environment.localDatabase === true;\r\n  }\r\n}\r\n","<main role=\"main\" class=\"container\">\r\n  <app-profile *ngIf=\"!isLocalDatabase()\"></app-profile>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h1 class=\"border-bottom border-gray pb-2\">\r\n      Situational Business Model Developer\r\n    </h1>\r\n    <p>\r\n      Welcome to the Situational Business Model Developer (SBMD). The SBMD\r\n      allows the development of business models by taking the context of the\r\n      company and the product/service into account.\r\n    </p>\r\n    <p class=\"mb-0\">\r\n      A detailed explanation is given\r\n      <a [routerLink]=\"['/', 'explanation']\">here</a>.\r\n    </p>\r\n  </div>\r\n\r\n  <app-start-business-developer\r\n    *ngIf=\"currentRole === roles.BUSINESSDEVELOPER\"\r\n  ></app-start-business-developer>\r\n  <app-start-method-engineer\r\n    *ngIf=\"currentRole === roles.EXPERT\"\r\n  ></app-start-method-engineer>\r\n</main>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tool-explanation',\r\n  templateUrl: './tool-explanation.component.html',\r\n  styleUrls: ['./tool-explanation.component.css'],\r\n})\r\n/**\r\n * The ToolExplanationComponent shows the explanation of the tool in the web application.\r\n *\r\n * @author Sebastian Gottschalk\r\n */\r\nexport class ToolExplanationComponent {}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Tool Explanation</a>\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Explanations</h6>\r\n    <ul ngbNav #nav=\"ngbNav\" class=\"nav-pills nav-justified\">\r\n      <li ngbNavItem>\r\n        <a ngbNavLink>Enaction</a>\r\n        <ng-template ngbNavContent>\r\n          <app-enaction-explanation></app-enaction-explanation>\r\n        </ng-template>\r\n      </li>\r\n      <li ngbNavItem>\r\n        <a ngbNavLink>Method Modeler</a>\r\n        <ng-template ngbNavContent>\r\n          <app-method-modeler-explanation></app-method-modeler-explanation>\r\n        </ng-template>\r\n      </li>\r\n      <li ngbNavItem>\r\n        <a ngbNavLink>Feature Modeler</a>\r\n        <ng-template ngbNavContent>\r\n          <app-feature-modeler-explanation></app-feature-modeler-explanation>\r\n        </ng-template>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"mt-1\" [ngbNavOutlet]=\"nav\"></div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Further Information</h6>\r\n    <p class=\"mt-2\">Further information can be accessed in two ways:</p>\r\n    <ul class=\"mb-0\">\r\n      <li>\r\n        <strong>Download Source Code:</strong>\r\n        <a\r\n          href=\"https://github.com/SebastianGTTS/situational-business-modeler-developer\"\r\n        >\r\n          https://github.com/SebastianGTTS/situational-business-modeler-developer\r\n        </a>\r\n      </li>\r\n      <li><strong>Read Research Paper:</strong> Currently under review</li>\r\n    </ul>\r\n  </div>\r\n</main>\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport enum InternalRoles {\r\n  EXPERT = 'Method Engineer',\r\n  BUSINESSDEVELOPER = 'Business Developer',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  activatedRole: InternalRoles = InternalRoles.BUSINESSDEVELOPER;\r\n}\r\n","import { fabric } from 'fabric';\r\n\r\nexport interface CanvasNoteInit {\r\n  color: string | undefined;\r\n  darkerColor: string | undefined;\r\n  point: fabric.Point;\r\n}\r\n\r\ninterface CanvasNoteFromObjectInit {\r\n  objects?: fabric.Object[];\r\n  options?: fabric.IGroupOptions;\r\n  isAlreadyGrouped?: boolean;\r\n}\r\n\r\nexport interface CanvasNoteConstructor {\r\n  new (\r\n    init?: CanvasNoteInit,\r\n    fromObject?: CanvasNoteFromObjectInit\r\n  ): CanvasNote;\r\n\r\n  fromObject: Function;\r\n}\r\n\r\nexport interface CanvasNote extends fabric.Group {\r\n  setFillColor(color: string | undefined, darker: string | undefined): void;\r\n\r\n  setStrokeColor(color: string | undefined): void;\r\n\r\n  getTextbox(): fabric.Textbox;\r\n\r\n  getTriangle(): fabric.Polygon;\r\n\r\n  getRectangle(): fabric.Polygon;\r\n}\r\n\r\nexport const CanvasNote: CanvasNoteConstructor = fabric.util.createClass(\r\n  fabric.Group,\r\n  {\r\n    type: 'canvasNote',\r\n\r\n    initialize: function (\r\n      init?: CanvasNoteInit,\r\n      fromObject?: CanvasNoteFromObjectInit\r\n    ): void {\r\n      if (init != null) {\r\n        const width = 200;\r\n        const height = 100;\r\n        const text = new fabric.Textbox('Note...', {\r\n          originX: 'center',\r\n          originY: 'center',\r\n          width: 100,\r\n        });\r\n        const noteRect = new fabric.Polygon(\r\n          [\r\n            { x: -width / 2, y: -height / 2 },\r\n            { x: width / 2 - 20, y: -height / 2 },\r\n            { x: width / 2, y: -height / 2 + 20 },\r\n            { x: width / 2, y: height / 2 },\r\n            { x: -width / 2, y: height / 2 },\r\n          ],\r\n          {\r\n            fill: init.color,\r\n            shadow: new fabric.Shadow({\r\n              offsetY: 5,\r\n              color: 'rgba(0,0,0,0.25)',\r\n            }),\r\n            selectable: false,\r\n          }\r\n        );\r\n        const noteTriangle = new fabric.Polygon(\r\n          [\r\n            { x: width / 2 - 20, y: -height / 2 },\r\n            { x: width / 2 - 20, y: -height / 2 + 20 },\r\n            { x: width / 2, y: -height / 2 + 20 },\r\n          ],\r\n          {\r\n            fill: init.darkerColor,\r\n            selectable: false,\r\n          }\r\n        );\r\n        this.callSuper('initialize', [noteRect, noteTriangle, text], {\r\n          left: init.point.x - 100,\r\n          top: init.point.y - 50,\r\n          fill: init.color,\r\n        });\r\n      } else if (fromObject != null) {\r\n        this.callSuper(\r\n          'initialize',\r\n          fromObject.objects,\r\n          fromObject.options,\r\n          fromObject.isAlreadyGrouped\r\n        );\r\n      } else {\r\n        throw new Error('Either init or fromObject must be provided!');\r\n      }\r\n\r\n      this._initEventListeners();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _initEventListeners: function (this: CanvasNote): void {\r\n      const mousedblclickHandler = (): void => {\r\n        const text = this.getTextbox();\r\n        const canvas = this.canvas!;\r\n        this.off();\r\n        const objects = this.getObjects();\r\n        this.destroy();\r\n        canvas.remove(this);\r\n        canvas.add(...objects);\r\n        canvas.setActiveObject(text);\r\n        text.enterEditing();\r\n        text.selectAll();\r\n        const handleExitEditing = (): void => {\r\n          canvas.off('save', handleExitEditing);\r\n          text.off('editing:exited', handleExitEditing);\r\n          canvas.remove(...objects);\r\n          const note = new CanvasNote(undefined, { objects });\r\n          canvas.add(note);\r\n        };\r\n        text.on('editing:exited', handleExitEditing);\r\n        canvas.on('save', handleExitEditing);\r\n      };\r\n      this.on('mousedblclick', mousedblclickHandler);\r\n    },\r\n\r\n    _set(this: CanvasNote, key: string, value: unknown): fabric.Object {\r\n      if (key === 'strokeWidth' && this._objects.length === 3) {\r\n        this.getRectangle().set('strokeWidth', value as number);\r\n        this.getTriangle().set('strokeWidth', value as number);\r\n      }\r\n      return fabric.Group.prototype._set.call(this, key, value);\r\n    },\r\n\r\n    setFillColor(\r\n      this: CanvasNote,\r\n      color: string | undefined,\r\n      darker: string | undefined\r\n    ): void {\r\n      this.getRectangle().set('fill', color);\r\n      this.getTriangle().set('fill', darker);\r\n      this.set('fill', color);\r\n    },\r\n\r\n    setStrokeColor(this: CanvasNote, color: string | undefined): void {\r\n      this.getRectangle().set('stroke', color);\r\n      this.getTriangle().set('stroke', color);\r\n      this.set('stroke', color);\r\n    },\r\n\r\n    getTextbox: function (this: CanvasNote): fabric.Textbox {\r\n      return this.item(2) as unknown as fabric.Textbox;\r\n    },\r\n\r\n    getTriangle: function (this: CanvasNote): fabric.Polygon {\r\n      return this.item(1) as unknown as fabric.Polygon;\r\n    },\r\n\r\n    getRectangle: function (this: CanvasNote): fabric.Polygon {\r\n      return this.item(0) as unknown as fabric.Polygon;\r\n    },\r\n  }\r\n);\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nCanvasNote.fromObject = function (object: any, callback: Function): void {\r\n  fabric.util.enlivenObjects(\r\n    object.objects,\r\n    function (enlivenedObjects: fabric.Object[]): void {\r\n      // @ts-ignore\r\n      const options = fabric.util.object.clone(object, true);\r\n      delete options.objects;\r\n      callback(\r\n        new CanvasNote(undefined, {\r\n          objects: enlivenedObjects,\r\n          options,\r\n          isAlreadyGrouped: true,\r\n        })\r\n      );\r\n    },\r\n    'fabric'\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n(fabric as any).CanvasNote = CanvasNote;\r\n","import { Injectable } from '@angular/core';\r\nimport { WhiteboardCanvas } from './whiteboard';\r\nimport { fabric } from 'fabric';\r\n\r\ninterface CanvasObjectData {\r\n  interactive: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class WhiteboardCanvasService {\r\n  /**\r\n   * Get a fabric whiteboard canvas instance that is read only\r\n   *\r\n   * @param canvasElement the canvas element to which to connect\r\n   * @param whiteboardCanvas the whiteboard canvas to load\r\n   * @return the read only fabric canvas instance\r\n   */\r\n  async getReadonlyWhiteboardCanvas(\r\n    canvasElement: HTMLCanvasElement,\r\n    whiteboardCanvas: WhiteboardCanvas\r\n  ): Promise<fabric.Canvas> {\r\n    const canvas = new fabric.Canvas(canvasElement);\r\n    canvas.interactive = false;\r\n    canvas.selection = false;\r\n    await new Promise((resolve) =>\r\n      canvas.loadFromJSON(whiteboardCanvas, resolve)\r\n    );\r\n    canvas.forEachObject((object) =>\r\n      object.set({\r\n        selectable: false,\r\n        lockMovementX: true,\r\n        lockMovementY: true,\r\n        lockScalingX: true,\r\n        lockScalingY: true,\r\n        lockUniScaling: true,\r\n        lockRotation: true,\r\n        hoverCursor: 'default',\r\n        moveCursor: 'default',\r\n      })\r\n    );\r\n    return canvas;\r\n  }\r\n\r\n  /**\r\n   * Get a fabric whiteboard canvas instance\r\n   *\r\n   * @param canvasElement the canvas element to which to connect\r\n   * @param whiteboardCanvas the whiteboard canvas to load\r\n   * @return the fabric canvas instance\r\n   */\r\n  async getWhiteboardCanvas(\r\n    canvasElement: HTMLCanvasElement,\r\n    whiteboardCanvas: WhiteboardCanvas\r\n  ): Promise<fabric.Canvas> {\r\n    const canvas = new fabric.Canvas(canvasElement);\r\n    await new Promise((resolve) =>\r\n      canvas.loadFromJSON(whiteboardCanvas, resolve)\r\n    );\r\n    canvas.forEachObject((object) => {\r\n      const data: CanvasObjectData | undefined = object.get('data');\r\n      if (data != null) {\r\n        if (!data.interactive) {\r\n          object.set({\r\n            selectable: false,\r\n            lockMovementX: true,\r\n            lockMovementY: true,\r\n            lockScalingX: true,\r\n            lockScalingY: true,\r\n            lockUniScaling: true,\r\n            lockRotation: true,\r\n            hoverCursor: 'default',\r\n            moveCursor: 'default',\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return canvas;\r\n  }\r\n\r\n  /**\r\n   * Get the whiteboard canvas serialization\r\n   *\r\n   * @param canvas the canvas\r\n   * @return the serialization as a json string\r\n   */\r\n  getWhiteboardCanvasSerialization(canvas: fabric.Canvas): string {\r\n    canvas.fire('save');\r\n    return JSON.stringify(canvas.toJSON(['data']));\r\n  }\r\n\r\n  /**\r\n   * Creates an empty whiteboard canvas.\r\n   */\r\n  getEmptyWhiteboardCanvas(): WhiteboardCanvas {\r\n    const canvas = new fabric.Canvas(null);\r\n    const serialization = JSON.stringify(canvas);\r\n    canvas.dispose();\r\n    return serialization;\r\n  }\r\n\r\n  /**\r\n   * Sets all elements in a whiteboard canvas to read only\r\n   *\r\n   * @param whiteboardCanvas the canvas to make read only\r\n   * @return the canvas with all elements marked as readonly\r\n   */\r\n  async setReadOnly(\r\n    whiteboardCanvas: WhiteboardCanvas\r\n  ): Promise<WhiteboardCanvas> {\r\n    const canvas = new fabric.Canvas(null);\r\n    await new Promise((resolve) =>\r\n      canvas.loadFromJSON(whiteboardCanvas, resolve)\r\n    );\r\n    const data: CanvasObjectData = {\r\n      interactive: false,\r\n    };\r\n    canvas.forEachObject((object) => {\r\n      object.set('data', data);\r\n    });\r\n    const serialization = this.getWhiteboardCanvasSerialization(canvas);\r\n    canvas.dispose();\r\n    return serialization;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DefaultElementService } from '../database/default-element.service';\r\nimport {\r\n  WhiteboardInstance,\r\n  WhiteboardInstanceInit,\r\n} from './whiteboard-instance';\r\nimport { PouchdbService } from '../database/pouchdb.service';\r\nimport { WhiteboardTemplate } from './whiteboard-template';\r\nimport { DbId } from '../database/database-entry';\r\nimport { WhiteboardCanvas } from './whiteboard';\r\nimport { WhiteboardCanvasService } from './whiteboard-canvas.service';\r\n\r\n@Injectable()\r\nexport class WhiteboardInstanceService extends DefaultElementService<\r\n  WhiteboardInstance,\r\n  WhiteboardInstanceInit\r\n> {\r\n  protected readonly typeName = WhiteboardInstance.typeName;\r\n\r\n  protected readonly elementConstructor = WhiteboardInstance;\r\n\r\n  constructor(\r\n    pouchdbService: PouchdbService,\r\n    private whiteboardCanvasService: WhiteboardCanvasService\r\n  ) {\r\n    super(pouchdbService);\r\n  }\r\n\r\n  async addByTemplate(\r\n    name: string,\r\n    template: WhiteboardTemplate\r\n  ): Promise<WhiteboardInstance> {\r\n    const instance = new WhiteboardInstance(undefined, {\r\n      name,\r\n      whiteboard: await this.whiteboardCanvasService.setReadOnly(\r\n        template.whiteboard\r\n      ),\r\n    });\r\n    await this.save(instance);\r\n    return instance;\r\n  }\r\n\r\n  async saveWhiteboardCanvas(\r\n    id: DbId,\r\n    whiteboardCanvas: WhiteboardCanvas\r\n  ): Promise<void> {\r\n    const template = await this.get(id);\r\n    template.whiteboard = whiteboardCanvas;\r\n    await this.save(template);\r\n  }\r\n}\r\n","import { Whiteboard, WhiteboardEntry, WhiteboardInit } from './whiteboard';\r\n\r\nexport interface WhiteboardInstanceInit extends WhiteboardInit {}\r\n\r\nexport interface WhiteboardInstanceEntry extends WhiteboardEntry {}\r\n\r\nexport class WhiteboardInstance\r\n  extends Whiteboard\r\n  implements WhiteboardInstanceInit\r\n{\r\n  static readonly typeName = 'WhiteboardInstance';\r\n\r\n  constructor(\r\n    entry: WhiteboardInstanceEntry | undefined,\r\n    init: WhiteboardInstanceInit | undefined\r\n  ) {\r\n    super(entry, init, WhiteboardInstance.typeName);\r\n  }\r\n\r\n  toDb(): WhiteboardInstanceEntry {\r\n    return super.toDb();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  MetaModelApi,\r\n  Reference,\r\n} from '../development-process-registry/meta-model-definition';\r\nimport { ArtifactDataReference } from '../development-process-registry/running-process/artifact-data';\r\nimport { Router } from '@angular/router';\r\nimport { WhiteboardInstanceService } from './whiteboard-instance.service';\r\nimport { WhiteboardInstance } from './whiteboard-instance';\r\n\r\n@Injectable()\r\nexport class WhiteboardMetaModelApiService implements MetaModelApi {\r\n  viewMethod?: (\r\n    model: ArtifactDataReference,\r\n    router: Router,\r\n    reference: Reference\r\n  ) => void;\r\n\r\n  constructor(private whiteboardInstanceService: WhiteboardInstanceService) {}\r\n\r\n  async copy(model: ArtifactDataReference): Promise<ArtifactDataReference> {\r\n    const instance = await this.whiteboardInstanceService.get(model.id);\r\n    instance.resetDatabaseState();\r\n    await this.whiteboardInstanceService.add(instance);\r\n    return {\r\n      id: instance._id,\r\n      type: WhiteboardInstance.typeName,\r\n    };\r\n  }\r\n\r\n  async getName(model: ArtifactDataReference): Promise<string | undefined> {\r\n    const instance = await this.whiteboardInstanceService.get(model.id);\r\n    return instance.name;\r\n  }\r\n\r\n  async remove(model: ArtifactDataReference): Promise<void> {\r\n    await this.whiteboardInstanceService.delete(model.id);\r\n  }\r\n\r\n  view(\r\n    model: ArtifactDataReference,\r\n    router: Router,\r\n    reference: Reference\r\n  ): void {\r\n    if (this.viewMethod == null) {\r\n      console.warn('No module to view whiteboards added');\r\n    } else {\r\n      this.viewMethod(model, router, reference);\r\n    }\r\n  }\r\n}\r\n","import { APP_INITIALIZER, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { WhiteboardMetaModelService } from './whiteboard-meta-model.service';\r\nimport { WhiteboardMetaModelApiService } from './whiteboard-meta-model-api.service';\r\nimport { WhiteboardInstanceService } from './whiteboard-instance.service';\r\nimport { WhiteboardCanvasService } from './whiteboard-canvas.service';\r\n\r\n@NgModule({\r\n  providers: [\r\n    WhiteboardCanvasService,\r\n    WhiteboardInstanceService,\r\n    WhiteboardMetaModelService,\r\n    WhiteboardMetaModelApiService,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory:\r\n        (whiteboardMetaModelModule: WhiteboardMetaModelService) => (): void =>\r\n          whiteboardMetaModelModule.init(),\r\n      deps: [WhiteboardMetaModelService],\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class WhiteboardMetaModelModule {\r\n  // see https://angular.io/guide/singleton-services#prevent-reimport-of-the-greetingmodule\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    whiteboardMetaModelModule?: WhiteboardMetaModelModule\r\n  ) {\r\n    if (whiteboardMetaModelModule) {\r\n      throw new Error(\r\n        'WhiteboardMetaModelModule is already loaded. Import it in the AppModule only.'\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MetaModelService } from '../development-process-registry/meta-model.service';\r\nimport {\r\n  MetaModelDefinition,\r\n  MetaModelIdentifier,\r\n  Reference,\r\n} from '../development-process-registry/meta-model-definition';\r\nimport { Whiteboard } from './whiteboard';\r\nimport { WhiteboardInstance } from './whiteboard-instance';\r\nimport { WhiteboardMetaModelApiService } from './whiteboard-meta-model-api.service';\r\nimport { ArtifactDataReference } from '../development-process-registry/running-process/artifact-data';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class WhiteboardMetaModelService {\r\n  readonly whiteboardMetaModelIdentifier: Readonly<MetaModelIdentifier> = {\r\n    name: 'Whiteboard',\r\n    type: WhiteboardInstance.typeName,\r\n  };\r\n\r\n  constructor(\r\n    private metaModelService: MetaModelService,\r\n    private whiteboardMetaModelApiService: WhiteboardMetaModelApiService\r\n  ) {}\r\n\r\n  init(): void {\r\n    const definition: MetaModelDefinition = {\r\n      ...this.whiteboardMetaModelIdentifier,\r\n      api: this.whiteboardMetaModelApiService,\r\n    };\r\n    this.metaModelService.registerMetaModel(definition);\r\n    console.log('Registered Whiteboard Meta Model');\r\n  }\r\n\r\n  registerViewMethod(\r\n    view: (\r\n      model: ArtifactDataReference,\r\n      router: Router,\r\n      reference: Reference\r\n    ) => Promise<void>\r\n  ): void {\r\n    this.whiteboardMetaModelApiService.viewMethod = view;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WhiteboardMetaModelModule } from './whiteboard-meta-model.module';\r\nimport { DefaultElementService } from '../database/default-element.service';\r\nimport {\r\n  WhiteboardTemplate,\r\n  WhiteboardTemplateInit,\r\n} from './whiteboard-template';\r\nimport { PouchdbService } from '../database/pouchdb.service';\r\nimport { WhiteboardCanvasService } from './whiteboard-canvas.service';\r\nimport { DbId } from '../database/database-entry';\r\nimport { WhiteboardCanvas } from './whiteboard';\r\n\r\n@Injectable({\r\n  providedIn: WhiteboardMetaModelModule,\r\n})\r\nexport class WhiteboardTemplateService extends DefaultElementService<\r\n  WhiteboardTemplate,\r\n  WhiteboardTemplateInit\r\n> {\r\n  protected readonly typeName = WhiteboardTemplate.typeName;\r\n\r\n  protected readonly elementConstructor = WhiteboardTemplate;\r\n\r\n  constructor(\r\n    pouchdbService: PouchdbService,\r\n    private whiteboardCanvasService: WhiteboardCanvasService\r\n  ) {\r\n    super(pouchdbService);\r\n  }\r\n\r\n  getWhiteboardTemplateInitialization(name: string): WhiteboardTemplateInit {\r\n    return {\r\n      name,\r\n      whiteboard: this.whiteboardCanvasService.getEmptyWhiteboardCanvas(),\r\n    };\r\n  }\r\n\r\n  async saveWhiteboardCanvas(\r\n    id: DbId,\r\n    whiteboardCanvas: WhiteboardCanvas\r\n  ): Promise<void> {\r\n    const template = await this.get(id);\r\n    template.whiteboard = whiteboardCanvas;\r\n    await this.save(template);\r\n  }\r\n}\r\n","import { Whiteboard, WhiteboardEntry, WhiteboardInit } from './whiteboard';\r\nimport { Author, AuthorEntry, AuthorInit } from '../model/author';\r\n\r\nexport interface WhiteboardTemplateInit extends WhiteboardInit {\r\n  author?: AuthorInit;\r\n  description?: string;\r\n}\r\n\r\nexport interface WhiteboardTemplateEntry extends WhiteboardEntry {\r\n  author: AuthorEntry;\r\n  description: string;\r\n}\r\n\r\nexport class WhiteboardTemplate\r\n  extends Whiteboard\r\n  implements WhiteboardTemplateInit\r\n{\r\n  static readonly typeName = 'WhiteboardTemplate';\r\n\r\n  author: Author;\r\n  description: string = '';\r\n\r\n  constructor(\r\n    entry: WhiteboardTemplateEntry | undefined,\r\n    init: WhiteboardTemplateInit | undefined\r\n  ) {\r\n    super(entry, init, WhiteboardTemplate.typeName);\r\n    const element = entry ?? init!;\r\n    this.description = element.description ?? this.description;\r\n    if (entry != null) {\r\n      this.author = new Author(entry.author, undefined);\r\n    } else {\r\n      this.author = new Author(undefined, init!.author ?? {});\r\n    }\r\n  }\r\n\r\n  toDb(): WhiteboardTemplateEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      description: this.description,\r\n      author: this.author.toDb(),\r\n    };\r\n  }\r\n}\r\n","import { DatabaseModel } from '../database/database-model';\r\nimport {\r\n  DatabaseRootEntry,\r\n  DatabaseRootInit,\r\n  DbType,\r\n} from '../database/database-entry';\r\n\r\nexport type WhiteboardCanvas = string;\r\n\r\nexport interface WhiteboardInit extends DatabaseRootInit {\r\n  name: string;\r\n  whiteboard: WhiteboardCanvas;\r\n}\r\n\r\nexport interface WhiteboardEntry extends DatabaseRootEntry {\r\n  name: string;\r\n  whiteboard: WhiteboardCanvas;\r\n}\r\n\r\nexport class Whiteboard extends DatabaseModel implements WhiteboardInit {\r\n  name: string;\r\n  whiteboard: WhiteboardCanvas;\r\n\r\n  constructor(\r\n    entry: WhiteboardEntry | undefined,\r\n    init: WhiteboardInit | undefined,\r\n    type: DbType\r\n  ) {\r\n    super(entry, init, type);\r\n    const element = entry ?? init!;\r\n    this.name = element.name;\r\n    this.whiteboard = element.whiteboard;\r\n  }\r\n\r\n  toDb(): WhiteboardEntry {\r\n    return {\r\n      ...super.toDb(),\r\n      name: this.name,\r\n      whiteboard: this.whiteboard,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { WhiteboardTemplate } from '../../../whiteboard-meta-model/whiteboard-template';\r\nimport { WhiteboardTemplateService } from '../../../whiteboard-meta-model/whiteboard-template.service';\r\nimport { WhiteboardInstanceService } from '../../../whiteboard-meta-model/whiteboard-instance.service';\r\nimport { WhiteboardResolveService } from '../../whiteboard-resolve.service';\r\nimport { CreateWhiteboardPredefinedInput } from '../select-whiteboard-template-configuration/select-whiteboard-template-configuration.component';\r\n\r\n@Component({\r\n  selector: 'app-create-whiteboard-instance',\r\n  templateUrl: './create-whiteboard-instance.component.html',\r\n  styleUrls: ['./create-whiteboard-instance.component.css'],\r\n  providers: [ProcessApiService],\r\n})\r\nexport class CreateWhiteboardInstanceComponent implements OnInit {\r\n  whiteboardTemplate?: WhiteboardTemplate;\r\n  form: FormGroup = this.fb.group({\r\n    name: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private processApiService: ProcessApiService,\r\n    private whiteboardInstanceService: WhiteboardInstanceService,\r\n    private whiteboardResolveService: WhiteboardResolveService,\r\n    private whiteboardTemplateService: WhiteboardTemplateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.processApiService.loaded.subscribe(() =>\r\n      this.loadWhiteboardTemplate()\r\n    );\r\n  }\r\n\r\n  async submit(): Promise<void> {\r\n    if (\r\n      this.processApiService.stepInfo != null &&\r\n      this.whiteboardTemplate != null\r\n    ) {\r\n      const instance = await this.whiteboardInstanceService.addByTemplate(\r\n        this.nameControl.value,\r\n        this.whiteboardTemplate\r\n      );\r\n      this.whiteboardResolveService.resolve(\r\n        this.processApiService.stepInfo,\r\n        instance._id\r\n      );\r\n    }\r\n  }\r\n\r\n  private async loadWhiteboardTemplate(): Promise<void> {\r\n    this.whiteboardTemplate = await this.whiteboardTemplateService.get(\r\n      (\r\n        this.runningMethod.currentStep\r\n          .predefinedInput as CreateWhiteboardPredefinedInput\r\n      ).templateId!\r\n    );\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.processApiService.isCorrectStep();\r\n  }\r\n\r\n  get nameControl(): FormControl {\r\n    return this.form.get('name') as FormControl;\r\n  }\r\n}\r\n","<app-api-navigation apiName=\"Create Place\"></app-api-navigation>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"runningMethod != null && isCorrectStep()\"\r\n  role=\"main\"\r\n  class=\"container\"\r\n>\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Create Place</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n        <div class=\"form-group row\">\r\n          <label for=\"name\" class=\"col-sm-4 col-form-label\">Name</label>\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n              [class.is-invalid]=\"nameControl.invalid\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!form.valid && whiteboardTemplate != null\"\r\n            >\r\n              Create Place\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <!--<div *ngIf=\"companyModel\" class=\"my-3 p-3 bg-white rounded shadow-sm\"> TODO add preview\r\n    <h6 class=\"border-bottom border-gray pb-2\">\r\n      Canvas Artifact Preview: {{ companyModel.definition.name }}\r\n    </h6>\r\n    <section>\r\n      <app-feature-model [featureModel]=\"companyModel\"></app-feature-model>\r\n    </section>\r\n    <section class=\"mt-3\" *ngIf=\"companyModel.definition.description\">\r\n      <h6>Description</h6>\r\n      <p class=\"mb-0\">{{ companyModel.definition.description }}</p>\r\n    </section>\r\n  </div>-->\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { RunningProcessService } from '../../../development-process-registry/running-process/running-process.service';\r\nimport { Comment } from '../../../development-process-registry/running-process/comment';\r\nimport { RunningProcess } from '../../../development-process-registry/running-process/running-process';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { WhiteboardResolveService } from '../../whiteboard-resolve.service';\r\nimport { WhiteboardInstance } from '../../../whiteboard-meta-model/whiteboard-instance';\r\nimport { WhiteboardCanvasComponent } from '../../whiteboard-canvas/whiteboard-canvas.component';\r\nimport { WhiteboardCanvasControls } from '../../whiteboard-canvas/whiteboard-canvas-controls';\r\nimport { WhiteboardInstanceService } from '../../../whiteboard-meta-model/whiteboard-instance.service';\r\nimport { WhiteboardInstanceLoaderService } from '../../shared/whiteboard-instance-loader.service';\r\nimport { WhiteboardEditComponent } from '../../shared/whiteboard-edit-component';\r\n\r\n@Component({\r\n  selector: 'app-edit-whiteboard-instance',\r\n  templateUrl: './edit-whiteboard-instance.component.html',\r\n  styleUrls: ['./edit-whiteboard-instance.component.css'],\r\n  providers: [ProcessApiService, WhiteboardInstanceLoaderService],\r\n})\r\nexport class EditWhiteboardInstanceComponent\r\n  implements WhiteboardEditComponent\r\n{\r\n  @ViewChild(WhiteboardCanvasComponent)\r\n  whiteboardCanvasControls!: WhiteboardCanvasControls;\r\n\r\n  private changesSaved = false;\r\n\r\n  constructor(\r\n    private processApiService: ProcessApiService,\r\n    private runningProcessService: RunningProcessService,\r\n    private whiteboardInstanceLoaderService: WhiteboardInstanceLoaderService,\r\n    private whiteboardInstanceService: WhiteboardInstanceService,\r\n    private whiteboardResolveService: WhiteboardResolveService\r\n  ) {}\r\n\r\n  async addComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.addComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async updateComment(comment: Comment): Promise<void> {\r\n    await this.runningProcessService.updateComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      comment\r\n    );\r\n  }\r\n\r\n  async removeComment(commentId: string): Promise<void> {\r\n    await this.runningProcessService.removeComment(\r\n      this.runningProcess._id,\r\n      this.runningMethod.executionId,\r\n      commentId\r\n    );\r\n  }\r\n\r\n  async finish(): Promise<void> {\r\n    if (await this.whiteboardChanged()) {\r\n      await this.saveWhiteboard();\r\n      this.changesSaved = true;\r\n    }\r\n    if (this.whiteboardInstance != null) {\r\n      this.whiteboardResolveService.resolve(\r\n        this.processApiService.stepInfo,\r\n        this.whiteboardInstance._id\r\n      );\r\n    }\r\n  }\r\n\r\n  async saveWhiteboard(): Promise<void> {\r\n    if (\r\n      this.whiteboardInstance != null &&\r\n      this.runningMethod != null &&\r\n      this.isCorrectStep()\r\n    ) {\r\n      const whiteboard = this.whiteboardCanvasControls.save();\r\n      await this.whiteboardInstanceService.saveWhiteboardCanvas(\r\n        this.whiteboardInstance._id,\r\n        whiteboard\r\n      );\r\n    }\r\n  }\r\n\r\n  get whiteboardInstance(): WhiteboardInstance | undefined {\r\n    return this.whiteboardInstanceLoaderService.whiteboardInstance;\r\n  }\r\n\r\n  private get runningProcess(): RunningProcess {\r\n    return this.processApiService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.processApiService.isCorrectStep();\r\n  }\r\n\r\n  async whiteboardChanged(): Promise<boolean> {\r\n    if (this.changesSaved) {\r\n      return false;\r\n    }\r\n    if (\r\n      this.whiteboardCanvasControls != null &&\r\n      this.whiteboardInstance != null\r\n    ) {\r\n      return (\r\n        this.whiteboardCanvasControls.save() !==\r\n        this.whiteboardInstance.whiteboard\r\n      );\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<app-api-navigation apiName=\"Edit Place\"></app-api-navigation>\r\n\r\n<app-step-errors></app-step-errors>\r\n\r\n<main\r\n  *ngIf=\"whiteboardInstance && runningMethod && isCorrectStep()\"\r\n  role=\"main\"\r\n>\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Place</h6>\r\n    <app-whiteboard-canvas\r\n      [whiteboardCanvas]=\"whiteboardInstance.whiteboard\"\r\n    ></app-whiteboard-canvas>\r\n    <button class=\"btn btn-primary mt-1\" (click)=\"saveWhiteboard()\">\r\n      Save Whiteboard\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <app-running-process-method-comments\r\n        [comments]=\"runningMethod.comments\"\r\n        (addComment)=\"addComment($event)\"\r\n        (updateComment)=\"updateComment($event)\"\r\n        (removeComment)=\"removeComment($event)\"\r\n      ></app-running-process-method-comments>\r\n    </div>\r\n\r\n    <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n      <h6 class=\"border-bottom border-gray pb-2\">Finish editing</h6>\r\n      <button class=\"btn btn-sm btn-primary btn-block\" (click)=\"finish()\">\r\n        Finish editing\r\n      </button>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BmProcess } from '../../../development-process-registry/bm-process/bm-process';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { DbId } from '../../../database/database-entry';\r\nimport { WhiteboardTemplateService } from '../../../whiteboard-meta-model/whiteboard-template.service';\r\nimport { WhiteboardTemplateEntry } from '../../../whiteboard-meta-model/whiteboard-template';\r\nimport { ConfigurationFormComponent } from '../../../development-process-registry/module-api/configuration-form-component';\r\n\r\nexport interface CreateWhiteboardPredefinedInput {\r\n  templateId: DbId | undefined;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-select-whiteboard-template-configuration',\r\n  templateUrl: './select-whiteboard-template-configuration.component.html',\r\n  styleUrls: ['./select-whiteboard-template-configuration.component.css'],\r\n})\r\nexport class SelectWhiteboardTemplateConfigurationComponent\r\n  implements OnInit, ConfigurationFormComponent\r\n{\r\n  bmProcess!: BmProcess;\r\n  formGroup!: FormGroup;\r\n\r\n  whiteboardTemplates?: WhiteboardTemplateEntry[];\r\n\r\n  constructor(private whiteboardTemplateService: WhiteboardTemplateService) {}\r\n\r\n  ngOnInit(): void {\r\n    void this.loadWhiteboardTemplates();\r\n  }\r\n\r\n  async loadWhiteboardTemplates(): Promise<void> {\r\n    this.whiteboardTemplates = await this.whiteboardTemplateService.getList();\r\n  }\r\n\r\n  get templateIdControl(): FormControl {\r\n    return this.formGroup.get('templateId') as FormControl;\r\n  }\r\n}\r\n","<ng-container [formGroup]=\"formGroup\">\r\n  <div class=\"form-group form-row\">\r\n    <label for=\"templateSelector\" class=\"col-sm-6 col-form-label\"\r\n      >Whiteboard Template</label\r\n    >\r\n    <div class=\"col-sm-6\">\r\n      <select\r\n        id=\"templateSelector\"\r\n        formControlName=\"templateId\"\r\n        class=\"form-control\"\r\n        [class.is-invalid]=\"\r\n          templateIdControl.invalid && templateIdControl.touched\r\n        \"\r\n      >\r\n        <option\r\n          *ngFor=\"let template of whiteboardTemplates\"\r\n          [ngValue]=\"template._id\"\r\n        >\r\n          {{ template.name }}\r\n        </option>\r\n        <option *ngIf=\"whiteboardTemplates == null\">Loading...</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { WhiteboardInstance } from '../../../whiteboard-meta-model/whiteboard-instance';\r\nimport { WhiteboardInstanceLoaderService } from '../../shared/whiteboard-instance-loader.service';\r\nimport { ProcessApiService } from '../../../development-process-registry/module-api/process-api.service';\r\nimport { RunningMethod } from '../../../development-process-registry/running-process/running-method';\r\nimport { WhiteboardResolveService } from '../../whiteboard-resolve.service';\r\nimport { RunningArtifact } from '../../../development-process-registry/running-process/running-artifact';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ConcreteArtifactService } from '../../../development-process-registry/running-process/concrete-artifact.service';\r\nimport { RunningProcess } from '../../../development-process-registry/running-process/running-process';\r\n\r\n@Component({\r\n  selector: 'app-view-whiteboard-instance',\r\n  templateUrl: './view-whiteboard-instance.component.html',\r\n  styleUrls: ['./view-whiteboard-instance.component.css'],\r\n  providers: [ProcessApiService, WhiteboardInstanceLoaderService],\r\n})\r\nexport class ViewWhiteboardInstanceComponent implements OnInit, OnDestroy {\r\n  artifact?: RunningArtifact;\r\n  version?: number;\r\n\r\n  private querySubscription?: Subscription;\r\n\r\n  constructor(\r\n    private concreteArtifactService: ConcreteArtifactService,\r\n    private processApiService: ProcessApiService,\r\n    private route: ActivatedRoute,\r\n    private whiteboardInstanceLoaderService: WhiteboardInstanceLoaderService,\r\n    private whiteboardResolveService: WhiteboardResolveService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.querySubscription = this.route.queryParamMap.subscribe(\r\n      async (params) => {\r\n        if (params.has('artifactId')) {\r\n          this.artifact = await this.concreteArtifactService.get(\r\n            params.get('artifactId')!\r\n          );\r\n          if (params.has('versionId')) {\r\n            this.version = +params.get('versionId')!;\r\n          } else {\r\n            this.version = undefined;\r\n          }\r\n        } else {\r\n          this.artifact = undefined;\r\n          this.version = undefined;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.querySubscription) {\r\n      this.querySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  finish(): void {\r\n    if (this.whiteboardInstance != null) {\r\n      this.whiteboardResolveService.resolve(\r\n        this.processApiService.stepInfo,\r\n        this.whiteboardInstance._id\r\n      );\r\n    }\r\n  }\r\n\r\n  get whiteboardInstance(): WhiteboardInstance | undefined {\r\n    return this.whiteboardInstanceLoaderService.whiteboardInstance;\r\n  }\r\n\r\n  get runningProcess(): RunningProcess | undefined {\r\n    return this.processApiService.runningProcess;\r\n  }\r\n\r\n  get runningMethod(): RunningMethod | undefined {\r\n    return this.processApiService.runningMethod;\r\n  }\r\n\r\n  isCorrectStep(): boolean {\r\n    return this.runningMethod != null && this.processApiService.isCorrectStep();\r\n  }\r\n\r\n  get queryParams(): { artifactId: string } | undefined {\r\n    if (this.artifact != null) {\r\n      return {\r\n        artifactId: this.artifact._id,\r\n      };\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","<app-api-navigation\r\n  *ngIf=\"runningProcess != null\"\r\n  apiName=\"View Whiteboard\"\r\n></app-api-navigation>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\" *ngIf=\"runningProcess == null\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a\r\n      *ngIf=\"artifact != null\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'concreteArtifacts']\"\r\n    >\r\n      Concrete Artifacts\r\n    </a>\r\n    <a\r\n      *ngIf=\"artifact != null\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'concreteArtifacts', 'detail', artifact._id]\"\r\n    >\r\n      {{ artifact.identifier }}\r\n    </a>\r\n    <a\r\n      *ngIf=\"artifact != null && version != null\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"['/', 'concreteArtifacts', 'detail', artifact._id]\"\r\n    >\r\n      Version #{{ version + 1 }}\r\n    </a>\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\" [queryParams]=\"queryParams\">\r\n      View Whiteboard\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"whiteboardInstance\" role=\"main\">\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Place</h6>\r\n    <app-whiteboard-canvas-view\r\n      [whiteboardCanvas]=\"whiteboardInstance.whiteboard\"\r\n    ></app-whiteboard-canvas-view>\r\n  </div>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\" *ngIf=\"isCorrectStep()\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Finish viewing</h6>\r\n    <button class=\"btn btn-sm btn-primary btn-block\" (click)=\"finish()\">\r\n      Finish viewing\r\n    </button>\r\n  </div>\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirm-leave-whiteboard-modal',\r\n  templateUrl: './confirm-leave-whiteboard-modal.component.html',\r\n  styleUrls: ['./confirm-leave-whiteboard-modal.component.css'],\r\n})\r\nexport class ConfirmLeaveWhiteboardModalComponent {\r\n  constructor(private activeModal: NgbActiveModal) {}\r\n\r\n  close(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  leave(): void {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.activeModal.close(true);\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">You have unsaved changes in the whiteboard</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n  You can stay on this page, discard them or save them.\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n    Close\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"leave()\">\r\n    Leave without saving\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveChanges()\">\r\n    Save changes\r\n  </button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanDeactivate,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { WhiteboardEditComponent } from './whiteboard-edit-component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmLeaveWhiteboardModalComponent } from '../confirm-leave-whiteboard-modal/confirm-leave-whiteboard-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WhiteboardChangeGuard\r\n  implements CanDeactivate<WhiteboardEditComponent>\r\n{\r\n  constructor(private modalService: NgbModal) {}\r\n\r\n  async canDeactivate(\r\n    component: WhiteboardEditComponent,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot\r\n  ): Promise<boolean> {\r\n    const changed = await component.whiteboardChanged();\r\n    if (changed) {\r\n      const modal = this.modalService.open(\r\n        ConfirmLeaveWhiteboardModalComponent,\r\n        {\r\n          size: 'lg',\r\n        }\r\n      );\r\n      try {\r\n        const result = await modal.result;\r\n        if (result) {\r\n          await component.saveWhiteboard();\r\n        }\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { DbId } from '../../database/database-entry';\r\nimport { WhiteboardInstance } from '../../whiteboard-meta-model/whiteboard-instance';\r\nimport { WhiteboardInstanceService } from '../../whiteboard-meta-model/whiteboard-instance.service';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WhiteboardInstanceLoaderService extends ElementLoaderService {\r\n  whiteboardInstance?: WhiteboardInstance;\r\n\r\n  constructor(\r\n    private whiteboardInstanceService: WhiteboardInstanceService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const whiteboardInstanceId = paramMap.get('id')!;\r\n    this.changesFeed = this.whiteboardInstanceService\r\n      .getChangesFeed(whiteboardInstanceId)\r\n      .subscribe(() => this.loadWhiteboardInstance(whiteboardInstanceId));\r\n    void this.loadWhiteboardInstance(whiteboardInstanceId);\r\n  }\r\n\r\n  private async loadWhiteboardInstance(\r\n    whiteboardInstanceId: DbId\r\n  ): Promise<void> {\r\n    this.whiteboardInstance = await this.whiteboardInstanceService.get(\r\n      whiteboardInstanceId\r\n    );\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ElementLoaderService } from '../../database/element-loader.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { WhiteboardTemplate } from '../../whiteboard-meta-model/whiteboard-template';\r\nimport { WhiteboardTemplateService } from '../../whiteboard-meta-model/whiteboard-template.service';\r\nimport { DbId } from '../../database/database-entry';\r\n\r\n@Injectable()\r\nexport class WhiteboardTemplateLoaderService extends ElementLoaderService {\r\n  whiteboardTemplate?: WhiteboardTemplate;\r\n\r\n  constructor(\r\n    private whiteboardTemplateService: WhiteboardTemplateService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    super(route);\r\n  }\r\n\r\n  protected initParams(paramMap: ParamMap): void {\r\n    const whiteboardTemplateId = paramMap.get('id')!;\r\n    this.changesFeed = this.whiteboardTemplateService\r\n      .getChangesFeed(whiteboardTemplateId)\r\n      .subscribe(() => this.loadWhiteboardTemplate(whiteboardTemplateId));\r\n    void this.loadWhiteboardTemplate(whiteboardTemplateId);\r\n  }\r\n\r\n  private async loadWhiteboardTemplate(\r\n    whiteboardTemplateId: DbId\r\n  ): Promise<void> {\r\n    this.whiteboardTemplate = await this.whiteboardTemplateService.get(\r\n      whiteboardTemplateId\r\n    );\r\n    this.elementLoaded();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ModuleApiService } from '../development-process-registry/module-api/module-api-service';\r\nimport { MethodExecutionInput } from '../development-process-registry/module-api/method-execution-input';\r\nimport { StepInfo } from '../development-process-registry/module-api/step-info';\r\nimport { ArtifactDataReference } from '../development-process-registry/running-process/artifact-data';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WhiteboardApiService implements ModuleApiService {\r\n  constructor() {}\r\n\r\n  createWhiteboard(input: MethodExecutionInput): void {\r\n    const stepInfo = this.getStepInfo(input);\r\n    void input.router.navigate(['whiteboard', 'instance', 'create'], {\r\n      queryParams: stepInfo,\r\n    });\r\n  }\r\n\r\n  editWhiteboard(input: MethodExecutionInput): void {\r\n    const stepInfo: StepInfo = this.getStepInfo(input);\r\n    const reference: ArtifactDataReference =\r\n      input.inputStepArtifacts[0].data.data;\r\n    void input.router.navigate(\r\n      ['whiteboard', 'instance', reference.id, 'edit'],\r\n      { queryParams: stepInfo }\r\n    );\r\n  }\r\n\r\n  viewWhiteboard(input: MethodExecutionInput): void {\r\n    const stepInfo: StepInfo = this.getStepInfo(input);\r\n    const reference: ArtifactDataReference =\r\n      input.inputStepArtifacts[0].data.data;\r\n    void input.router.navigate(\r\n      ['whiteboard', 'instance', reference.id, 'view'],\r\n      { queryParams: stepInfo }\r\n    );\r\n  }\r\n\r\n  executeMethod(methodName: string, input: MethodExecutionInput): void {\r\n    switch (methodName) {\r\n      case 'createWhiteboard':\r\n        this.createWhiteboard(input);\r\n        break;\r\n      case 'editWhiteboard':\r\n        this.editWhiteboard(input);\r\n        break;\r\n      case 'viewWhiteboard':\r\n        this.viewWhiteboard(input);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private getStepInfo(input: MethodExecutionInput): StepInfo {\r\n    return {\r\n      step: input.runningMethod.currentStepNumber,\r\n      executionId: input.runningMethod.executionId,\r\n      runningProcessId: input.runningProcess._id,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { fabric } from 'fabric';\r\nimport { WhiteboardCanvas } from '../../whiteboard-meta-model/whiteboard';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { WhiteboardCanvasService } from '../../whiteboard-meta-model/whiteboard-canvas.service';\r\n\r\n@Component({\r\n  selector: 'app-whiteboard-canvas-view',\r\n  templateUrl: './whiteboard-canvas-view.component.html',\r\n  styleUrls: ['./whiteboard-canvas-view.component.css'],\r\n})\r\nexport class WhiteboardCanvasViewComponent implements AfterViewInit, OnDestroy {\r\n  @Input() whiteboardCanvas!: WhiteboardCanvas;\r\n\r\n  @ViewChild('canvasElement') canvasElement!: ElementRef<HTMLCanvasElement>;\r\n  @ViewChild('canvasWrapper') canvasWrapper!: ElementRef<HTMLDivElement>;\r\n\r\n  private canvas!: fabric.Canvas;\r\n\r\n  private resizeSubscription?: Subscription;\r\n\r\n  private zoomValue: number = 1;\r\n  private lastMousePosition?: fabric.Point;\r\n  private moving: boolean = false;\r\n\r\n  constructor(private whiteboardCanvasService: WhiteboardCanvasService) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    void this.initCanvas();\r\n    this.resizeSubscription = fromEvent(window, 'resize')\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(() => this.resize())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.resizeSubscription != null) {\r\n      this.resizeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private async initCanvas(): Promise<void> {\r\n    this.canvas =\r\n      await this.whiteboardCanvasService.getReadonlyWhiteboardCanvas(\r\n        this.canvasElement.nativeElement,\r\n        this.whiteboardCanvas\r\n      );\r\n    this.resize();\r\n    this.canvas.on('mouse:move', (options) => this.mouseMove(options));\r\n    this.canvas.on('mouse:down', (options) => this.mouseDown(options));\r\n    this.canvas.on('mouse:up', () => this.mouseUp());\r\n  }\r\n\r\n  private resize(): void {\r\n    const newWidth = this.canvasWrapper.nativeElement.clientWidth;\r\n    this.canvas.setWidth(newWidth);\r\n    this.canvas.setHeight(newWidth / 3.5);\r\n    this.canvas.setZoom((newWidth * this.zoomValue) / 1140);\r\n  }\r\n\r\n  zoom(number: number): void {\r\n    this.zoomValue += number * 0.1;\r\n    this.resize();\r\n  }\r\n\r\n  zoomReset(): void {\r\n    this.zoomValue = 1;\r\n    this.resize();\r\n  }\r\n\r\n  private mouseMove(options: fabric.IEvent<MouseEvent>): void {\r\n    if (options.absolutePointer == null) {\r\n      return;\r\n    }\r\n    if (this.moving && this.lastMousePosition != null) {\r\n      const viewport = this.canvas.viewportTransform!;\r\n      viewport[4] += options.absolutePointer.x - this.lastMousePosition.x;\r\n      viewport[5] += options.absolutePointer.y - this.lastMousePosition.y;\r\n      this.canvas.setViewportTransform(viewport);\r\n    }\r\n  }\r\n\r\n  private mouseDown(options: fabric.IEvent<MouseEvent>): void {\r\n    if (options.absolutePointer != null) {\r\n      this.lastMousePosition = options.absolutePointer;\r\n      this.moving = true;\r\n    }\r\n  }\r\n\r\n  private mouseUp(): void {\r\n    this.moving = false;\r\n  }\r\n}\r\n","<div class=\"btn-group mb-1\" role=\"group\" aria-label=\"Zoom\">\r\n  <button type=\"button\" class=\"btn btn-light\" (click)=\"zoom(-1)\">\r\n    <i class=\"fas fa-minus fa-fw whiteboard-icon\"></i\r\n    ><span class=\"sr-only\">Zoom out</span>\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-light\" (click)=\"zoom(1)\">\r\n    <i class=\"fas fa-plus fa-fw whiteboard-icon\"></i\r\n    ><span class=\"sr-only\">Zoom in</span>\r\n  </button>\r\n  <button type=\"button\" class=\"ml-3 btn btn-light\" (click)=\"zoomReset()\">\r\n    <b>Reset zoom</b>\r\n  </button>\r\n</div>\r\n<div class=\"border\" #canvasWrapper>\r\n  <canvas #canvasElement></canvas>\r\n</div>\r\n","export interface ColorDefinition {\r\n  name: string;\r\n  value: string | undefined;\r\n  darker: string | undefined;\r\n}\r\n\r\nexport const noColor: ColorDefinition = {\r\n  name: 'no color',\r\n  value: undefined,\r\n  darker: undefined,\r\n};\r\n\r\nexport const colors: ColorDefinition[] = [\r\n  {\r\n    name: 'black',\r\n    value: '#000000',\r\n    darker: '#000000',\r\n  },\r\n  {\r\n    name: 'gray',\r\n    value: '#757575',\r\n    darker: '#363636',\r\n  },\r\n  {\r\n    name: 'white',\r\n    value: '#FFFFFF',\r\n    darker: '#BFBFBF',\r\n  },\r\n  {\r\n    name: 'yellow',\r\n    value: '#FFFFA5',\r\n    darker: '#E6E695',\r\n  },\r\n  {\r\n    name: 'blue',\r\n    value: '#58A7E0',\r\n    darker: '#3F78A1',\r\n  },\r\n  {\r\n    name: 'red',\r\n    value: '#E02E2B',\r\n    darker: '#A1211F',\r\n  },\r\n  {\r\n    name: 'green',\r\n    value: '#58E058',\r\n    darker: '#3FA13F',\r\n  },\r\n];\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { fabric } from 'fabric';\r\nimport { ColorDefinition, colors, noColor } from './color-definition';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CanvasNote } from '../../whiteboard-meta-model/canvas-note';\r\n\r\nexport enum ColorControls {\r\n  FILL,\r\n  STROKE,\r\n}\r\n\r\n@Injectable()\r\nexport class ColorFormService implements OnDestroy {\r\n  private canvas?: fabric.Canvas;\r\n\r\n  colorForm: FormGroup = this.fb.group({\r\n    control: this.fb.control(ColorControls.FILL, Validators.required),\r\n    color: this.fb.control(undefined),\r\n  });\r\n\r\n  private colorFormSubscriptions: Subscription[] = [];\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  init(canvas: fabric.Canvas): void {\r\n    this.canvas = canvas;\r\n    this.colorFormSubscriptions.push(\r\n      this.colorControlControl.valueChanges.subscribe(() =>\r\n        this.updateColorForm()\r\n      )\r\n    );\r\n    this.colorFormSubscriptions.push(\r\n      this.colorControl.valueChanges\r\n        .pipe(filter((value) => value != null))\r\n        .subscribe((value: ColorDefinition) => this.setColor(value))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const subscription of this.colorFormSubscriptions) {\r\n      subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  updateColorForm(): void {\r\n    if (this.canvas != null) {\r\n      if (this.canvas.isDrawingMode) {\r\n        this.colorControl.setValue(\r\n          this.getColorFromValue(this.canvas.freeDrawingBrush.color)\r\n        );\r\n        return;\r\n      }\r\n      const objects = this.canvas.getActiveObjects();\r\n      if (objects.length === 0) {\r\n        this.colorControl.setValue(undefined);\r\n        return;\r\n      }\r\n      const colorControlValue = this.colorControlValue;\r\n      let key: 'fill' | 'stroke';\r\n      switch (colorControlValue) {\r\n        case ColorControls.STROKE:\r\n          key = 'stroke';\r\n          break;\r\n        case ColorControls.FILL:\r\n          key = 'fill';\r\n          break;\r\n        default:\r\n          this.colorControl.setValue(undefined);\r\n          return;\r\n      }\r\n      const firstObject = objects[0];\r\n      let colorValue: unknown;\r\n      if (\r\n        firstObject.type === 'textbox' &&\r\n        (firstObject as fabric.IText).isEditing\r\n      ) {\r\n        const text: fabric.IText = firstObject as fabric.IText;\r\n        const selectionStyles = text.getSelectionStyles();\r\n        if (selectionStyles.length === 0) {\r\n          this.colorControl.setValue(undefined);\r\n          return;\r\n        }\r\n        colorValue = selectionStyles[0][key];\r\n        for (const style of selectionStyles) {\r\n          if (colorValue !== style[key]) {\r\n            this.colorControl.setValue(undefined);\r\n            return;\r\n          }\r\n        }\r\n      } else {\r\n        colorValue = objects[0][key];\r\n        for (const object of objects) {\r\n          if (colorValue !== object[key]) {\r\n            this.colorControl.setValue(undefined);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      this.colorControl.setValue(this.getColorFromValue(colorValue));\r\n    } else {\r\n      throw new Error('ColorFormService not initialized');\r\n    }\r\n  }\r\n\r\n  private setColor(color: ColorDefinition): void {\r\n    if (this.canvas != null) {\r\n      if (this.canvas.isDrawingMode) {\r\n        this.canvas.freeDrawingBrush.color = color.value!;\r\n        return;\r\n      }\r\n      const objects = this.canvas.getActiveObjects();\r\n      for (const object of objects) {\r\n        if (object.type === 'canvasNote') {\r\n          const canvasNote = object as CanvasNote;\r\n          switch (this.colorControlValue) {\r\n            case ColorControls.FILL:\r\n              canvasNote.setFillColor(color.value, color.darker);\r\n              break;\r\n            case ColorControls.STROKE:\r\n              canvasNote.setStrokeColor(color.value);\r\n              break;\r\n          }\r\n        } else if (\r\n          object.type === 'textbox' &&\r\n          (object as fabric.IText).isEditing\r\n        ) {\r\n          const text: fabric.IText = object as fabric.IText;\r\n          switch (this.colorControlValue) {\r\n            case ColorControls.FILL:\r\n              text.setSelectionStyles({ fill: color.value });\r\n              break;\r\n            case ColorControls.STROKE:\r\n              text.setSelectionStyles({ stroke: color.value });\r\n              break;\r\n          }\r\n        } else {\r\n          switch (this.colorControlValue) {\r\n            case ColorControls.FILL:\r\n              object.set('fill', color.value);\r\n              break;\r\n            case ColorControls.STROKE:\r\n              object.set('stroke', color.value);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      this.canvas.renderAll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the correct color definition or undefined from any value.\r\n   *\r\n   * @param colorValue the color value to check\r\n   * @return the color definition or undefined if no color definition was found\r\n   */\r\n  private getColorFromValue(colorValue: unknown): ColorDefinition | undefined {\r\n    if (typeof colorValue === 'string') {\r\n      return colors.find((color) => color.value === colorValue);\r\n    } else if (colorValue == null) {\r\n      return noColor;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private get colorControlControl(): FormControl {\r\n    return this.colorForm.get('control') as FormControl;\r\n  }\r\n\r\n  private get colorControlValue(): ColorControls {\r\n    return this.colorControlControl.value;\r\n  }\r\n\r\n  private get colorControl(): FormControl {\r\n    return this.colorForm.get('color') as FormControl;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\nexport enum Controls {\r\n  VIEW,\r\n  MOVE,\r\n  DRAWING,\r\n  TEXT,\r\n  NOTE,\r\n  RECT,\r\n}\r\n\r\n@Injectable()\r\nexport class ControlFormService implements OnDestroy {\r\n  controlsForm: FormGroup = this.fb.group({\r\n    control: this.fb.control(Controls.VIEW, Validators.required),\r\n    colorMenu: this.fb.control(false, Validators.required),\r\n    fontMenu: this.fb.control(false, Validators.required),\r\n    propertiesMenu: this.fb.control(false, Validators.required),\r\n  });\r\n\r\n  private controlChangeSubscriptions: Subscription[] = [];\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    this.controlChangeSubscriptions.push(\r\n      this.colorMenuControl.valueChanges\r\n        .pipe(\r\n          filter((value) => value),\r\n          tap(() => {\r\n            this.fontMenuControl.setValue(false);\r\n            this.propertiesMenuControl.setValue(false);\r\n          })\r\n        )\r\n        .subscribe()\r\n    );\r\n    this.controlChangeSubscriptions.push(\r\n      this.fontMenuControl.valueChanges\r\n        .pipe(\r\n          filter((value) => value),\r\n          tap(() => {\r\n            this.colorMenuControl.setValue(false);\r\n            this.propertiesMenuControl.setValue(false);\r\n          })\r\n        )\r\n        .subscribe()\r\n    );\r\n    this.controlChangeSubscriptions.push(\r\n      this.propertiesMenuControl.valueChanges\r\n        .pipe(\r\n          filter((value) => value),\r\n          tap(() => {\r\n            this.colorMenuControl.setValue(false);\r\n            this.fontMenuControl.setValue(false);\r\n          })\r\n        )\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const subscription of this.controlChangeSubscriptions) {\r\n      subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  get controlControl(): FormControl {\r\n    return this.controlsForm.get('control') as FormControl;\r\n  }\r\n\r\n  get controlValue(): Controls {\r\n    return this.controlControl.value;\r\n  }\r\n\r\n  private get colorMenuControl(): FormControl {\r\n    return this.controlsForm.get('colorMenu') as FormControl;\r\n  }\r\n\r\n  get colorMenuShown(): boolean {\r\n    return this.colorMenuControl.value;\r\n  }\r\n\r\n  private get fontMenuControl(): FormControl {\r\n    return this.controlsForm.get('fontMenu') as FormControl;\r\n  }\r\n\r\n  get fontMenuShown(): boolean {\r\n    return this.fontMenuControl.value;\r\n  }\r\n\r\n  private get propertiesMenuControl(): FormControl {\r\n    return this.controlsForm.get('propertiesMenu') as FormControl;\r\n  }\r\n\r\n  get propertiesMenuShown(): boolean {\r\n    return this.propertiesMenuControl.value;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { fabric } from 'fabric';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class PropertiesFormService implements OnDestroy {\r\n  private canvas?: fabric.Canvas;\r\n\r\n  propertiesForm: FormGroup = this.fb.group({\r\n    width: this.fb.control(1, [Validators.required, Validators.min(0)]),\r\n  });\r\n\r\n  private propertiesFormSubscriptions: Subscription[] = [];\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  init(canvas: fabric.Canvas): void {\r\n    this.canvas = canvas;\r\n    this.propertiesFormSubscriptions.push(\r\n      this.widthControl.valueChanges\r\n        .pipe(filter((value) => value != null && value > 0))\r\n        .subscribe((value) => this.setWidth(value))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const subscription of this.propertiesFormSubscriptions) {\r\n      subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the properties form after the selection changed\r\n   * or the control changed\r\n   */\r\n  updatePropertiesForm(): void {\r\n    if (this.canvas != null) {\r\n      if (this.canvas.isDrawingMode) {\r\n        this.widthControl.setValue(this.canvas.freeDrawingBrush.width);\r\n        return;\r\n      }\r\n      const objects = this.canvas.getActiveObjects();\r\n      if (objects.length === 0) {\r\n        this.widthControl.setValue(undefined);\r\n        return;\r\n      }\r\n      const firstObject = objects[0];\r\n      let strokeWidth: number | undefined;\r\n      if (\r\n        firstObject.type === 'textbox' &&\r\n        (firstObject as fabric.IText).isEditing\r\n      ) {\r\n        const text: fabric.IText = firstObject as fabric.IText;\r\n        const selectionStyles = text.getSelectionStyles();\r\n        if (selectionStyles.length === 0) {\r\n          this.widthControl.setValue(undefined);\r\n          return;\r\n        }\r\n        strokeWidth = selectionStyles[0]['strokeWidth'];\r\n        for (const style of selectionStyles) {\r\n          if (strokeWidth !== style['strokeWidth']) {\r\n            this.widthControl.setValue(undefined);\r\n            return;\r\n          }\r\n        }\r\n      } else {\r\n        strokeWidth = firstObject.get('strokeWidth');\r\n        for (const object of objects) {\r\n          if (strokeWidth !== object.get('strokeWidth')) {\r\n            this.widthControl.setValue(undefined);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      this.widthControl.setValue(strokeWidth);\r\n    } else {\r\n      throw new Error('PropertiesFormService not initialized');\r\n    }\r\n  }\r\n\r\n  private setWidth(width: number): void {\r\n    if (this.canvas != null) {\r\n      if (this.canvas.isDrawingMode) {\r\n        this.canvas.freeDrawingBrush.width = width;\r\n        return;\r\n      }\r\n      const objects = this.canvas.getActiveObjects();\r\n      for (const object of objects) {\r\n        if (object.type === 'textbox' && (object as fabric.IText).isEditing) {\r\n          const text: fabric.IText = object as fabric.IText;\r\n          text.setSelectionStyles({ strokeWidth: width });\r\n        } else {\r\n          object.set('strokeWidth', width);\r\n        }\r\n      }\r\n      this.canvas.renderAll();\r\n    }\r\n  }\r\n\r\n  private get widthControl(): FormControl {\r\n    return this.propertiesForm.get('width') as FormControl;\r\n  }\r\n\r\n  get widthControlValue(): number {\r\n    return this.widthControl.value;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { fabric } from 'fabric';\r\n\r\ntype TextFormValue = {\r\n  bold: boolean;\r\n  italic: boolean;\r\n  underline: boolean;\r\n  strikethrough: boolean;\r\n};\r\n\r\n@Injectable()\r\nexport class TextFormService implements OnDestroy {\r\n  private canvas?: fabric.Canvas;\r\n\r\n  textForm: FormGroup = this.fb.group({\r\n    bold: this.fb.control(false, Validators.required),\r\n    italic: this.fb.control(false, Validators.required),\r\n    underline: this.fb.control(false, Validators.required),\r\n    strikethrough: this.fb.control(false, Validators.required),\r\n  });\r\n\r\n  private textFormSubscriptions: Subscription[] = [];\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  init(canvas: fabric.Canvas): void {\r\n    this.canvas = canvas;\r\n    this.textFormSubscriptions.push(\r\n      this.boldControl.valueChanges.subscribe((value) => this.setBold(value))\r\n    );\r\n    this.textFormSubscriptions.push(\r\n      this.italicControl.valueChanges.subscribe((value) =>\r\n        this.setItalic(value)\r\n      )\r\n    );\r\n    this.textFormSubscriptions.push(\r\n      this.underlineControl.valueChanges.subscribe((value) =>\r\n        this.setUnderline(value)\r\n      )\r\n    );\r\n    this.textFormSubscriptions.push(\r\n      this.strikethroughControl.valueChanges.subscribe((value) =>\r\n        this.setStrikethrough(value)\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const subscription of this.textFormSubscriptions) {\r\n      subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the text form after the selection changed\r\n   */\r\n  updateTextForm(): void {\r\n    if (this.canvas != null) {\r\n      const objects = this.canvas\r\n        .getActiveObjects()\r\n        .filter((object) => object.type === 'textbox');\r\n      const values: TextFormValue = {\r\n        bold: true,\r\n        italic: true,\r\n        underline: true,\r\n        strikethrough: true,\r\n      };\r\n      if (objects.length === 0) {\r\n        values.bold = false;\r\n        values.italic = false;\r\n        values.underline = false;\r\n        values.strikethrough = false;\r\n      }\r\n      for (const object of objects) {\r\n        const text: fabric.IText = object as fabric.IText;\r\n        if (text.isEditing) {\r\n          const selectionStyles = text.getSelectionStyles();\r\n          if (selectionStyles.length === 0) {\r\n            values.bold = false;\r\n            values.italic = false;\r\n            values.underline = false;\r\n            values.strikethrough = false;\r\n          }\r\n          for (const style of selectionStyles) {\r\n            if (!('fontWeight' in style) || style['fontWeight'] !== 'bold') {\r\n              values.bold = false;\r\n            }\r\n            if (!('fontStyle' in style) || style['fontStyle'] !== 'italic') {\r\n              values.italic = false;\r\n            }\r\n            if (!('underline' in style) || !style['underline']) {\r\n              values.underline = false;\r\n            }\r\n            if (!('linethrough' in style) || !style['linethrough']) {\r\n              values.strikethrough = false;\r\n            }\r\n          }\r\n        } else {\r\n          if (text.get('fontWeight') !== 'bold') {\r\n            values.bold = false;\r\n          }\r\n          if (text.get('fontStyle') !== 'italic') {\r\n            values.italic = false;\r\n          }\r\n          if (!text.get('underline')) {\r\n            values.underline = false;\r\n          }\r\n          if (!text.get('linethrough')) {\r\n            values.strikethrough = false;\r\n          }\r\n        }\r\n      }\r\n      this.textForm.setValue(values, { emitEvent: false });\r\n    } else {\r\n      throw new Error('TextFormService not initialized');\r\n    }\r\n  }\r\n\r\n  private setBold(bold: boolean): void {\r\n    const value = bold ? 'bold' : 'normal';\r\n    this.setTextStyle('fontWeight', value);\r\n  }\r\n\r\n  private setItalic(italic: boolean): void {\r\n    const value = italic ? 'italic' : 'normal';\r\n    this.setTextStyle('fontStyle', value);\r\n  }\r\n\r\n  private setUnderline(underline: boolean): void {\r\n    this.setTextStyle('underline', underline);\r\n  }\r\n\r\n  private setStrikethrough(strikethrough: boolean): void {\r\n    this.setTextStyle('linethrough', strikethrough);\r\n  }\r\n\r\n  private setTextStyle(\r\n    key: keyof fabric.IText,\r\n    value: string | boolean | undefined\r\n  ): void {\r\n    if (this.canvas != null) {\r\n      const activeObjects = this.canvas.getActiveObjects();\r\n      for (const activeObject of activeObjects) {\r\n        if (activeObject.type === 'textbox') {\r\n          const text: fabric.IText = activeObject as fabric.IText;\r\n          if (text.isEditing) {\r\n            text.setSelectionStyles({ [key]: value });\r\n          } else {\r\n            text.set(key, value);\r\n            text.setSelectionStyles({ [key]: value }, 0, text.text!.length);\r\n          }\r\n        }\r\n      }\r\n      this.canvas.renderAll();\r\n    }\r\n  }\r\n\r\n  private get boldControl(): FormControl {\r\n    return this.textForm.get('bold') as FormControl;\r\n  }\r\n\r\n  private get italicControl(): FormControl {\r\n    return this.textForm.get('italic') as FormControl;\r\n  }\r\n\r\n  private get underlineControl(): FormControl {\r\n    return this.textForm.get('underline') as FormControl;\r\n  }\r\n\r\n  private get strikethroughControl(): FormControl {\r\n    return this.textForm.get('strikethrough') as FormControl;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { fabric } from 'fabric';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { WhiteboardCanvas } from '../../whiteboard-meta-model/whiteboard';\r\nimport { WhiteboardCanvasControls } from './whiteboard-canvas-controls';\r\nimport { CanvasNote } from '../../whiteboard-meta-model/canvas-note';\r\nimport { WhiteboardCanvasService } from '../../whiteboard-meta-model/whiteboard-canvas.service';\r\nimport { ColorDefinition, colors, noColor } from './color-definition';\r\nimport { TextFormService } from './text-form.service';\r\nimport { ColorControls, ColorFormService } from './color-form.service';\r\nimport { ControlFormService, Controls } from './control-form.service';\r\nimport { PropertiesFormService } from './properties-form.service';\r\n\r\n@Component({\r\n  selector: 'app-whiteboard-canvas',\r\n  templateUrl: './whiteboard-canvas.component.html',\r\n  styleUrls: ['./whiteboard-canvas.component.css'],\r\n  providers: [\r\n    ColorFormService,\r\n    ControlFormService,\r\n    PropertiesFormService,\r\n    TextFormService,\r\n  ],\r\n})\r\nexport class WhiteboardCanvasComponent\r\n  implements WhiteboardCanvasControls, AfterViewInit, OnDestroy\r\n{\r\n  @Input() whiteboardCanvas!: WhiteboardCanvas;\r\n\r\n  @ViewChild('canvasElement') canvasElement!: ElementRef<HTMLCanvasElement>;\r\n  @ViewChild('canvasWrapper') canvasWrapper!: ElementRef<HTMLDivElement>;\r\n\r\n  private canvas!: fabric.Canvas;\r\n\r\n  private resizeSubscription?: Subscription;\r\n  private controlChangeSubscription?: Subscription;\r\n\r\n  private zoomValue: number = 1;\r\n  private lastMousePosition?: fabric.Point;\r\n  private moving: boolean = false;\r\n  private adding: boolean = false;\r\n\r\n  constructor(\r\n    private colorFormService: ColorFormService,\r\n    private controlFormService: ControlFormService,\r\n    private propertiesFormService: PropertiesFormService,\r\n    private textFormService: TextFormService,\r\n    private whiteboardCanvasService: WhiteboardCanvasService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    void this.initCanvas();\r\n    this.controlChangeSubscription =\r\n      this.controlFormService.controlControl.valueChanges\r\n        .pipe(tap((value) => this.controlChange(value)))\r\n        .subscribe();\r\n    this.resizeSubscription = fromEvent(window, 'resize')\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(() => this.resize())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.resizeSubscription != null) {\r\n      this.resizeSubscription.unsubscribe();\r\n    }\r\n    if (this.canvas != null) {\r\n      this.canvas.dispose();\r\n    }\r\n  }\r\n\r\n  private async initCanvas(): Promise<void> {\r\n    this.canvas = await this.whiteboardCanvasService.getWhiteboardCanvas(\r\n      this.canvasElement.nativeElement,\r\n      this.whiteboardCanvas\r\n    );\r\n    this.canvas.freeDrawingBrush.color = colors[0].value!;\r\n    this.canvas.freeDrawingBrush.width =\r\n      this.propertiesFormService.widthControlValue;\r\n    this.resize();\r\n    this.colorFormService.init(this.canvas);\r\n    this.textFormService.init(this.canvas);\r\n    this.propertiesFormService.init(this.canvas);\r\n    this.canvas.on('mouse:move', (options) => this.mouseMove(options));\r\n    this.canvas.on('mouse:down', (options) => this.mouseDown(options));\r\n    this.canvas.on('mouse:up', (options) => this.mouseUp(options));\r\n    this.canvas.on('selection:created', () => this.updateForms());\r\n    this.canvas.on('selection:updated', () => this.updateForms());\r\n    this.canvas.on('selection:cleared', () => this.updateForms());\r\n    this.canvas.on('text:selection:changed', () => this.updateForms());\r\n  }\r\n\r\n  private resize(): void {\r\n    const newWidth = this.canvasWrapper.nativeElement.clientWidth;\r\n    this.canvas.setWidth(newWidth);\r\n    this.canvas.setHeight(newWidth / 3.5);\r\n    this.canvas.setZoom((newWidth * this.zoomValue) / 1140);\r\n  }\r\n\r\n  /**\r\n   * Update the different forms if the selection changes\r\n   */\r\n  private updateForms(): void {\r\n    this.colorFormService.updateColorForm();\r\n    this.textFormService.updateTextForm();\r\n    this.propertiesFormService.updatePropertiesForm();\r\n  }\r\n\r\n  private controlChange(controlValue: Controls): void {\r\n    this.canvas.selection = true;\r\n    this.canvas.isDrawingMode = false;\r\n    switch (controlValue) {\r\n      case Controls.VIEW:\r\n        this.canvas.defaultCursor = 'default';\r\n        break;\r\n      case Controls.MOVE:\r\n        this.canvas.defaultCursor = 'move';\r\n        this.canvas.selection = false;\r\n        break;\r\n      case Controls.DRAWING:\r\n        this.canvas.isDrawingMode = true;\r\n        break;\r\n      case Controls.TEXT:\r\n      case Controls.NOTE:\r\n      case Controls.RECT:\r\n        this.canvas.defaultCursor = 'cell';\r\n        break;\r\n    }\r\n    this.colorFormService.updateColorForm();\r\n    this.propertiesFormService.updatePropertiesForm();\r\n  }\r\n\r\n  private mouseMove(options: fabric.IEvent<MouseEvent>): void {\r\n    if (options.absolutePointer == null) {\r\n      return;\r\n    }\r\n    if (\r\n      this.moving &&\r\n      this.lastMousePosition != null &&\r\n      this.controlFormService.controlValue === Controls.MOVE\r\n    ) {\r\n      const viewport = this.canvas.viewportTransform!;\r\n      viewport[4] += options.absolutePointer.x - this.lastMousePosition.x;\r\n      viewport[5] += options.absolutePointer.y - this.lastMousePosition.y;\r\n      this.canvas.setViewportTransform(viewport);\r\n    }\r\n  }\r\n\r\n  private mouseDown(options: fabric.IEvent<MouseEvent>): void {\r\n    if (options.target != null || options.absolutePointer == null) {\r\n      return;\r\n    }\r\n    switch (this.controlFormService.controlValue) {\r\n      case Controls.TEXT:\r\n        const text = new fabric.Textbox('Text', {\r\n          top: options.absolutePointer.y,\r\n          left: options.absolutePointer.x,\r\n          width: 50,\r\n        });\r\n        this.canvas.add(text);\r\n        this.controlFormService.controlControl.setValue(Controls.VIEW);\r\n        break;\r\n      case Controls.NOTE:\r\n        this.canvas.add(this.createNote(options.absolutePointer));\r\n        this.controlFormService.controlControl.setValue(Controls.VIEW);\r\n        break;\r\n      case Controls.RECT:\r\n        this.lastMousePosition = options.absolutePointer;\r\n        this.adding = true;\r\n        break;\r\n      case Controls.MOVE:\r\n        this.lastMousePosition = options.absolutePointer;\r\n        this.moving = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  private mouseUp(options: fabric.IEvent<MouseEvent>): void {\r\n    if (\r\n      this.adding &&\r\n      options.absolutePointer != null &&\r\n      this.lastMousePosition != null\r\n    ) {\r\n      let position: {\r\n        left: number;\r\n        top: number;\r\n        width: number;\r\n        height: number;\r\n      };\r\n      if (options.absolutePointer.distanceFrom(this.lastMousePosition) < 10) {\r\n        position = {\r\n          left: options.absolutePointer.x - 10,\r\n          top: options.absolutePointer.y - 10,\r\n          width: 20,\r\n          height: 20,\r\n        };\r\n      } else {\r\n        position = {\r\n          left: Math.min(this.lastMousePosition.x, options.absolutePointer.x),\r\n          top: Math.min(this.lastMousePosition.y, options.absolutePointer.y),\r\n          width: Math.abs(this.lastMousePosition.x - options.absolutePointer.x),\r\n          height: Math.abs(\r\n            this.lastMousePosition.y - options.absolutePointer.y\r\n          ),\r\n        };\r\n      }\r\n      switch (this.controlFormService.controlValue) {\r\n        case Controls.RECT:\r\n          const rect = new fabric.Rect({\r\n            ...position,\r\n            fill: colors[1].value,\r\n          });\r\n          this.canvas.add(rect);\r\n          break;\r\n      }\r\n      this.controlFormService.controlControl.setValue(Controls.VIEW);\r\n    }\r\n    this.moving = false;\r\n    this.adding = false;\r\n  }\r\n\r\n  @HostListener('window:keydown', ['$event'])\r\n  private keydown(event: KeyboardEvent): void {\r\n    switch (event.key) {\r\n      case 'Delete':\r\n      case 'Backspace':\r\n        // TODO look for interference with other input fields first\r\n        break;\r\n    }\r\n  }\r\n\r\n  zoom(number: number): void {\r\n    this.zoomValue += number * 0.1;\r\n    this.resize();\r\n  }\r\n\r\n  zoomReset(): void {\r\n    this.zoomValue = 1;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Deletes currently selected object\r\n   */\r\n  delete(): void {\r\n    this.canvas.remove(...this.canvas.getActiveObjects());\r\n    this.canvas.discardActiveObject();\r\n  }\r\n\r\n  save(): string {\r\n    return this.whiteboardCanvasService.getWhiteboardCanvasSerialization(\r\n      this.canvas\r\n    );\r\n  }\r\n\r\n  get colorMenuShown(): boolean {\r\n    return this.controlFormService.colorMenuShown;\r\n  }\r\n\r\n  get fontMenuShown(): boolean {\r\n    return this.controlFormService.fontMenuShown;\r\n  }\r\n\r\n  get propertiesMenuShown(): boolean {\r\n    return this.controlFormService.propertiesMenuShown;\r\n  }\r\n\r\n  get controls(): typeof Controls {\r\n    return Controls;\r\n  }\r\n\r\n  get colorControls(): typeof ColorControls {\r\n    return ColorControls;\r\n  }\r\n\r\n  get colors(): ColorDefinition[] {\r\n    return colors;\r\n  }\r\n\r\n  get noColor(): ColorDefinition {\r\n    return noColor;\r\n  }\r\n\r\n  get isDrawingMode(): boolean {\r\n    return !!this.canvas?.isDrawingMode;\r\n  }\r\n\r\n  get controlsForm(): FormGroup {\r\n    return this.controlFormService.controlsForm;\r\n  }\r\n\r\n  get colorForm(): FormGroup {\r\n    return this.colorFormService.colorForm;\r\n  }\r\n\r\n  get textForm(): FormGroup {\r\n    return this.textFormService.textForm;\r\n  }\r\n\r\n  get propertiesForm(): FormGroup {\r\n    return this.propertiesFormService.propertiesForm;\r\n  }\r\n\r\n  private createNote(point: fabric.Point): fabric.Group {\r\n    return new CanvasNote({\r\n      color: colors[3].value,\r\n      darkerColor: colors[3].darker,\r\n      point,\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex mb-1 justify-content-center\">\r\n  <div class=\"d-flex flex-1\">\r\n    <div class=\"btn-group\" role=\"group\" aria-label=\"Zoom\">\r\n      <button type=\"button\" class=\"btn btn-light\" (click)=\"zoom(-1)\">\r\n        <i class=\"fas fa-minus fa-fw whiteboard-icon\"></i\r\n        ><span class=\"sr-only\">Zoom out</span>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-light\" (click)=\"zoom(1)\">\r\n        <i class=\"fas fa-plus fa-fw whiteboard-icon\"></i\r\n        ><span class=\"sr-only\">Zoom in</span>\r\n      </button>\r\n      <button type=\"button\" class=\"ml-3 btn btn-light\" (click)=\"zoomReset()\">\r\n        <b>Reset zoom</b>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"d-flex\">\r\n    <form [formGroup]=\"controlsForm\">\r\n      <div\r\n        class=\"btn-group btn-group-toggle\"\r\n        ngbRadioGroup\r\n        name=\"control\"\r\n        formControlName=\"control\"\r\n      >\r\n        <label ngbButtonLabel class=\"btn-light\">\r\n          <input ngbButton type=\"radio\" [value]=\"controls.VIEW\" />\r\n          <i class=\"fas fa-mouse-pointer fa-fw whiteboard-icon\"></i\r\n          ><span class=\"sr-only\">View</span>\r\n        </label>\r\n        <label ngbButtonLabel class=\"btn-light\">\r\n          <input ngbButton type=\"radio\" [value]=\"controls.MOVE\" />\r\n          <i class=\"fas fa-arrows-alt fa-fw whiteboard-icon\"></i\r\n          ><span class=\"sr-only\">Move screen</span>\r\n        </label>\r\n        <label ngbButtonLabel class=\"btn-light\">\r\n          <input ngbButton type=\"radio\" [value]=\"controls.DRAWING\" />\r\n          <i class=\"fas fa-pen fa-fw whiteboard-icon\"></i\r\n          ><span class=\"sr-only\">Free drawing</span>\r\n        </label>\r\n        <label ngbButtonLabel class=\"btn-light\">\r\n          <input ngbButton type=\"radio\" [value]=\"controls.TEXT\" />\r\n          <i class=\"fas fa-paragraph fa-fw whiteboard-icon\"></i\r\n          ><span class=\"sr-only\">Text</span>\r\n        </label>\r\n        <label ngbButtonLabel class=\"btn-light\">\r\n          <input ngbButton type=\"radio\" [value]=\"controls.NOTE\" />\r\n          <i class=\"far fa-sticky-note fa-fw whiteboard-icon\"></i\r\n          ><span class=\"sr-only\">Note</span>\r\n        </label>\r\n        <label ngbButtonLabel class=\"btn-light\">\r\n          <input ngbButton type=\"radio\" [value]=\"controls.RECT\" />\r\n          <i class=\"far fa-square fa-fw whiteboard-icon\"></i\r\n          ><span class=\"sr-only\">Rectangle</span>\r\n        </label>\r\n      </div>\r\n      <div class=\"ml-3 btn-group btn-group-toggle\">\r\n        <label class=\"btn-light\" ngbButtonLabel>\r\n          <input type=\"checkbox\" formControlName=\"colorMenu\" ngbButton />\r\n          <i class=\"fas fa-palette fa-fw whiteboard-icon\"></i\r\n          ><span class=\"sr-only\">Color</span>\r\n        </label>\r\n        <label class=\"btn-light\" ngbButtonLabel>\r\n          <input type=\"checkbox\" formControlName=\"fontMenu\" ngbButton />\r\n          <i class=\"fas fa-font fa-fw whiteboard-icon\"></i\r\n          ><span class=\"sr-only\">Font</span>\r\n        </label>\r\n        <label class=\"btn-light\" ngbButtonLabel>\r\n          <input type=\"checkbox\" formControlName=\"propertiesMenu\" ngbButton />\r\n          <i class=\"fas fa-sliders-h fa-fw whiteboard-icon\"></i\r\n          ><span class=\"sr-only\">Properties</span>\r\n        </label>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"flex-1 d-flex\">\r\n    <button class=\"ml-auto btn btn-light\" (click)=\"delete()\">\r\n      <i class=\"fas fa-trash fa-fw whiteboard-icon\"></i\r\n      ><span class=\"sr-only\">Delete</span>\r\n    </button>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"colorMenuShown\" class=\"d-flex mb-1 justify-content-center\">\r\n  <form [formGroup]=\"colorForm\">\r\n    <div\r\n      *ngIf=\"!isDrawingMode\"\r\n      class=\"btn-group btn-group-toggle mr-3\"\r\n      ngbRadioGroup\r\n      name=\"control\"\r\n      formControlName=\"control\"\r\n    >\r\n      <label ngbButtonLabel class=\"btn-light\">\r\n        <input ngbButton type=\"radio\" [value]=\"colorControls.FILL\" />\r\n        <i class=\"fas fa-square fa-fw whiteboard-icon\"></i\r\n        ><span class=\"sr-only\">fill</span>\r\n      </label>\r\n      <label ngbButtonLabel class=\"btn-light\">\r\n        <input ngbButton type=\"radio\" [value]=\"colorControls.STROKE\" />\r\n        <i class=\"far fa-square fa-fw whiteboard-icon\"></i\r\n        ><span class=\"sr-only\">outline</span>\r\n      </label>\r\n    </div>\r\n    <div\r\n      class=\"btn-group btn-group-toggle\"\r\n      ngbRadioGroup\r\n      name=\"color\"\r\n      formControlName=\"color\"\r\n    >\r\n      <label *ngIf=\"!isDrawingMode\" ngbButtonLabel class=\"btn-light\">\r\n        <input ngbButton type=\"radio\" [value]=\"noColor\" />\r\n        <i class=\"fas fa-tint-slash fa-fw whiteboard-icon\"></i\r\n        ><span class=\"sr-only\">{{ noColor.name }}</span>\r\n      </label>\r\n      <label *ngFor=\"let color of colors\" ngbButtonLabel class=\"btn-light\">\r\n        <input ngbButton type=\"radio\" [value]=\"color\" />\r\n        <i\r\n          [style.color]=\"color.value\"\r\n          class=\"fas fa-square fa-fw whiteboard-icon\"\r\n        ></i\r\n        ><span class=\"sr-only\">{{ color.name }}</span>\r\n      </label>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div *ngIf=\"fontMenuShown\" class=\"d-flex mb-1 justify-content-center\">\r\n  <form [formGroup]=\"textForm\">\r\n    <div class=\"btn-group btn-group-toggle\">\r\n      <label class=\"btn-light\" ngbButtonLabel>\r\n        <input type=\"checkbox\" formControlName=\"bold\" ngbButton />\r\n        <i class=\"fas fa-bold fa-fw whiteboard-icon\"></i\r\n        ><span class=\"sr-only\">bold</span>\r\n      </label>\r\n      <label class=\"btn-light\" ngbButtonLabel>\r\n        <input type=\"checkbox\" formControlName=\"italic\" ngbButton />\r\n        <i class=\"fas fa-italic fa-fw whiteboard-icon\"></i\r\n        ><span class=\"sr-only\">italic</span>\r\n      </label>\r\n      <label class=\"btn-light\" ngbButtonLabel>\r\n        <input type=\"checkbox\" formControlName=\"underline\" ngbButton />\r\n        <i class=\"fas fa-underline fa-fw whiteboard-icon\"></i\r\n        ><span class=\"sr-only\">underline</span>\r\n      </label>\r\n      <label class=\"btn-light\" ngbButtonLabel>\r\n        <input type=\"checkbox\" formControlName=\"strikethrough\" ngbButton />\r\n        <i class=\"fas fa-strikethrough fa-fw whiteboard-icon\"></i\r\n        ><span class=\"sr-only\">strikethrough</span>\r\n      </label>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div *ngIf=\"propertiesMenuShown\" class=\"d-flex mb-1 justify-content-center\">\r\n  <form [formGroup]=\"propertiesForm\">\r\n    <div class=\"form-group mb-0\">\r\n      <label for=\"widthInput\">Line Width</label>\r\n      <input\r\n        id=\"widthInput\"\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        formControlName=\"width\"\r\n        min=\"0\"\r\n        step=\"0.1\"\r\n        placeholder=\"e.g., 1\"\r\n      />\r\n    </div>\r\n  </form>\r\n</div>\r\n<div class=\"border\" #canvasWrapper>\r\n  <canvas #canvasElement></canvas>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { RunningProcessService } from '../development-process-registry/running-process/running-process.service';\r\nimport { StepInfo } from '../development-process-registry/module-api/step-info';\r\nimport {\r\n  ArtifactData,\r\n  ArtifactDataReference,\r\n  ArtifactDataType,\r\n} from '../development-process-registry/running-process/artifact-data';\r\nimport { DbId } from '../database/database-entry';\r\nimport { WhiteboardInstance } from '../whiteboard-meta-model/whiteboard-instance';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WhiteboardResolveService {\r\n  constructor(private runningProcessService: RunningProcessService) {}\r\n\r\n  resolve(stepInfo: StepInfo, whiteboardInstanceId: DbId): void {\r\n    const placeData = this.getPlaceData(whiteboardInstanceId);\r\n    void this.runningProcessService.finishExecuteStep(stepInfo, {\r\n      outputArtifactData: [placeData],\r\n    });\r\n  }\r\n\r\n  private getPlaceData(whiteboardInstanceId: DbId): ArtifactData {\r\n    const reference: ArtifactDataReference = {\r\n      id: whiteboardInstanceId,\r\n      type: WhiteboardInstance.typeName,\r\n    };\r\n    return new ArtifactData(undefined, {\r\n      data: reference,\r\n      type: ArtifactDataType.REFERENCE,\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../database/auth.guard';\r\nimport { WhiteboardTemplatesComponent } from './whiteboard-templates/whiteboard-templates.component';\r\nimport { WhiteboardTemplateComponent } from './whiteboard-template/whiteboard-template.component';\r\nimport { CreateWhiteboardInstanceComponent } from './api/create-whiteboard-instance/create-whiteboard-instance.component';\r\nimport { EditWhiteboardInstanceComponent } from './api/edit-whiteboard-instance/edit-whiteboard-instance.component';\r\nimport { ViewWhiteboardInstanceComponent } from './api/view-whiteboard-instance/view-whiteboard-instance.component';\r\nimport { WhiteboardChangeGuard } from './shared/whiteboard-change.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'whiteboard',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'templates',\r\n        children: [\r\n          { path: '', component: WhiteboardTemplatesComponent },\r\n          {\r\n            path: ':id',\r\n            component: WhiteboardTemplateComponent,\r\n            canDeactivate: [WhiteboardChangeGuard],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: 'instance',\r\n        children: [\r\n          { path: 'create', component: CreateWhiteboardInstanceComponent },\r\n          {\r\n            path: ':id',\r\n            children: [\r\n              {\r\n                path: 'edit',\r\n                component: EditWhiteboardInstanceComponent,\r\n                canDeactivate: [WhiteboardChangeGuard],\r\n              },\r\n              { path: 'view', component: ViewWhiteboardInstanceComponent },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class WhiteboardRoutingModule {}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { WhiteboardTemplateLoaderService } from '../shared/whiteboard-template-loader.service';\r\nimport { WhiteboardTemplate } from '../../whiteboard-meta-model/whiteboard-template';\r\nimport { WhiteboardCanvasComponent } from '../whiteboard-canvas/whiteboard-canvas.component';\r\nimport { WhiteboardCanvasControls } from '../whiteboard-canvas/whiteboard-canvas-controls';\r\nimport { WhiteboardTemplateService } from '../../whiteboard-meta-model/whiteboard-template.service';\r\nimport { WhiteboardEditComponent } from '../shared/whiteboard-edit-component';\r\n\r\n@Component({\r\n  selector: 'app-whiteboard-template',\r\n  templateUrl: './whiteboard-template.component.html',\r\n  styleUrls: ['./whiteboard-template.component.css'],\r\n  providers: [WhiteboardTemplateLoaderService],\r\n})\r\nexport class WhiteboardTemplateComponent implements WhiteboardEditComponent {\r\n  @ViewChild(WhiteboardCanvasComponent)\r\n  whiteboardCanvasControls!: WhiteboardCanvasControls;\r\n\r\n  constructor(\r\n    private whiteboardTemplateLoaderService: WhiteboardTemplateLoaderService,\r\n    private whiteboardTemplateService: WhiteboardTemplateService\r\n  ) {}\r\n\r\n  async saveWhiteboard(): Promise<void> {\r\n    if (this.whiteboardTemplate != null) {\r\n      const whiteboard = this.whiteboardCanvasControls.save();\r\n      await this.whiteboardTemplateService.saveWhiteboardCanvas(\r\n        this.whiteboardTemplate._id,\r\n        whiteboard\r\n      );\r\n    }\r\n  }\r\n\r\n  get whiteboardTemplate(): WhiteboardTemplate | undefined {\r\n    return this.whiteboardTemplateLoaderService.whiteboardTemplate;\r\n  }\r\n\r\n  async whiteboardChanged(): Promise<boolean> {\r\n    if (this.whiteboardTemplate != null) {\r\n      return (\r\n        this.whiteboardCanvasControls.save() !==\r\n        this.whiteboardTemplate.whiteboard\r\n      );\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link\" [routerLink]=\"['/', 'whiteboard', 'templates']\">\r\n      Whiteboard Templates\r\n    </a>\r\n    <a\r\n      *ngIf=\"whiteboardTemplate != null\"\r\n      class=\"nav-link active\"\r\n      [routerLink]=\"[]\"\r\n    >\r\n      {{ whiteboardTemplate.name }}\r\n    </a>\r\n  </nav>\r\n</div>\r\n\r\n<main *ngIf=\"whiteboardTemplate != null\" role=\"main\">\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2\">Whiteboard Template</h6>\r\n    <app-whiteboard-canvas\r\n      [whiteboardCanvas]=\"whiteboardTemplate.whiteboard\"\r\n    ></app-whiteboard-canvas>\r\n    <button class=\"btn btn-primary mt-1\" (click)=\"saveWhiteboard()\">\r\n      Save Whiteboard\r\n    </button>\r\n  </div>\r\n</main>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ELEMENT_SERVICE, ListService } from '../../shared/list.service';\r\nimport {\r\n  WhiteboardTemplate,\r\n  WhiteboardTemplateEntry,\r\n  WhiteboardTemplateInit,\r\n} from '../../whiteboard-meta-model/whiteboard-template';\r\nimport { WhiteboardTemplateService } from '../../whiteboard-meta-model/whiteboard-template.service';\r\n\r\n@Component({\r\n  selector: 'app-whiteboard-templates',\r\n  templateUrl: './whiteboard-templates.component.html',\r\n  styleUrls: ['./whiteboard-templates.component.css'],\r\n  providers: [\r\n    ListService,\r\n    { provide: ELEMENT_SERVICE, useExisting: WhiteboardTemplateService },\r\n  ],\r\n})\r\nexport class WhiteboardTemplatesComponent {\r\n  whiteboardTemplateForm = this.fb.group({\r\n    name: this.fb.control('', Validators.required),\r\n  });\r\n\r\n  modalWhiteboardTemplate?: WhiteboardTemplateEntry;\r\n  private modalReference?: NgbModalRef;\r\n\r\n  @ViewChild('deleteWhiteboardTemplateModal', { static: true })\r\n  deleteWhiteboardTemplateModal: unknown;\r\n\r\n  constructor(\r\n    private listService: ListService<\r\n      WhiteboardTemplate,\r\n      WhiteboardTemplateInit\r\n    >,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private whiteboardTemplateService: WhiteboardTemplateService\r\n  ) {}\r\n\r\n  openDeleteWhiteboardTemplateModal(\r\n    whiteboardTemplate: WhiteboardTemplateEntry\r\n  ): void {\r\n    this.modalWhiteboardTemplate = whiteboardTemplate;\r\n    this.modalReference = this.modalService.open(\r\n      this.deleteWhiteboardTemplateModal,\r\n      {\r\n        size: 'lg',\r\n      }\r\n    );\r\n  }\r\n\r\n  async deleteWhiteboardTemplate(id: string): Promise<void> {\r\n    await this.listService.delete(id);\r\n  }\r\n\r\n  async addWhiteboardTemplate(\r\n    whiteboardTemplateForm: FormGroup\r\n  ): Promise<void> {\r\n    await this.listService.add(\r\n      this.whiteboardTemplateService.getWhiteboardTemplateInitialization(\r\n        whiteboardTemplateForm.value.name\r\n      )\r\n    );\r\n    this.whiteboardTemplateForm.reset();\r\n  }\r\n\r\n  get whiteboardTemplatesList(): WhiteboardTemplateEntry[] {\r\n    return this.listService.elements;\r\n  }\r\n\r\n  get noResults(): boolean {\r\n    return this.listService.noResults;\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this.listService.loading;\r\n  }\r\n\r\n  get reloading(): boolean {\r\n    return this.listService.reloading;\r\n  }\r\n}\r\n","<ng-template #deleteWhiteboardTemplateModal let-d=\"dismiss\" let-c=\"close\">\r\n  <app-delete-modal\r\n    (dismiss)=\"d()\"\r\n    (delete)=\"deleteWhiteboardTemplate(modalWhiteboardTemplate._id); c()\"\r\n  >\r\n    <div modalTitle>\r\n      Delete Whiteboard Template {{ modalWhiteboardTemplate.name }}\r\n    </div>\r\n    You are deleting the whiteboard template\r\n    {{ modalWhiteboardTemplate.name }}. This can not be undone. This action will\r\n    not delete the whiteboard template from whiteboard instances that are using\r\n    it.\r\n  </app-delete-modal>\r\n</ng-template>\r\n\r\n<div class=\"nav-scroller bg-white shadow-sm\">\r\n  <nav class=\"nav nav-underline\">\r\n    <a class=\"nav-link active\" [routerLink]=\"[]\">Whiteboard Templates</a>\r\n    <a\r\n      *ngFor=\"let whiteboardTemplate of whiteboardTemplatesList\"\r\n      class=\"nav-link\"\r\n      [routerLink]=\"[whiteboardTemplate._id]\"\r\n      >{{ whiteboardTemplate.name }}</a\r\n    >\r\n  </nav>\r\n</div>\r\n\r\n<main role=\"main\" class=\"container\">\r\n  <div class=\"my-3 alert alert-info\" role=\"alert\">\r\n    Create Whiteboard Templates to use them for Whiteboard Instances\r\n  </div>\r\n\r\n  <app-list-wrapper\r\n    listTitle=\"Whiteboard Templates\"\r\n    [reloading]=\"reloading\"\r\n    [loading]=\"loading\"\r\n    [noResults]=\"noResults\"\r\n  >\r\n    <div noResults>No Whiteboard Templates defined.</div>\r\n    <ul results class=\"list-group\">\r\n      <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"let whiteboardTemplate of whiteboardTemplatesList\"\r\n      >\r\n        <app-results-list-item\r\n          [viewLink]=\"[whiteboardTemplate._id]\"\r\n          (delete)=\"openDeleteWhiteboardTemplateModal(whiteboardTemplate)\"\r\n        >\r\n          <ng-container itemTitle>\r\n            {{ whiteboardTemplate.name }}\r\n          </ng-container>\r\n          <ng-container itemDescription>\r\n            {{ whiteboardTemplate.description }}\r\n          </ng-container>\r\n          <app-author-info\r\n            [author]=\"whiteboardTemplate.author\"\r\n          ></app-author-info>\r\n        </app-results-list-item>\r\n      </li>\r\n    </ul>\r\n  </app-list-wrapper>\r\n\r\n  <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n    <h6 class=\"border-bottom border-gray pb-2 mb-0\">Add Whiteboard Template</h6>\r\n    <div class=\"text-muted pt-3\">\r\n      <form\r\n        [formGroup]=\"whiteboardTemplateForm\"\r\n        (ngSubmit)=\"addWhiteboardTemplate(whiteboardTemplateForm)\"\r\n      >\r\n        <div class=\"form-group row\">\r\n          <label for=\"name\" class=\"col-sm-4 col-form-label\"\r\n            >Whiteboard Template Name</label\r\n          >\r\n          <div class=\"col-sm-8\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-sm btn-dark btn-block\"\r\n              [disabled]=\"!whiteboardTemplateForm.valid\"\r\n            >\r\n              Add Whiteboard Template\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\r\n\r\nimport { WhiteboardRoutingModule } from './whiteboard-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { WhiteboardCanvasComponent } from './whiteboard-canvas/whiteboard-canvas.component';\r\nimport { WhiteboardTemplatesComponent } from './whiteboard-templates/whiteboard-templates.component';\r\nimport { WhiteboardTemplateComponent } from './whiteboard-template/whiteboard-template.component';\r\nimport { CreateWhiteboardInstanceComponent } from './api/create-whiteboard-instance/create-whiteboard-instance.component';\r\nimport { SelectWhiteboardTemplateConfigurationComponent } from './api/select-whiteboard-template-configuration/select-whiteboard-template-configuration.component';\r\nimport { WhiteboardService } from './whiteboard.service';\r\nimport { EditWhiteboardInstanceComponent } from './api/edit-whiteboard-instance/edit-whiteboard-instance.component';\r\nimport { WhiteboardCanvasViewComponent } from './whiteboard-canvas-view/whiteboard-canvas-view.component';\r\nimport { ViewWhiteboardInstanceComponent } from './api/view-whiteboard-instance/view-whiteboard-instance.component';\r\nimport { ConfirmLeaveWhiteboardModalComponent } from './confirm-leave-whiteboard-modal/confirm-leave-whiteboard-modal.component';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (whiteboardService: WhiteboardService) => (): void =>\r\n        whiteboardService.init(),\r\n      deps: [WhiteboardService],\r\n      multi: true,\r\n    },\r\n  ],\r\n  declarations: [\r\n    WhiteboardCanvasComponent,\r\n    WhiteboardTemplatesComponent,\r\n    WhiteboardTemplateComponent,\r\n    CreateWhiteboardInstanceComponent,\r\n    SelectWhiteboardTemplateConfigurationComponent,\r\n    EditWhiteboardInstanceComponent,\r\n    WhiteboardCanvasViewComponent,\r\n    ViewWhiteboardInstanceComponent,\r\n    ConfirmLeaveWhiteboardModalComponent,\r\n  ],\r\n  imports: [SharedModule, WhiteboardRoutingModule],\r\n})\r\nexport class WhiteboardModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ModuleService } from '../development-process-registry/module-api/module.service';\r\nimport { Module } from '../development-process-registry/module-api/module';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { WhiteboardApiService } from './whiteboard-api.service';\r\nimport { WhiteboardMetaModelService } from '../whiteboard-meta-model/whiteboard-meta-model.service';\r\nimport { ArtifactDataReference } from '../development-process-registry/running-process/artifact-data';\r\nimport { Router } from '@angular/router';\r\nimport { Reference } from '../development-process-registry/meta-model-definition';\r\nimport {\r\n  CreateWhiteboardPredefinedInput,\r\n  SelectWhiteboardTemplateConfigurationComponent,\r\n} from './api/select-whiteboard-template-configuration/select-whiteboard-template-configuration.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WhiteboardService {\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private moduleService: ModuleService,\r\n    private whiteboardApiService: WhiteboardApiService,\r\n    private whiteboardMetaModelService: WhiteboardMetaModelService\r\n  ) {}\r\n\r\n  init(): void {\r\n    const module = new Module();\r\n    module.list = 'Whiteboard Tools';\r\n    module.name = 'Whiteboard Module';\r\n    this.addMethods(module);\r\n    module.service = this.whiteboardApiService;\r\n    this.moduleService.registerModule(module);\r\n    console.log('Registered Whiteboard Module');\r\n    this.whiteboardMetaModelService.registerViewMethod(\r\n      this.viewWhiteboardInstance\r\n    );\r\n    console.log(\r\n      'Registered Whiteboard Module as view method for whiteboard instances'\r\n    );\r\n  }\r\n\r\n  private addMethods(module: Module): void {\r\n    const self = this;\r\n    module.addMethod({\r\n      name: 'createWhiteboard',\r\n      description: 'Creates a whiteboard instance',\r\n      input: [],\r\n      output: [this.whiteboardMetaModelService.whiteboardMetaModelIdentifier],\r\n      configurationFormComponent:\r\n        SelectWhiteboardTemplateConfigurationComponent,\r\n      createConfigurationForm(\r\n        predefinedInput: CreateWhiteboardPredefinedInput | undefined\r\n      ): FormGroup {\r\n        if (predefinedInput == null) {\r\n          predefinedInput = {\r\n            templateId: undefined,\r\n          };\r\n        }\r\n        return self.fb.group({\r\n          templateId: [predefinedInput.templateId, Validators.required],\r\n        });\r\n      },\r\n      equalPredefinedInput(\r\n        predefinedInputA: CreateWhiteboardPredefinedInput | undefined,\r\n        predefinedInputB: CreateWhiteboardPredefinedInput | undefined\r\n      ): boolean {\r\n        if (predefinedInputA == null && predefinedInputB == null) {\r\n          return true;\r\n        }\r\n        if (predefinedInputA == null || predefinedInputB == null) {\r\n          return false;\r\n        }\r\n        return predefinedInputA.templateId === predefinedInputB.templateId;\r\n      },\r\n    });\r\n    module.addMethod({\r\n      name: 'editWhiteboard',\r\n      description: 'Edit a Whiteboard',\r\n      input: [this.whiteboardMetaModelService.whiteboardMetaModelIdentifier],\r\n      output: [this.whiteboardMetaModelService.whiteboardMetaModelIdentifier],\r\n    });\r\n    module.addMethod({\r\n      name: 'viewWhiteboard',\r\n      description: 'View a Whiteboard',\r\n      input: [this.whiteboardMetaModelService.whiteboardMetaModelIdentifier],\r\n      output: [this.whiteboardMetaModelService.whiteboardMetaModelIdentifier],\r\n    });\r\n  }\r\n\r\n  async viewWhiteboardInstance(\r\n    model: ArtifactDataReference,\r\n    router: Router,\r\n    reference: Reference\r\n  ): Promise<void> {\r\n    let queryParams: {\r\n      runningProcessId?: string;\r\n      executionId?: string;\r\n      artifactId?: string;\r\n      versionId?: number;\r\n    };\r\n    switch (reference.referenceType) {\r\n      case 'Process':\r\n        queryParams = {\r\n          runningProcessId: reference.runningProcessId,\r\n        };\r\n        break;\r\n      case 'Method':\r\n        queryParams = {\r\n          runningProcessId: reference.runningProcessId,\r\n          executionId: reference.executionId,\r\n        };\r\n        break;\r\n      case 'Artifact':\r\n        queryParams = {\r\n          artifactId: reference.artifactId,\r\n          versionId: reference.versionId,\r\n        };\r\n        break;\r\n    }\r\n    await router.navigate(['whiteboard', 'instance', model.id, 'view'], {\r\n      queryParams,\r\n    });\r\n  }\r\n}\r\n","// Automatically generated file\r\nexport const version = '1.0.3';\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  localDatabase: true,\r\n  exampleData: true,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import db from './db.json';\r\n\r\nexport default [...db.docs];\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":"webpack:///"}